added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
analysing:   %add_ln5 = add i7 %i, 1, !bitwidth ^CMakefile:9: recipe for target 'test' failed
make: *** [test] Interrupt

vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug:   %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
debug:   %bitcast_ln12 = bitcast double %b to i64, !bitwidth !37
debug:   %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
debug:   %bitcast_ln16 = bitcast double %b_1 to i64, !bitwidth !37
debug:   %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
debug:   %zext_ln5 = zext i7 %i to i64, !bitwidth !71
debug:   %b = fadd double %mul9, 1.250000e-01, !bitwidth !37
debug:   %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !71
debug:   %b_1 = fmul double %a, %a, !bitwidth !37
debug:   %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !71
debug:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
debug:   %mul9 = fmul double %add8, %a, !bitwidth !37
debug:   %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwid​‌​
th !85
debug:   %a = bitcast i64 %A_0_load to double, !bitwidth !37
debug:   %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidt​‌​
h !65
debug:   %add_ln5 = add i7 %i, 1, !bitwidth !65
debug:   %add8 = fadd double %mul7, 2.500000e-01, !bitwidth !37
debug:   %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !84
debug:   %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !72
debug:   %mul7 = fmul double %add6, %a, !bitwidth !37
debug:   %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !73
debug:   %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !72
debug:   %add6 = fadd double %mul5, 3.300000e-01, !bitwidth !37
debug:   %mul5 = fmul double %add4, %a, !bitwidth !37
debug:   %add4 = fadd double %mul3, 2.100000e-01, !bitwidth !37
debug:   %mul3 = fmul double %add2, %a, !bitwidth !37
debug:   %add2 = fadd double %mul, 0x3FE6666666666666, !bitwidth !37
debug:   %mul = fmul double %add, %a, !bitwidth !37
debug:   %add = fadd double %a, 6.400000e-01, !bitwidth !37
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !52
#0 0x00005591e4b807cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x00005591e4b8085e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x00005591e4b7ea33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x00005591e4b80037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007f47c4f848a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007f47c3975d16 llvm::PointerIntPair<llvm::ilist_node_base<true>*, 1u, unsigned int, llvm::Pointer​‌​
LikeTypeTraits<llvm::ilist_node_base<true>*>, llvm::PointerIntPairInfo<llvm::ilist_node_base<true>*, 1u,​‌​
 llvm::PointerLikeTypeTraits<llvm::ilist_node_base<true>*> > >::getInt() const /shared/dass/llvm-6.0/inc​‌​
lude/llvm/ADT/PointerIntPair.h:58:0
#6 0x00007f47c39720b4 llvm::ilist_node_base<true>::isSentinel() const /shared/dass/llvm-6.0/include/llvm​‌​
/ADT/ilist_node_base.h:46:0
#7 0x00007f47c39720d4 llvm::ilist_node_base<true>::isKnownSentinel() const /shared/dass/llvm-6.0/include​‌​
/llvm/ADT/ilist_node_base.h:47:0
#8 0x00007f47c3977109 llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, true, fal​‌​
se, void>, false, false>::operator*() const /shared/dass/llvm-6.0/include/llvm/ADT/ilist_iterator.h:140:​‌​
0
#9 0x00007f47c3962925 boogieGen::boogieGen::programSlice(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:105:0
#10 0x00007f47c39622c4 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:52:0
#11 0x00005591e4394a21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#12 0x00005591e439514b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#13 0x00005591e4395343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#14 0x00005591e35faf79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#15 0x00007f47c3c18b97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#16 0x00005591e35ca6ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Segmentation fault (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug:   %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
debug:   %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
debug:   %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
debug:   %zext_ln5 = zext i7 %i to i64, !bitwidth !71
debug:   %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !71
debug:   %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !71
debug:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
debug:   %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwid​‌​
th !85
debug:   %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidt​‌​
h !65
debug:   %add_ln5 = add i7 %i, 1, !bitwidth !65
debug:   %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !84
debug:   %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !72
debug:   %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !73
debug:   %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !72
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !52
#0 0x0000557a71a627cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x0000557a71a6285e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x0000557a71a60a33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x0000557a71a62037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007fe383f0d8a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007fe3828fdf6c llvm::PointerIntPair<llvm::ilist_node_base<true>*, 1u, unsigned int, llvm::Pointer​‌​
LikeTypeTraits<llvm::ilist_node_base<true>*>, llvm::PointerIntPairInfo<llvm::ilist_node_base<true>*, 1u,​‌​
 llvm::PointerLikeTypeTraits<llvm::ilist_node_base<true>*> > >::getInt() const /shared/dass/llvm-6.0/inc​‌​
lude/llvm/ADT/PointerIntPair.h:58:0
#6 0x00007fe3828fa30a llvm::ilist_node_base<true>::isSentinel() const /shared/dass/llvm-6.0/include/llvm​‌​
/ADT/ilist_node_base.h:46:0
#7 0x00007fe3828fa32a llvm::ilist_node_base<true>::isKnownSentinel() const /shared/dass/llvm-6.0/include​‌​
/llvm/ADT/ilist_node_base.h:47:0
#8 0x00007fe3828ff35f llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, true, fal​‌​
se, void>, false, false>::operator*() const /shared/dass/llvm-6.0/include/llvm/ADT/ilist_iterator.h:140:​‌​
0
#9 0x00007fe3828eab7b boogieGen::boogieGen::programSlice(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:107:0
#10 0x00007fe3828ea4e4 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:52:0
#11 0x0000557a71276a21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#12 0x0000557a7127714b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#13 0x0000557a71277343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#14 0x0000557a704dcf79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#15 0x00007fe382ba1b97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#16 0x0000557a704ac6ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Segmentation fault (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug:   %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
debug:   %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
debug:   %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
debug:   %zext_ln5 = zext i7 %i to i64, !bitwidth !71
debug:   %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !71
debug:   %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !71
debug:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
debug:   %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwid​‌​
th !85
debug:   %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidt​‌​
h !65
debug:   %add_ln5 = add i7 %i, 1, !bitwidth !65
debug:   %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !84
debug:   %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !72
debug:   %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !73
debug:   %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !72
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !52
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !58
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   br label %bb5, !bitwidth !64
#0 0x000055673803c7cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x000055673803c85e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x000055673803aa33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x000055673803c037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007f81438b58a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007f81422a6232 llvm::PointerIntPair<llvm::ilist_node_base<true>*, 1u, unsigned int, llvm::Pointer​‌​
LikeTypeTraits<llvm::ilist_node_base<true>*>, llvm::PointerIntPairInfo<llvm::ilist_node_base<true>*, 1u,​‌​
 llvm::PointerLikeTypeTraits<llvm::ilist_node_base<true>*> > >::getInt() const /shared/dass/llvm-6.0/inc​‌​
lude/llvm/ADT/PointerIntPair.h:58:0
#6 0x00007f81422a25d0 llvm::ilist_node_base<true>::isSentinel() const /shared/dass/llvm-6.0/include/llvm​‌​
/ADT/ilist_node_base.h:46:0
#7 0x00007f81422a25f0 llvm::ilist_node_base<true>::isKnownSentinel() const /shared/dass/llvm-6.0/include​‌​
/llvm/ADT/ilist_node_base.h:47:0
#8 0x00007f81422a7625 llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, true, fal​‌​
se, void>, false, false>::operator*() const /shared/dass/llvm-6.0/include/llvm/ADT/ilist_iterator.h:140:​‌​
0
#9 0x00007f8142292e2b boogieGen::boogieGen::programSlice(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:107:0
#10 0x00007f8142292794 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:52:0
#11 0x0000556737850a21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#12 0x000055673785114b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#13 0x0000556737851343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#14 0x0000556736ab6f79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#15 0x00007f8142549b97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#16 0x0000556736a866ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Segmentation fault (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::programSlic​‌​
e(llvm::Module&)’:                                                                                      
/shared/iiProver/src/boogieGen/boogieGen.cpp:110:45: error: ‘BrInst’ was not declared in this scope     
               if (!isa<CallInst>(I) && !isa<BrInst>(I))                                                
                                             ^~~~~~                                                     
/shared/iiProver/src/boogieGen/boogieGen.cpp:110:45: note: suggested alternative: ‘print’               
               if (!isa<CallInst>(I) && !isa<BrInst>(I))                                                
                                             ^~~~~~                                                     
                                             print                                                      
/shared/iiProver/src/boogieGen/boogieGen.cpp:110:54: error: no matching function for call to ‘isa<<expre​‌​
ssion error> >(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, true, false, voi​‌​
d>, false, false>&)’                                                                                    
               if (!isa<CallInst>(I) && !isa<BrInst>(I))                                                
                                                      ^                                                 
In file included from /shared/dass/llvm-6.0/include/llvm/Support/CBindingWrapping.h:18:0,               
                 from /shared/dass/llvm-6.0/include/llvm/IR/Use.h:30,                                   
                 from /shared/dass/llvm-6.0/include/llvm/IR/Value.h:19,                                 
                 from /shared/dass/llvm-6.0/include/llvm/IR/Argument.h:20,                              
                 from /shared/dass/llvm-6.0/include/llvm/IR/Function.h:26,                              
                 from /shared/iiProver/src/boogieGen/boogieGen.cpp:1:                                   
/shared/dass/llvm-6.0/include/llvm/Support/Casting.h:142:56: note: candidate: template<class X, class Y>​‌​
 bool llvm::isa(const Y&)
 template <class X, class Y> LLVM_NODISCARD inline bool isa(const Y &Val) {                             
                                                        ^~~                                             
/shared/dass/llvm-6.0/include/llvm/Support/Casting.h:142:56: note:   template argument deduction/substit​‌​
ution failed:
/shared/iiProver/src/boogieGen/boogieGen.cpp:110:54: error: template argument 1 is invalid              
               if (!isa<CallInst>(I) && !isa<BrInst>(I))                                                
                                                      ^                                                 
boogieGen/CMakeFiles/boogieGen.dir/build.make:62: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/​‌​
boogieGen.cpp.o' failed
make[3]: *** [boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o] Error 1
make[3]: Leaving directory '/shared/iiProver/src/_build'
CMakeFiles/Makefile2:117: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/all' failed
make[2]: *** [boogieGen/CMakeFiles/boogieGen.dir/all] Error 2
make[2]: Leaving directory '/shared/iiProver/src/_build'
Makefile:83: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/shared/iiProver/src/_build'
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 2
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test                                
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug:   %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
debug:   %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
debug:   %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
debug:   %zext_ln5 = zext i7 %i to i64, !bitwidth !71
debug:   %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !71
debug:   %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !71
debug:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
debug:   %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwid​‌​
th !85
debug:   %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidt​‌​
h !65
debug:   %add_ln5 = add i7 %i, 1, !bitwidth !65
debug:   %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !84
debug:   %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !72
debug:   %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !73
debug:   %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !72
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !52
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !58
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   br label %bb5, !bitwidth !64
Removing   %icmp_ln5 = icmp eq i7 %i, -28, !bitwidth !66
#0 0x000055839182b7cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x000055839182b85e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x0000558391829a33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x000055839182b037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007f0f010908a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007f0effa8158c llvm::PointerIntPair<llvm::ilist_node_base<true>*, 1u, unsigned int, llvm::Pointer​‌​
LikeTypeTraits<llvm::ilist_node_base<true>*>, llvm::PointerIntPairInfo<llvm::ilist_node_base<true>*, 1u,​‌​
 llvm::PointerLikeTypeTraits<llvm::ilist_node_base<true>*> > >::getInt() const /shared/dass/llvm-6.0/inc​‌​
lude/llvm/ADT/PointerIntPair.h:58:0
#6 0x00007f0effa7d92a llvm::ilist_node_base<true>::isSentinel() const /shared/dass/llvm-6.0/include/llvm​‌​
/ADT/ilist_node_base.h:46:0
#7 0x00007f0effa7d94a llvm::ilist_node_base<true>::isKnownSentinel() const /shared/dass/llvm-6.0/include​‌​
/llvm/ADT/ilist_node_base.h:47:0
#8 0x00007f0effa8297f llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, true, fal​‌​
se, void>, false, false>::operator*() const /shared/dass/llvm-6.0/include/llvm/ADT/ilist_iterator.h:140:​‌​
0
#9 0x00007f0effa6e15b boogieGen::boogieGen::programSlice(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:107:0
#10 0x00007f0effa6dac4 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:52:0
#11 0x000055839103fa21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#12 0x000055839104014b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#13 0x0000558391040343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#14 0x00005583902a5f79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#15 0x00007f0effd24b97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#16 0x00005583902756ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Segmentation fault (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug:   %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
debug:   %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
debug:   %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
debug:   %zext_ln5 = zext i7 %i to i64, !bitwidth !71
debug:   %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !71
debug:   %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !71
debug:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
debug:   %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwid​‌​
th !85
debug:   %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidt​‌​
h !65
debug:   %add_ln5 = add i7 %i, 1, !bitwidth !65
debug:   %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !84
debug:   %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !72
debug:   %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !73
debug:   %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !72
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !52
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !58
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   br label %bb5, !bitwidth !64
Removing   %icmp_ln5 = icmp eq i7 %i, -28, !bitwidth !66
While deleting: i1 %icmp_ln5
Use still stuck around after Def is destroyed:  br i1 %icmp_ln5, label %2, label %bb5.split, !llvm.loop ​‌​
!66, !bitwidth !64
opt: /shared/dass/llvm/lib/IR/Value.cpp:88: llvm::Value::~Value(): Assertion `use_empty() && "Uses remai​‌​
n when a value is destroyed!"' failed.
#0 0x000055ff327417cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x000055ff3274185e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x000055ff3273fa33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x000055ff32741037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007fa98ee168a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007fa98dac7f47 gsignal (/lib/x86_64-linux-gnu/libc.so.6+0x3ef47)
#6 0x00007fa98dac98b1 abort (/lib/x86_64-linux-gnu/libc.so.6+0x408b1)
#7 0x00007fa98dab942a (/lib/x86_64-linux-gnu/libc.so.6+0x3042a)
#8 0x00007fa98dab94a2 (/lib/x86_64-linux-gnu/libc.so.6+0x304a2)
#9 0x000055ff31fd1c06 llvm::Value::~Value() /shared/dass/llvm/lib/IR/Value.cpp:88:0
#10 0x000055ff317765c0 llvm::User::~User() /shared/dass/llvm/include/llvm/IR/User.h:95:0
#11 0x000055ff31f13d72 llvm::Instruction::~Instruction() /shared/dass/llvm/lib/IR/Instruction.cpp:48:0
#12 0x000055ff31fd6828 llvm::CmpInst::~CmpInst() /shared/dass/llvm/include/llvm/IR/InstrTypes.h:843:0
#13 0x000055ff31fd6d34 llvm::ICmpInst::~ICmpInst() /shared/dass/llvm/include/llvm/IR/Instructions.h:1108​‌​
:0
#14 0x000055ff31fd27e7 llvm::Value::deleteValue() /shared/dass/llvm/include/llvm/IR/Instruction.def:187:​‌​
0
#15 0x000055ff31b5a11c llvm::ilist_alloc_traits<llvm::Instruction>::deleteNode(llvm::Instruction*) /shar​‌​
ed/dass/llvm/include/llvm/IR/Instruction.h:690:0
#16 0x000055ff31b5ab8b llvm::iplist_impl<llvm::simple_ilist<llvm::Instruction>, llvm::SymbolTableListTra​‌​
its<llvm::Instruction> >::erase(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction,​‌​
 true, false, void>, false, false>) /shared/dass/llvm/include/llvm/ADT/ilist.h:282:0
#17 0x000055ff31f13e87 llvm::Instruction::eraseFromParent() /shared/dass/llvm/lib/IR/Instruction.cpp:69:​‌​
0
#18 0x00007fa98d7f41f5 boogieGen::boogieGen::programSlice(llvm::Module&) /shared/iiProver/src/boogieGen/​‌​
boogieGen.cpp:106:0
#19 0x00007fa98d7f3a64 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:52:0
#20 0x000055ff31f55a21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#21 0x000055ff31f5614b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#22 0x000055ff31f56343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#23 0x000055ff311bbf79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#24 0x00007fa98daaab97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#25 0x000055ff3118b6ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Aborted (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test                                
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::programSlic​‌​
e(llvm::Module&)’:                                                                                      
/shared/iiProver/src/boogieGen/boogieGen.cpp:111:17: error: ‘inst’ was not declared in this scope       
                 inst->replaceAllUsesWith(blank);                                                       
                 ^~~~                                                                                   
/shared/iiProver/src/boogieGen/boogieGen.cpp:111:17: note: suggested alternative: ‘init’                
                 inst->replaceAllUsesWith(blank);                                                       
                 ^~~~                                                                                   
                 init                                                                                   
/shared/iiProver/src/boogieGen/boogieGen.cpp:111:42: error: ‘blank’ was not declared in this scope      
                 inst->replaceAllUsesWith(blank);                                                       
                                          ^~~~~                                                         
/shared/iiProver/src/boogieGen/boogieGen.cpp:111:42: note: suggested alternative: ‘isblank’             
                 inst->replaceAllUsesWith(blank);                                                       
                                          ^~~~~                                                         
                                          isblank                                                       
boogieGen/CMakeFiles/boogieGen.dir/build.make:62: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/​‌​
boogieGen.cpp.o' failed
make[3]: *** [boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o] Error 1
make[3]: Leaving directory '/shared/iiProver/src/_build'
CMakeFiles/Makefile2:117: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/all' failed
make[2]: *** [boogieGen/CMakeFiles/boogieGen.dir/all] Error 2
make[2]: Leaving directory '/shared/iiProver/src/_build'
Makefile:83: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/shared/iiProver/src/_build'
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 2
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test                                
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug:   %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
debug:   %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
debug:   %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
debug:   %zext_ln5 = zext i7 %i to i64, !bitwidth !71
debug:   %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !71
debug:   %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !71
debug:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
debug:   %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwid​‌​
th !85
debug:   %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidt​‌​
h !65
debug:   %add_ln5 = add i7 %i, 1, !bitwidth !65
debug:   %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !84
debug:   %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !72
debug:   %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !73
debug:   %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !72
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !52
#0 0x00005637b925a7cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x00005637b925a85e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x00005637b9258a33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x00005637b925a037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007f049fad58a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007f049e4c6282 llvm::PointerIntPair<llvm::ilist_node_base<true>*, 1u, unsigned int, llvm::Pointer​‌​
LikeTypeTraits<llvm::ilist_node_base<true>*>, llvm::PointerIntPairInfo<llvm::ilist_node_base<true>*, 1u,​‌​
 llvm::PointerLikeTypeTraits<llvm::ilist_node_base<true>*> > >::getInt() const /shared/dass/llvm-6.0/inc​‌​
lude/llvm/ADT/PointerIntPair.h:58:0
#6 0x00007f049e4c2620 llvm::ilist_node_base<true>::isSentinel() const /shared/dass/llvm-6.0/include/llvm​‌​
/ADT/ilist_node_base.h:46:0
#7 0x00007f049e4c2640 llvm::ilist_node_base<true>::isKnownSentinel() const /shared/dass/llvm-6.0/include​‌​
/llvm/ADT/ilist_node_base.h:47:0
#8 0x00007f049e4c7675 llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, true, fal​‌​
se, void>, false, false>::operator*() const /shared/dass/llvm-6.0/include/llvm/ADT/ilist_iterator.h:140:​‌​
0
#9 0x00007f049e4b2e4b boogieGen::boogieGen::programSlice(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:107:0
#10 0x00007f049e4b27b4 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:52:0
#11 0x00005637b8a6ea21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#12 0x00005637b8a6f14b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#13 0x00005637b8a6f343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#14 0x00005637b7cd4f79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#15 0x00007f049e769b97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#16 0x00005637b7ca46ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Segmentation fault (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug:   %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
debug:   %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
debug:   %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
debug:   %zext_ln5 = zext i7 %i to i64, !bitwidth !71
debug:   %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !71
debug:   %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !71
debug:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
debug:   %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwid​‌​
th !85
debug:   %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidt​‌​
h !65
debug:   %add_ln5 = add i7 %i, 1, !bitwidth !65
debug:   %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !84
debug:   %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !72
debug:   %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !73
debug:   %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !72
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !52
#0 0x00005562703d37cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x00005562703d385e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x00005562703d1a33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x00005562703d3037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007f430dfdc8a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007f430c9cd420 llvm::PointerIntPair<llvm::ilist_node_base<true>*, 1u, unsigned int, llvm::Pointer​‌​
LikeTypeTraits<llvm::ilist_node_base<true>*>, llvm::PointerIntPairInfo<llvm::ilist_node_base<true>*, 1u,​‌​
 llvm::PointerLikeTypeTraits<llvm::ilist_node_base<true>*> > >::getInt() const /shared/dass/llvm-6.0/inc​‌​
lude/llvm/ADT/PointerIntPair.h:58:0
#6 0x00007f430c9c977a llvm::ilist_node_base<true>::isSentinel() const /shared/dass/llvm-6.0/include/llvm​‌​
/ADT/ilist_node_base.h:46:0
#7 0x00007f430c9c979a llvm::ilist_node_base<true>::isKnownSentinel() const /shared/dass/llvm-6.0/include​‌​
/llvm/ADT/ilist_node_base.h:47:0
#8 0x00007f430c9ce813 llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, true, fal​‌​
se, void>, false, false>::operator*() const /shared/dass/llvm-6.0/include/llvm/ADT/ilist_iterator.h:140:​‌​
0
#9 0x00007f430c9b9f8b boogieGen::boogieGen::programSlice(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:107:0
#10 0x00007f430c9b98f4 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:52:0
#11 0x000055626fbe7a21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#12 0x000055626fbe814b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#13 0x000055626fbe8343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#14 0x000055626ee4df79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#15 0x00007f430cc70b97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#16 0x000055626ee1d6ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Segmentation fault (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug:   %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
debug:   %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
debug:   %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
debug:   %zext_ln5 = zext i7 %i to i64, !bitwidth !71
debug:   %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !71
debug:   %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !71
debug:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
debug:   %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwid​‌​
th !85
debug:   %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidt​‌​
h !65
debug:   %add_ln5 = add i7 %i, 1, !bitwidth !65
debug:   %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !84
debug:   %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !72
debug:   %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !73
debug:   %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !72
Removing   %icmp_ln5 = icmp eq i7 %i, -28, !bitwidth !66
#0 0x0000564c65e4b7cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x0000564c65e4b85e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x0000564c65e49a33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x0000564c65e4b037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007efe378b08a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007efe362a16f6 llvm::PointerIntPair<llvm::ilist_node_base<true>*, 1u, unsigned int, llvm::Pointer​‌​
LikeTypeTraits<llvm::ilist_node_base<true>*>, llvm::PointerIntPairInfo<llvm::ilist_node_base<true>*, 1u,​‌​
 llvm::PointerLikeTypeTraits<llvm::ilist_node_base<true>*> > >::getInt() const /shared/dass/llvm-6.0/inc​‌​
lude/llvm/ADT/PointerIntPair.h:58:0
#6 0x00007efe3629da50 llvm::ilist_node_base<true>::isSentinel() const /shared/dass/llvm-6.0/include/llvm​‌​
/ADT/ilist_node_base.h:46:0
#7 0x00007efe3629da70 llvm::ilist_node_base<true>::isKnownSentinel() const /shared/dass/llvm-6.0/include​‌​
/llvm/ADT/ilist_node_base.h:47:0
#8 0x00007efe362a2ae9 llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, true, fal​‌​
se, void>, false, false>::operator*() const /shared/dass/llvm-6.0/include/llvm/ADT/ilist_iterator.h:140:​‌​
0
#9 0x00007efe3628e23b boogieGen::boogieGen::programSlice(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:107:0
#10 0x00007efe3628dba4 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:52:0
#11 0x0000564c6565fa21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#12 0x0000564c6566014b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#13 0x0000564c65660343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#14 0x0000564c648c5f79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#15 0x00007efe36544b97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#16 0x0000564c648956ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Segmentation fault (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::programSlic​‌​
e(llvm::Module&)’:                                                                                      
/shared/iiProver/src/boogieGen/boogieGen.cpp:113:40: error: ‘inst’ was not declared in this scope       
               if (!isa<TerminatorInst>(inst) && !isa<CallInst>(I) && !isa<BranchInst>(I)){             
                                        ^~~~                                                            
/shared/iiProver/src/boogieGen/boogieGen.cpp:113:40: note: suggested alternative: ‘init’                
               if (!isa<TerminatorInst>(inst) && !isa<CallInst>(I) && !isa<BranchInst>(I)){             
                                        ^~~~                                                            
                                        init                                                            
boogieGen/CMakeFiles/boogieGen.dir/build.make:62: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/​‌​
boogieGen.cpp.o' failed
make[3]: *** [boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o] Error 1
make[3]: Leaving directory '/shared/iiProver/src/_build'
CMakeFiles/Makefile2:117: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/all' failed
make[2]: *** [boogieGen/CMakeFiles/boogieGen.dir/all] Error 2
make[2]: Leaving directory '/shared/iiProver/src/_build'
Makefile:83: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/shared/iiProver/src/_build'
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 2
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug:   %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
debug:   %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
debug:   %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
debug:   %zext_ln5 = zext i7 %i to i64, !bitwidth !71
debug:   %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !71
debug:   %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !71
debug:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
debug:   %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwid​‌​
th !85
debug:   %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidt​‌​
h !65
debug:   %add_ln5 = add i7 %i, 1, !bitwidth !65
debug:   %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !84
debug:   %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !72
debug:   %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !73
debug:   %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !72
Removing   %icmp_ln5 = icmp eq i7 %i, -28, !bitwidth !66
#0 0x000055c64ea247cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x000055c64ea2485e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x000055c64ea22a33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x000055c64ea24037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007fd491c578a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007fd490647bae llvm::PointerIntPair<llvm::ilist_node_base<true>*, 1u, unsigned int, llvm::Pointer​‌​
LikeTypeTraits<llvm::ilist_node_base<true>*>, llvm::PointerIntPairInfo<llvm::ilist_node_base<true>*, 1u,​‌​
 llvm::PointerLikeTypeTraits<llvm::ilist_node_base<true>*> > >::getInt() const /shared/dass/llvm-6.0/inc​‌​
lude/llvm/ADT/PointerIntPair.h:58:0
#6 0x00007fd490643f4c llvm::ilist_node_base<true>::isSentinel() const /shared/dass/llvm-6.0/include/llvm​‌​
/ADT/ilist_node_base.h:46:0
#7 0x00007fd490643f6c llvm::ilist_node_base<true>::isKnownSentinel() const /shared/dass/llvm-6.0/include​‌​
/llvm/ADT/ilist_node_base.h:47:0
#8 0x00007fd490648fa1 llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, true, fal​‌​
se, void>, false, false>::operator*() const /shared/dass/llvm-6.0/include/llvm/ADT/ilist_iterator.h:140:​‌​
0
#9 0x00007fd49063473b boogieGen::boogieGen::programSlice(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:107:0
#10 0x00007fd4906340a4 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:52:0
#11 0x000055c64e238a21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#12 0x000055c64e23914b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#13 0x000055c64e239343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#14 0x000055c64d49ef79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#15 0x00007fd4908ebb97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#16 0x000055c64d46e6ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Segmentation fault (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug:   %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
debug:   %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
debug:   %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
debug:   %zext_ln5 = zext i7 %i to i64, !bitwidth !71
debug:   %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !71
debug:   %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !71
debug:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
debug:   %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwid​‌​
th !85
debug:   %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidt​‌​
h !65
debug:   %add_ln5 = add i7 %i, 1, !bitwidth !65
debug:   %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !84
debug:   %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !72
debug:   %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !73
debug:   %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !72
Removing   %icmp_ln5 = icmp eq i7 %i, -28, !bitwidth !66
#0 0x000056297b3db7cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x000056297b3db85e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x000056297b3d9a33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x000056297b3db037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007f81d37008a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007f81d20f0bce llvm::PointerIntPair<llvm::ilist_node_base<true>*, 1u, unsigned int, llvm::Pointer​‌​
LikeTypeTraits<llvm::ilist_node_base<true>*>, llvm::PointerIntPairInfo<llvm::ilist_node_base<true>*, 1u,​‌​
 llvm::PointerLikeTypeTraits<llvm::ilist_node_base<true>*> > >::getInt() const /shared/dass/llvm-6.0/inc​‌​
lude/llvm/ADT/PointerIntPair.h:58:0
#6 0x00007f81d20ecf6c llvm::ilist_node_base<true>::isSentinel() const /shared/dass/llvm-6.0/include/llvm​‌​
/ADT/ilist_node_base.h:46:0
#7 0x00007f81d20ecf8c llvm::ilist_node_base<true>::isKnownSentinel() const /shared/dass/llvm-6.0/include​‌​
/llvm/ADT/ilist_node_base.h:47:0
#8 0x00007f81d20f1fc1 llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, true, fal​‌​
se, void>, false, false>::operator*() const /shared/dass/llvm-6.0/include/llvm/ADT/ilist_iterator.h:140:​‌​
0
#9 0x00007f81d20dd73b boogieGen::boogieGen::programSlice(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:107:0
#10 0x00007f81d20dd0a4 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:52:0
#11 0x000056297abefa21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#12 0x000056297abf014b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#13 0x000056297abf0343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#14 0x0000562979e55f79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#15 0x00007f81d2394b97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#16 0x0000562979e256ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Segmentation fault (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug:   %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
debug:   %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
debug:   %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
debug:   %zext_ln5 = zext i7 %i to i64, !bitwidth !71
debug:   %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !71
debug:   %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !71
debug:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
debug:   %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwid​‌​
th !85
debug:   %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidt​‌​
h !65
debug:   %add_ln5 = add i7 %i, 1, !bitwidth !65
debug:   %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !84
debug:   %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !72
debug:   %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !73
debug:   %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !72
Removing   %icmp_ln5 = icmp eq i7 %i, -28, !bitwidth !66
Removing   %icmp_ln5 = icmp eq i7 %i, -28, !bitwidth !66
Removing   %icmp_ln5 = icmp eq i7 %i, -28, !bitwidth !66
Removing   %icmp_ln5 = icmp eq i7 %i, -28, !bitwidth !66
#0 0x0000555a6491f7cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x0000555a6491f85e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x0000555a6491da33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x0000555a6491f037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007fd3102478a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007fd30ec37c76 llvm::PointerIntPair<llvm::ilist_node_base<true>*, 1u, unsigned int, llvm::Pointer​‌​
LikeTypeTraits<llvm::ilist_node_base<true>*>, llvm::PointerIntPairInfo<llvm::ilist_node_base<true>*, 1u,​‌​
 llvm::PointerLikeTypeTraits<llvm::ilist_node_base<true>*> > >::getInt() const /shared/dass/llvm-6.0/inc​‌​
lude/llvm/ADT/PointerIntPair.h:58:0
#6 0x00007fd30ec34014 llvm::ilist_node_base<true>::isSentinel() const /shared/dass/llvm-6.0/include/llvm​‌​
/ADT/ilist_node_base.h:46:0
#7 0x00007fd30ec34034 llvm::ilist_node_base<true>::isKnownSentinel() const /shared/dass/llvm-6.0/include​‌​
/llvm/ADT/ilist_node_base.h:47:0
#8 0x00007fd30ec39069 llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, true, fal​‌​
se, void>, false, false>::operator*() const /shared/dass/llvm-6.0/include/llvm/ADT/ilist_iterator.h:140:​‌​
0
#9 0x00007fd30ec2473b boogieGen::boogieGen::programSlice(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:107:0
#10 0x00007fd30ec240a4 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:52:0
#11 0x0000555a64133a21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#12 0x0000555a6413414b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#13 0x0000555a64134343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#14 0x0000555a63399f79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#15 0x00007fd30eedbb97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#16 0x0000555a633696ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Segmentation fault (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug:   %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
debug:   %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
debug:   %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
debug:   %zext_ln5 = zext i7 %i to i64, !bitwidth !71
debug:   %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !71
debug:   %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !71
debug:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
debug:   %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwid​‌​
th !85
debug:   %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidt​‌​
h !65
debug:   %add_ln5 = add i7 %i, 1, !bitwidth !65
debug:   %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !84
debug:   %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !72
debug:   %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !73
debug:   %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !72
#0 0x0000560b3ff177cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x0000560b3ff1785e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x0000560b3ff15a33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x0000560b3ff17037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007f2eb63c88a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007f2eb4db8d5c llvm::PointerIntPair<llvm::ilist_node_base<true>*, 1u, unsigned int, llvm::Pointer​‌​
LikeTypeTraits<llvm::ilist_node_base<true>*>, llvm::PointerIntPairInfo<llvm::ilist_node_base<true>*, 1u,​‌​
 llvm::PointerLikeTypeTraits<llvm::ilist_node_base<true>*> > >::getInt() const /shared/dass/llvm-6.0/inc​‌​
lude/llvm/ADT/PointerIntPair.h:58:0
#6 0x00007f2eb4db50b6 llvm::ilist_node_base<true>::isSentinel() const /shared/dass/llvm-6.0/include/llvm​‌​
/ADT/ilist_node_base.h:46:0
#7 0x00007f2eb4db50d6 llvm::ilist_node_base<true>::isKnownSentinel() const /shared/dass/llvm-6.0/include​‌​
/llvm/ADT/ilist_node_base.h:47:0
#8 0x00007f2eb4dba14f llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, true, fal​‌​
se, void>, false, false>::operator*() const /shared/dass/llvm-6.0/include/llvm/ADT/ilist_iterator.h:140:​‌​
0
#9 0x00007f2eb4da588b boogieGen::boogieGen::programSlice(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:107:0
#10 0x00007f2eb4da51f4 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:52:0
#11 0x0000560b3f72ba21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#12 0x0000560b3f72c14b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#13 0x0000560b3f72c343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#14 0x0000560b3e991f79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#15 0x00007f2eb505cb97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#16 0x0000560b3e9616ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Segmentation fault (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug:   %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
debug:   %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
debug:   %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
debug:   %zext_ln5 = zext i7 %i to i64, !bitwidth !71
debug:   %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !71
debug:   %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !71
debug:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
debug:   %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwid​‌​
th !85
debug:   %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidt​‌​
h !65
debug:   %add_ln5 = add i7 %i, 1, !bitwidth !65
debug:   %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !84
debug:   %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !72
debug:   %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !73
debug:   %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !72
Removing   %icmp_ln5 = icmp eq i7 %i, -28, !bitwidth !66
i1 undef
#0 0x00005586072ac7cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x00005586072ac85e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x00005586072aaa33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x00005586072ac037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007f9eca2808a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007f9ec8c70bf8 llvm::PointerIntPair<llvm::ilist_node_base<true>*, 1u, unsigned int, llvm::Pointer​‌​
LikeTypeTraits<llvm::ilist_node_base<true>*>, llvm::PointerIntPairInfo<llvm::ilist_node_base<true>*, 1u,​‌​
 llvm::PointerLikeTypeTraits<llvm::ilist_node_base<true>*> > >::getInt() const /shared/dass/llvm-6.0/inc​‌​
lude/llvm/ADT/PointerIntPair.h:58:0
#6 0x00007f9ec8c6cf96 llvm::ilist_node_base<true>::isSentinel() const /shared/dass/llvm-6.0/include/llvm​‌​
/ADT/ilist_node_base.h:46:0
#7 0x00007f9ec8c6cfb6 llvm::ilist_node_base<true>::isKnownSentinel() const /shared/dass/llvm-6.0/include​‌​
/llvm/ADT/ilist_node_base.h:47:0
#8 0x00007f9ec8c71feb llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, true, fal​‌​
se, void>, false, false>::operator*() const /shared/dass/llvm-6.0/include/llvm/ADT/ilist_iterator.h:140:​‌​
0
#9 0x00007f9ec8c5d73b boogieGen::boogieGen::programSlice(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:107:0
#10 0x00007f9ec8c5d0a4 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:52:0
#11 0x0000558606ac0a21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#12 0x0000558606ac114b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#13 0x0000558606ac1343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#14 0x0000558605d26f79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#15 0x00007f9ec8f14b97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#16 0x0000558605cf66ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Segmentation fault (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::programSlic​‌​
e(llvm::Module&)’:                                                                                      
/shared/iiProver/src/boogieGen/boogieGen.cpp:115:30: error: cannot convert ‘llvm::Instruction’ to ‘llvm:​‌​
:Instruction*’ in initialization                                                                        
           Instruction *ri = *r;                                                                        
                              ^                                                                         
/shared/iiProver/src/boogieGen/boogieGen.cpp:116:37: error: ‘instr’ was not declared in this scope      
           errs() << "Removing " << *instr << "\n";                                                     
                                     ^~~~~                                                              
/shared/iiProver/src/boogieGen/boogieGen.cpp:116:37: note: suggested alternative: ‘init’                
           errs() << "Removing " << *instr << "\n";                                                     
                                     ^~~~~                                                              
                                     init                                                               
boogieGen/CMakeFiles/boogieGen.dir/build.make:62: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/​‌​
boogieGen.cpp.o' failed
make[3]: *** [boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o] Error 1
make[3]: Leaving directory '/shared/iiProver/src/_build'
CMakeFiles/Makefile2:117: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/all' failed
make[2]: *** [boogieGen/CMakeFiles/boogieGen.dir/all] Error 2
make[2]: Leaving directory '/shared/iiProver/src/_build'
Makefile:83: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/shared/iiProver/src/_build'
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 2
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::programSlic​‌​
e(llvm::Module&)’:                                                                                      
/shared/iiProver/src/boogieGen/boogieGen.cpp:115:30: error: cannot convert ‘llvm::Instruction’ to ‘llvm:​‌​
:Instruction*’ in initialization                                                                        
           Instruction *ri = *r;                                                                        
                              ^                                                                         
boogieGen/CMakeFiles/boogieGen.dir/build.make:62: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/​‌​
boogieGen.cpp.o' failed
make[3]: *** [boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o] Error 1
make[3]: Leaving directory '/shared/iiProver/src/_build'
CMakeFiles/Makefile2:117: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/all' failed
make[2]: *** [boogieGen/CMakeFiles/boogieGen.dir/all] Error 2
make[2]: Leaving directory '/shared/iiProver/src/_build'
Makefile:83: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/shared/iiProver/src/_build'
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 2
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
debug:   %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
debug:   %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
debug:   %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
debug:   %zext_ln5 = zext i7 %i to i64, !bitwidth !71
debug:   %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !71
debug:   %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !71
debug:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
debug:   %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwid​‌​
th !85
debug:   %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidt​‌​
h !65
debug:   %add_ln5 = add i7 %i, 1, !bitwidth !65
debug:   %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !84
debug:   %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !72
debug:   %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !73
debug:   %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !72
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !52
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !52
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   %icmp_ln5 = icmp eq i7 %i, -28, !bitwidth !54
Removing   %empty = call i32 (...) @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !37
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !69
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !69
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !69
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !69
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !69
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !69
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !69
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !37
Removing   %mul = fmul double undef, undef, !bitwidth !37
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !37
Removing   %mul3 = fmul double undef, undef, !bitwidth !37
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !37
Removing   %mul5 = fmul double undef, undef, !bitwidth !37
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !37
Removing   %mul7 = fmul double undef, undef, !bitwidth !37
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !37
Removing   %mul9 = fmul double undef, undef, !bitwidth !37
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !37
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !37
Removing   %b_1 = fmul double undef, undef, !bitwidth !37
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !37
Found 1 phi nodes.
opt: /shared/iiProver/src/boogieGen/boogieGen.cpp:831: void boogieGen::boogieGen::funcGen(llvm::Function​‌​
*): Assertion `incr != -1 && eq != -1' failed.
#0 0x000055ea7e3a87cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x000055ea7e3a885e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x000055ea7e3a6a33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x000055ea7e3a8037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007fdd544078a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007fdd530b8f47 gsignal (/lib/x86_64-linux-gnu/libc.so.6+0x3ef47)
#6 0x00007fdd530ba8b1 abort (/lib/x86_64-linux-gnu/libc.so.6+0x408b1)
#7 0x00007fdd530aa42a (/lib/x86_64-linux-gnu/libc.so.6+0x3042a)
#8 0x00007fdd530aa4a2 (/lib/x86_64-linux-gnu/libc.so.6+0x304a2)
#9 0x00007fdd52debb7b boogieGen::boogieGen::funcGen(llvm::Function*) /shared/iiProver/src/boogieGen/boog​‌​
ieGen.cpp:833:0
#10 0x00007fdd52de53f1 boogieGen::boogieGen::memoryPatternGen(llvm::Module&) /shared/iiProver/src/boogie​‌​
Gen/boogieGen.cpp:154:0
#11 0x00007fdd52de48d7 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:55:0
#12 0x000055ea7dbbca21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#13 0x000055ea7dbbd14b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#14 0x000055ea7dbbd343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#15 0x000055ea7ce22f79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#16 0x00007fdd5309bb97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#17 0x000055ea7cdf26ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Aborted (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
added:   %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
added:   %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
added:   %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
added:   %zext_ln5 = zext i7 %i to i64, !bitwidth !71
added:   %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !71
added:   %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !71
added:   %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !65
added:   %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwid​‌​
th !85
added:   %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidt​‌​
h !65
added:   %add_ln5 = add i7 %i, 1, !bitwidth !65
added:   %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !84
added:   %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !72
added:   %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !73
added:   %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !72
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !52
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !52
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   %icmp_ln5 = icmp eq i7 %i, -28, !bitwidth !54
Removing   %empty = call i32 (...) @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !37
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !69
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !69
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !69
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !69
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !69
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !69
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !69
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !37
Removing   %mul = fmul double undef, undef, !bitwidth !37
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !37
Removing   %mul3 = fmul double undef, undef, !bitwidth !37
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !37
Removing   %mul5 = fmul double undef, undef, !bitwidth !37
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !37
Removing   %mul7 = fmul double undef, undef, !bitwidth !37
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !37
Removing   %mul9 = fmul double undef, undef, !bitwidth !37
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !37
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !37
Removing   %b_1 = fmul double undef, undef, !bitwidth !37
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !37
Found 1 phi nodes.
opt: /shared/iiProver/src/boogieGen/boogieGen.cpp:827: void boogieGen::boogieGen::funcGen(llvm::Function​‌​
*): Assertion `incr != -1 && eq != -1' failed.
#0 0x00005651d4f657cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x00005651d4f6585e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x00005651d4f63a33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x00005651d4f65037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007fc7910e18a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007fc78fd92f47 gsignal (/lib/x86_64-linux-gnu/libc.so.6+0x3ef47)
#6 0x00007fc78fd948b1 abort (/lib/x86_64-linux-gnu/libc.so.6+0x408b1)
#7 0x00007fc78fd8442a (/lib/x86_64-linux-gnu/libc.so.6+0x3042a)
#8 0x00007fc78fd844a2 (/lib/x86_64-linux-gnu/libc.so.6+0x304a2)
#9 0x00007fc78fac5ae3 boogieGen::boogieGen::funcGen(llvm::Function*) /shared/iiProver/src/boogieGen/boog​‌​
ieGen.cpp:829:0
#10 0x00007fc78fabf359 boogieGen::boogieGen::memoryPatternGen(llvm::Module&) /shared/iiProver/src/boogie​‌​
Gen/boogieGen.cpp:150:0
#11 0x00007fc78fabe8d7 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:55:0
#12 0x00005651d4779a21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#13 0x00005651d477a14b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#14 0x00005651d477a343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#15 0x00005651d39dff79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#16 0x00007fc78fd75b97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#17 0x00005651d39af6ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Aborted (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
debug: so far so good 
debug:   %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !74, !deps !75, !dep_can​‌​
ds !79
debug:   store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !64, !dep_idx !86, !deps !87, !de​‌​
p_cands !92
debug:   store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !64, !dep_idx !94, !deps !95, !de​‌​
p_cands !97
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !52
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !52
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   %icmp_ln5 = icmp eq i7 %i, -28, !bitwidth !54
Removing   %empty = call i32 (...) @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !37
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !69
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !69
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !69
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !69
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !69
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !69
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !69
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !37
Removing   %mul = fmul double undef, undef, !bitwidth !37
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !37
Removing   %mul3 = fmul double undef, undef, !bitwidth !37
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !37
Removing   %mul5 = fmul double undef, undef, !bitwidth !37
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !37
Removing   %mul7 = fmul double undef, undef, !bitwidth !37
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !37
Removing   %mul9 = fmul double undef, undef, !bitwidth !37
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !37
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !37
Removing   %b_1 = fmul double undef, undef, !bitwidth !37
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !37
  br label %bb5, !bitwidth !52

  %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !53
  %add_ln5 = add i7 %i, 1, !bitwidth !53
  br i1 undef, label %2, label %bb5.split, !llvm.loop !54, !bitwidth !52

  %zext_ln5 = zext i7 %i to i64, !bitwidth !58
  %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !59
  %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !60
  %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
  %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !61, !deps !62, !dep_cands !66
  br i1 undef, label %bb, label %bb4, !bitwidth !52

  %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !69
  %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwidth !70
  %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !58
  %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
  store i64 undef, i64* %A_0_addr_1, align 8, !bitwidth !52, !dep_idx !71, !deps !72, !dep_cands !77
  br label %1, !bitwidth !52

  %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !59
  %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidth !53
  %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !58
  %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
  store i64 undef, i64* %A_0_addr_2, align 8, !bitwidth !52, !dep_idx !79, !deps !80, !dep_cands !82
  br label %1, !bitwidth !52

  br label %bb5, !llvm.loop !54, !bitwidth !52

  ret void, !bitwidth !52

Found 1 phi nodes.
opt: /shared/iiProver/src/boogieGen/boogieGen.cpp:831: void boogieGen::boogieGen::funcGen(llvm::Function​‌​
*): Assertion `incr != -1 && eq != -1' failed.
#0 0x000055da81e567cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x000055da81e5685e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x000055da81e54a33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x000055da81e56037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007f1b67e3a8a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007f1b66aebf47 gsignal (/lib/x86_64-linux-gnu/libc.so.6+0x3ef47)
#6 0x00007f1b66aed8b1 abort (/lib/x86_64-linux-gnu/libc.so.6+0x408b1)
#7 0x00007f1b66add42a (/lib/x86_64-linux-gnu/libc.so.6+0x3042a)
#8 0x00007f1b66add4a2 (/lib/x86_64-linux-gnu/libc.so.6+0x304a2)
#9 0x00007f1b6681ebbb boogieGen::boogieGen::funcGen(llvm::Function*) /shared/iiProver/src/boogieGen/boog​‌​
ieGen.cpp:833:0
#10 0x00007f1b66818431 boogieGen::boogieGen::memoryPatternGen(llvm::Module&) /shared/iiProver/src/boogie​‌​
Gen/boogieGen.cpp:154:0
#11 0x00007f1b668178d7 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:55:0
#12 0x000055da8166aa21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#13 0x000055da8166b14b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#14 0x000055da8166b343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#15 0x000055da808d0f79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#16 0x00007f1b66aceb97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#17 0x000055da808a06ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Aborted (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test                                
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::programSlic​‌​
e(llvm::Module&)’:                                                                                      
/shared/iiProver/src/boogieGen/boogieGen.cpp:72:22: error: ‘F’ was not declared in this scope           
     DT->recalculate(*F);                                                                               
                      ^                                                                                 
boogieGen/CMakeFiles/boogieGen.dir/build.make:62: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/​‌​
boogieGen.cpp.o' failed
make[3]: *** [boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o] Error 1
make[3]: Leaving directory '/shared/iiProver/src/_build'
CMakeFiles/Makefile2:117: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/all' failed
make[2]: *** [boogieGen/CMakeFiles/boogieGen.dir/all] Error 2
make[2]: Leaving directory '/shared/iiProver/src/_build'
Makefile:83: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/shared/iiProver/src/_build'
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 2
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !52
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !52
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !37
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !70
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !70
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !54
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !54
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !54
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !54
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !54
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !37
Removing   %mul = fmul double undef, undef, !bitwidth !37
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !37
Removing   %mul3 = fmul double undef, undef, !bitwidth !37
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !37
Removing   %mul5 = fmul double undef, undef, !bitwidth !37
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !37
Removing   %mul7 = fmul double undef, undef, !bitwidth !37
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !37
Removing   %mul9 = fmul double undef, undef, !bitwidth !37
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !37
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !37
Removing   %b_1 = fmul double undef, undef, !bitwidth !37
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !37
  br label %bb5, !bitwidth !52

  %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !53
  %icmp_ln5 = icmp eq i7 %i, -28, !bitwidth !54
  %empty = call i32 (...) @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) #2
  %add_ln5 = add i7 %i, 1, !bitwidth !53
  br i1 %icmp_ln5, label %2, label %bb5.split, !llvm.loop !55, !bitwidth !52

  %zext_ln5 = zext i7 %i to i64, !bitwidth !59
  %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !60
  %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !61
  %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
  %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !62, !deps !63, !dep_cands !67
  br i1 undef, label %bb, label %bb4, !bitwidth !52

  %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !70
  %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwidth !71
  %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !59
  %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
  store i64 undef, i64* %A_0_addr_1, align 8, !bitwidth !52, !dep_idx !72, !deps !73, !dep_cands !78
  br label %1, !bitwidth !52

  %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !60
  %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidth !53
  %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !59
  %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
  store i64 undef, i64* %A_0_addr_2, align 8, !bitwidth !52, !dep_idx !80, !deps !81, !dep_cands !83
  br label %1, !bitwidth !52

  br label %bb5, !llvm.loop !55, !bitwidth !52

  ret void, !bitwidth !52

Found 1 phi nodes.
Function: llvm.part.select.i64is empty so ignored in Boogie
Function: llvm.part.select.i11is empty so ignored in Boogie
Function: llvm.part.select.i10is empty so ignored in Boogie
Function: llvm.dbg.valueis empty so ignored in Boogie
Function: _ssdm_op_SpecTopModuleis empty so ignored in Boogie
Function: _ssdm_op_SpecPipelineis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopTripCountis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopNameis empty so ignored in Boogie
Function: _ssdm_op_SpecBitsMapis empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i8.i11.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i7.i10.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i52.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i11.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_BitConcatenate.i10.i7.i3is empty so ignored in Boogie
Function: _ssdm_SpecDependenceis empty so ignored in Boogie
Found total 84 states.
Boogie generated successfully.
boogie vecTrans/output.bpl
Boogie program verifier version 2.7.34.0, Copyright (c) 2003-2014, Microsoft.
vecTrans/output.bpl(96,5): Error: more than one declaration of variable name: undef
1 name resolution errors detected in vecTrans/output.bpl
vagrant@ubuntu-bionic:/shared/iiProver/examples$ vim vecTrans/output.bpl 
function {:bvbuiltin "fp.lt"} flt(float24e8,float24e8) returns(bool);                                  
function {:bvbuiltin "fp.eq"} feq(float24e8,float24e8) returns(bool);
function {:bvbuiltin "fp.abs"} fabs(float24e8) returns(float24e8);
function {:bvbuiltin "fp.neg"} fneg(float24e8) returns(float24e8);
function {:bvbuiltin "(_ to_fp 8 24)"} to_float(real) returns(float24e8);                              
// Double function prototypes                          
function {:bvbuiltin "fp.add"} dadd(rmode, float53e11,float53e11) returns(float53e11);           
function {:bvbuiltin "fp.sub"} dsub(rmode, float53e11,float53e11) returns(float53e11);              
function {:bvbuiltin "fp.mul"} dmul(rmode, float53e11,float53e11) returns(float53e11);
function {:bvbuiltin "fp.div"} ddiv(rmode, float53e11,float53e11) returns(float53e11);
function {:bvbuiltin "fp.rem"} drem(rmode, float53e11,float53e11) returns(float53e11);
function {:bvbuiltin "fp.sqrt"} dsqrt(rmode, float53e11,float53e11) returns(float53e11);              
function {:bvbuiltin "fp.leq"} dleq(float53e11,float53e11) returns(bool);
function {:bvbuiltin "fp.geq"} dgeq(float53e11,float53e11) returns(bool);                        
function {:bvbuiltin "fp.gt"} dgt(float53e11,float53e11) returns(bool);                             
function {:bvbuiltin "fp.lt"} dlt(float53e11,float53e11) returns(bool);
function {:bvbuiltin "fp.eq"} deq(float53e11,float53e11) returns(bool);
function {:bvbuiltin "fp.abs"} dabs(float53e11) returns(float53e11);
function {:bvbuiltin "fp.neg"} dneg(float53e11) returns(float53e11);
function {:bvbuiltin "(_ to_fp 11 53)"} to_double(real) returns(float53e11);
// Bit vector function prototypes
// Arithmetic     
function {:bvbuiltin "bvadd"} bv64add(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvsub"} bv64sub(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvmul"} bv64mul(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvudiv"} bv64udiv(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvurem"} bv64urem(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvsdiv"} bv64sdiv(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvsrem"} bv64srem(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvsmod"} bv64smod(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvneg"} bv64neg(bv64) returns(bv64); 
function {:bvbuiltin "(_ to_fp 8 24)"} bv64float(rmode, bv64) returns(float24e8);
function {:bvbuiltin "(_ to_fp 8 24) RNA" }{:ai "True" } bv64sfloat(rmode, bv64) returns(float24e8);
function {:bvbuiltin "(_ to_fp 11 53)"} bv64double(rmode, bv64) returns(float53e11);
function {:bvbuiltin "(_ to_fp 11 53) RNA" }{:ai "True" } bv64sdouble(rmode, bv64) returns(float53e11);
function {:bvbuiltin "(_ fp.to_ubv 64)"} float2ubv64(rmode, float24e8) returns(bv64);
function {:bvbuiltin "(_ fp.to_sbv 64)"} float2sbv64(rmode, float24e8) returns(bv64);
function {:bvbuiltin "(_ fp.to_ubv 64)"} double2ubv64(rmode, float53e11) returns(bv64);
function {:bvbuiltin "(_ fp.to_sbv 64)"} double2sbv64(rmode, float53e11) returns(bv64);
function {:bvbuiltin "(_ int2bv 64)"} int2bv64(int) returns(bv64);
function {:bvbuiltin "bv2int"} bv64int(bv64) returns(int);                   
// Bitwise operations                                                              
function {:bvbuiltin "bvand"} bv64and(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvor"} bv64or(bv64,bv64) returns(bv64);            
function {:bvbuiltin "bvnot"} bv64not(bv64) returns(bv64);
function {:bvbuiltin "bvxor"} bv64xor(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvnand"} bv64nand(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvnor"} bv64nor(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvxnor"} bv64xnor(bv64,bv64) returns(bv64);
// Bit shifting
function {:bvbuiltin "bvshl"} bv64shl(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvlshr"} bv64lshr(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvashr"} bv64ashr(bv64,bv64) returns(bv64);
// Unsigned comparison
function {:bvbuiltin "bvult"} bv64ult(bv64,bv64) returns(bool);
function {:bvbuiltin "bvule"} bv64ule(bv64,bv64) returns(bool);
function {:bvbuiltin "bvugt"} bv64ugt(bv64,bv64) returns(bool);
function {:bvbuiltin "bvuge"} bv64uge(bv64,bv64) returns(bool);
/ass                                                                                                    
        var $add_ln5: bv64;                                                                             
        var $icmp_ln5: bv64;                                         
        var $zext_ln5: bv64;                                      
        var $zext_ln9: bv64;                                      
        var $shl_ln9: bv64;                                                                            
        var $A_0_addr: bv64;                           
        var $A_0_load: bv64;                                                                     
        var undef: bv64;                                                                            
        var $add_ln12: bv64;                                                          
        var $zext_ln12: bv64;                                                         
        var $trunc_ln1: bv64;                                                         
        var $A_0_addr_1: bv64;                                                                        
        var undef: bv64;                                                 
        var $add_ln16: bv64;                                                                     
        var $zext_ln16: bv64;                                                                       
        var $trunc_ln2: bv64;                                          
        var $A_0_addr_2: bv64;                                         
        var boogie_fp_mode : rmode;                                 
        boogie_fp_mode := RNE;                                      
        valid := false;                                                     
                                 
        // For basic block: bb_$0
        bb_$0:                                                 
        $i := 0bv64;                                           
        goto bb_$bb5;                                          
                                                                 
        // For basic block: bb_$bb5                              
        bb_$bb5:                                                 
        assert ( bv64sge($i,0bv64) && bv64slt($i,100bv64));      
        havoc $i;                                                
        assume ( bv64sge($i,0bv64) && bv64slt($i,100bv64));
        if ($i == 100bv64) { $icmp_ln5 := 1bv64; } else { $icmp_ln5 := 0bv64; }  
        $add_ln5 := bv64add($i, 1bv64);                                                             
        if($icmp_ln5 == 1bv64) {goto bb_$2;} else {goto bb_$bb5.split;}             
                                                                                                       
        // For basic block: bb_$bb5.split                                            
        bb_$bb5.split:                                                               
        $zext_ln5 := $i;                                                               
        $shl_ln9 := bv64or(bv64shl($i, 3bv64), 0bv64);                                 
        $zext_ln9 := $shl_ln9;                                    
//      $A_0_load := $A_0[0bv64];                                            
         havoc $A_0_load;                                                          
        if(*){                                                 
                label := 0bv64;                                          
                address := $zext_ln5;                     
                iteration := $i;                               
                load := true;                                    
                valid := true;                                 
                array := 0bv64;                                  
                return;
        }                                                      
        if(undef == 1bv64) {goto bb_$bb;} else {goto bb_$bb4;}   
                                                                 
        // For basic block: bb_$bb
        bb_$bb:                                                
        $add_ln12 := bv64add($zext_ln9, 504bv64);              
        $trunc_ln1 := bv64and(134217727bv64, bv64lshr($add_ln12,3bv64));
        $zext_ln12 := $trunc_ln1;                              
vagrant@ubuntu-bionic:/shared/iiProver/examples$ ls                                                     
Makefile  vecTrans
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test                                
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !52
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !52
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !37
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !70
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !70
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !54
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !54
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !54
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !54
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !54
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !37
Removing   %mul = fmul double undef, undef, !bitwidth !37
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !37
Removing   %mul3 = fmul double undef, undef, !bitwidth !37
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !37
Removing   %mul5 = fmul double undef, undef, !bitwidth !37
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !37
Removing   %mul7 = fmul double undef, undef, !bitwidth !37
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !37
Removing   %mul9 = fmul double undef, undef, !bitwidth !37
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !37
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !37
Removing   %b_1 = fmul double undef, undef, !bitwidth !37
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !37
Found 1 phi nodes.
Function: llvm.part.select.i64is empty so ignored in Boogie
Function: llvm.part.select.i11is empty so ignored in Boogie
Function: llvm.part.select.i10is empty so ignored in Boogie
Function: llvm.dbg.valueis empty so ignored in Boogie
Function: _ssdm_op_SpecTopModuleis empty so ignored in Boogie
Function: _ssdm_op_SpecPipelineis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopTripCountis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopNameis empty so ignored in Boogie
Function: _ssdm_op_SpecBitsMapis empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i8.i11.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i7.i10.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i52.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i11.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_BitConcatenate.i10.i7.i3is empty so ignored in Boogie
Function: _ssdm_SpecDependenceis empty so ignored in Boogie
Found total 84 states.
Boogie generated successfully.
boogie vecTrans/output.bpl
Boogie program verifier version 2.7.34.0, Copyright (c) 2003-2014, Microsoft.
vecTrans/output.bpl(96,5): Error: more than one declaration of variable name: undef
vecTrans/output.bpl(102,5): Error: more than one declaration of variable name: undef
2 name resolution errors detected in vecTrans/output.bpl
vagrant@ubuntu-bionic:/shared/iiProver/examples$ vim vecTrans/output.bpl                                
        var $zext_ln9: bv64;                                                                            
        var $shl_ln9: bv64;                                                                             
        var $A_0_addr: bv64;
        var $A_0_load: bv64;     
        var undef: bv64;    
        var $add_ln12: bv64;     
        var $zext_ln12: bv64;                                                
        var $trunc_ln1: bv64;                                                
        var $A_0_addr_1: bv64;                                           
        var undef: bv64;                                                                          
        var $add_ln16: bv64;                                             
        var $zext_ln16: bv64;                                 
        var $trunc_ln2: bv64;                                                                           
        var $A_0_addr_2: bv64;
        var boogie_fp_mode : rmode;                               
        var undef:bv64;                                     
        boogie_fp_mode := RNE;                               
        valid := false;                                
        havoc undef;                                                  
                                                         
                                                                
        // For basic block: bb_$0                        
        bb_$0:                                                         
        $i := 0bv64;                                      
        goto bb_$bb5;                                            
                                                          
        // For basic block: bb_$bb5                              
        bb_$bb5:                                          
        assert ( bv64sge($i,0bv64) && bv64slt($i,100bv64));      
        havoc $i;                                         
        assume ( bv64sge($i,0bv64) && bv64slt($i,100bv64));   
        if ($i == 100bv64) { $icmp_ln5 := 1bv64; } else { $icmp_ln5 := 0bv64; }
        $add_ln5 := bv64add($i, 1bv64);                  
        if($icmp_ln5 == 1bv64) {goto bb_$2;} else {goto bb_$bb5.split;}
                  
        // For basic block: bb_$bb5.split                  
        bb_$bb5.split:                                     
        $zext_ln5 := $i;                                   
        $shl_ln9 := bv64or(bv64shl($i, 3bv64), 0bv64);
        $zext_ln9 := $shl_ln9;                               
//      $A_0_load := $A_0[0bv64];                           
         havoc $A_0_load;                                        
        if(*){                                              
                label := 0bv64;                            
                address := $zext_ln5;                                    
                iteration := $i;                                         
                load := true;                                             
                valid := true;                                            
                array := 0bv64;                                         
                return;                                    
        }             
        if(undef == 1bv64) {goto bb_$bb;} else {goto bb_$bb4;}
                          
        // For basic block: bb_$bb                                           
        bb_$bb:                                                                    
        $add_ln12 := bv64add($zext_ln9, 504bv64);                                   
        $trunc_ln1 := bv64and(134217727bv64, bv64lshr($add_ln12,3bv64));
        $zext_ln12 := $trunc_ln1;                                                                       
vagrant@ubuntu-bionic:/shared/iiProver/examples$ vim vecTrans/output.bpl                                
function {:bvbuiltin "bvsle"} bv64sle(bv64,bv64) returns(bool);                                         
function {:bvbuiltin "bvsgt"} bv64sgt(bv64,bv64) returns(bool);
function {:bvbuiltin "bvsge"} bv64sge(bv64,bv64) returns(bool);
// Datatype conversion from other bv to bv
                                 
// For function: vecTrans                                                    
procedure {:inline 1} vecTrans($A_0: [bv64]bv64, $A_1: [bv64]bv64) returns (label: bv64, address: bv64,
iteration: bv64, load: bool, valid: bool, array: bv64)                   
{                                                                                                 
        var $i: bv64;                                                    
        var $add_ln5: bv64;                                   
        var $icmp_ln5: bv64;                                                                            
        var $zext_ln5: bv64;  
        var $zext_ln9: bv64;                                      
        var $shl_ln9: bv64;                                 
        var $A_0_addr: bv64;                                 
        var $A_0_load: bv64;                           
        var undef: bv64;                                              
        var $add_ln12: bv64;                             
        var $zext_ln12: bv64;                                   
        var $trunc_ln1: bv64;                            
        var $A_0_addr_1: bv64;                                         
        var undef: bv64;                                  
        var $add_ln16: bv64;                                     
        var $zext_ln16: bv64;                             
        var $trunc_ln2: bv64;                                    
        var $A_0_addr_2: bv64;                            
        var boogie_fp_mode : rmode;                              
        var undef:bv64;                                   
        boogie_fp_mode := RNE;                                
        valid := false;                                                        
        havoc undef;                                     
                                                                       
                  
        // For basic block: bb_$0                          
        bb_$0:                                             
        $i := 0bv64;                                       
        goto bb_$bb5;                                 
                                                             
        // For basic block: bb_$bb5                         
        bb_$bb5:                                                 
        assert ( bv64sge($i,0bv64) && bv64slt($i,100bv64)); 
        havoc $i;                                          
        assume ( bv64sge($i,0bv64) && bv64slt($i,100bv64));              
        if ($i == 100bv64) { $icmp_ln5 := 1bv64; } else { $icmp_ln5 := 0bv64; }
        $add_ln5 := bv64add($i, 1bv64);                                   
        if($icmp_ln5 == 1bv64) {goto bb_$2;} else {goto bb_$bb5.split;}   
                                                                        
        // For basic block: bb_$bb5.split                  
        bb_$bb5.split:
        $zext_ln5 := $i;                                      
        $shl_ln9 := bv64or(bv64shl($i, 3bv64), 0bv64);
        $zext_ln9 := $shl_ln9;                                               
//      $A_0_load := $A_0[0bv64];                                                  
         havoc $A_0_load;                                                           
        if(*){                                                          
                label := 0bv64;                                                                         
                address := $zext_ln5;                                                                   
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test                                
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !52
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !52
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !37
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !70
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !70
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !54
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !54
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !54
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !54
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !54
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !37
Removing   %mul = fmul double undef, undef, !bitwidth !37
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !37
Removing   %mul3 = fmul double undef, undef, !bitwidth !37
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !37
Removing   %mul5 = fmul double undef, undef, !bitwidth !37
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !37
Removing   %mul7 = fmul double undef, undef, !bitwidth !37
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !37
Removing   %mul9 = fmul double undef, undef, !bitwidth !37
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !37
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !37
Removing   %b_1 = fmul double undef, undef, !bitwidth !37
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !37
Found 1 phi nodes.
Function: llvm.part.select.i64is empty so ignored in Boogie
Function: llvm.part.select.i11is empty so ignored in Boogie
Function: llvm.part.select.i10is empty so ignored in Boogie
Function: llvm.dbg.valueis empty so ignored in Boogie
Function: _ssdm_op_SpecTopModuleis empty so ignored in Boogie
Function: _ssdm_op_SpecPipelineis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopTripCountis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopNameis empty so ignored in Boogie
Function: _ssdm_op_SpecBitsMapis empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i8.i11.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i7.i10.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i52.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i11.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_BitConcatenate.i10.i7.i3is empty so ignored in Boogie
Function: _ssdm_SpecDependenceis empty so ignored in Boogie
Found total 84 states.
Boogie generated successfully.
boogie vecTrans/output.bpl
Boogie program verifier version 2.7.34.0, Copyright (c) 2003-2014, Microsoft.
vecTrans/output.bpl(96,5): Error: more than one declaration of variable name: undef
1 name resolution errors detected in vecTrans/output.bpl
vagrant@ubuntu-bionic:/shared/iiProver/examples$ vim vecTrans/output.bpl 
function {:bvbuiltin "bvuge"} bv64uge(bv64,bv64) returns(bool);                                         
// Signed comparison                                    
function {:bvbuiltin "bvslt"} bv64slt(bv64,bv64) returns(bool);                                         
function {:bvbuiltin "bvsle"} bv64sle(bv64,bv64) returns(bool);
function {:bvbuiltin "bvsgt"} bv64sgt(bv64,bv64) returns(bool);
function {:bvbuiltin "bvsge"} bv64sge(bv64,bv64) returns(bool);
// Datatype conversion from other bv to bv
                                                                             
// For function: vecTrans                                                    
procedure {:inline 1} vecTrans($A_0: [bv64]bv64, $A_1: [bv64]bv64) returns (label: bv64, address: bv64,
iteration: bv64, load: bool, valid: bool, array: bv64)                                            
{                                                                        
        var $i: bv64;                                         
        var $add_ln5: bv64;                                                                             
        var $icmp_ln5: bv64;
        var $zext_ln5: bv64;                                      
        var $zext_ln9: bv64;                                
        var $shl_ln9: bv64;                                  
        var $A_0_addr: bv64;                           
        var $A_0_load: bv64;                                          
        var undef: bv64;                                 
        var $add_ln12: bv64;                                    
        var $zext_ln12: bv64;                            
        var $trunc_ln1: bv64;                                          
        var $A_0_addr_1: bv64;                            
        var undef: bv64;                                         
        var $add_ln16: bv64;                              
        var $zext_ln16: bv64;                                    
        var $trunc_ln2: bv64;                             
        var $A_0_addr_2: bv64;                                   
        var boogie_fp_mode : rmode;                       
        boogie_fp_mode := RNE;                                
        valid := false;                                              
                                                         
                                                                     
        // For basic block: bb_$0
        bb_$0:                                             
        $i := 0bv64;                                       
        goto bb_$bb5;                                      
                                                     
        // For basic block: bb_$bb5                          
        bb_$bb5:                                            
        assert ( bv64sge($i,0bv64) && bv64slt($i,100bv64));      
        havoc $i;                                           
        assume ( bv64sge($i,0bv64) && bv64slt($i,100bv64));
        if ($i == 100bv64) { $icmp_ln5 := 1bv64; } else { $icmp_ln5 := 0bv64; }
        $add_ln5 := bv64add($i, 1bv64);                                  
        if($icmp_ln5 == 1bv64) {goto bb_$2;} else {goto bb_$bb5.split;}   
                                                                          
        // For basic block: bb_$bb5.split                               
        bb_$bb5.split:                                     
        $zext_ln5 := $i;
        $shl_ln9 := bv64or(bv64shl($i, 3bv64), 0bv64);
        $zext_ln9 := $shl_ln9;
//      $A_0_load := $A_0[0bv64];                                            
         havoc $A_0_load;                                                          
        if(*){                                          
                label := 0bv64;                                          
vagrant@ubuntu-bionic:/shared/iiProver/examples$ vim vecTrans/output.bpl                                
function {:bvbuiltin "bvule"} bv64ule(bv64,bv64) returns(bool);                                         
function {:bvbuiltin "bvugt"} bv64ugt(bv64,bv64) returns(bool);
function {:bvbuiltin "bvuge"} bv64uge(bv64,bv64) returns(bool);
// Signed comparison                                                         
function {:bvbuiltin "bvslt"} bv64slt(bv64,bv64) returns(bool);              
function {:bvbuiltin "bvsle"} bv64sle(bv64,bv64) returns(bool);                                        
function {:bvbuiltin "bvsgt"} bv64sgt(bv64,bv64) returns(bool);                                   
function {:bvbuiltin "bvsge"} bv64sge(bv64,bv64) returns(bool);          
// Datatype conversion from other bv to bv                    
                                                                                                        
// For function: vecTrans   
procedure {:inline 1} vecTrans($A_0: [bv64]bv64, $A_1: [bv64]bv64) returns (label: bv64, address: bv64,
iteration: bv64, load: bool, valid: bool, array: bv64)      
{                                                            
        var $i: bv64;                                  
        var $add_ln5: bv64;                                           
        var $icmp_ln5: bv64;                             
        var $zext_ln5: bv64;                                    
        var $zext_ln9: bv64;                             
        var $shl_ln9: bv64;                                            
        var $A_0_addr: bv64;                              
        var $A_0_load: bv64;                                     
        var undef: bv64;                                  
        var $add_ln12: bv64;                                     
        var $zext_ln12: bv64;                             
        var $trunc_ln1: bv64;                                    
        var $A_0_addr_1: bv64;                            
        var undef: bv64;                                      
        var $add_ln16: bv64;                                         
        var $zext_ln16: bv64;                            
        var $trunc_ln2: bv64;                                        
        var $A_0_addr_2: bv64;   
        var boogie_fp_mode : rmode;                        
        boogie_fp_mode := RNE;                             
        valid := false;                                    
                                                     
                                                             
        // For basic block: bb_$0                           
        bb_$0:                                                   
        $i := 0bv64;                                        
        goto bb_$bb5;                                      
                                                                               
        // For basic block: bb_$bb5                                      
        bb_$bb5:                                                          
        assert ( bv64sge($i,0bv64) && bv64slt($i,100bv64));               
        havoc $i;                                                       
        assume ( bv64sge($i,0bv64) && bv64slt($i,100bv64));
        if ($i == 100bv64) { $icmp_ln5 := 1bv64; } else { $icmp_ln5 := 0bv64; }
        $add_ln5 := bv64add($i, 1bv64);               
        if($icmp_ln5 == 1bv64) {goto bb_$2;} else {goto bb_$bb5.split;}
                                                                             
        // For basic block: bb_$bb5.split                                          
        bb_$bb5.split:                                  
        $zext_ln5 := $i;                                                 
        $shl_ln9 := bv64or(bv64shl($i, 3bv64), 0bv64);                                                  
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test                                
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !52
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !52
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !37
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !70
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !70
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !54
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !54
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !54
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !54
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !54
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !37
Removing   %mul = fmul double undef, undef, !bitwidth !37
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !37
Removing   %mul3 = fmul double undef, undef, !bitwidth !37
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !37
Removing   %mul5 = fmul double undef, undef, !bitwidth !37
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !37
Removing   %mul7 = fmul double undef, undef, !bitwidth !37
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !37
Removing   %mul9 = fmul double undef, undef, !bitwidth !37
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !37
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !37
Removing   %b_1 = fmul double undef, undef, !bitwidth !37
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !37
Found 1 phi nodes.
Function: llvm.part.select.i64is empty so ignored in Boogie
Function: llvm.part.select.i11is empty so ignored in Boogie
Function: llvm.part.select.i10is empty so ignored in Boogie
Function: llvm.dbg.valueis empty so ignored in Boogie
Function: _ssdm_op_SpecTopModuleis empty so ignored in Boogie
Function: _ssdm_op_SpecPipelineis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopTripCountis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopNameis empty so ignored in Boogie
Function: _ssdm_op_SpecBitsMapis empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i8.i11.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i7.i10.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i52.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i11.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_BitConcatenate.i10.i7.i3is empty so ignored in Boogie
Function: _ssdm_SpecDependenceis empty so ignored in Boogie
Found total 84 states.
Boogie generated successfully.
boogie vecTrans/output.bpl
Boogie program verifier version 2.7.34.0, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
vagrant@ubuntu-bionic:/shared/iiProver/examples$ vim vecTrans/output.bpl                                
// Unsigned comparison                                                                                  
function {:bvbuiltin "bvult"} bv64ult(bv64,bv64) returns(bool);
function {:bvbuiltin "bvule"} bv64ule(bv64,bv64) returns(bool);
function {:bvbuiltin "bvugt"} bv64ugt(bv64,bv64) returns(bool);
function {:bvbuiltin "bvuge"} bv64uge(bv64,bv64) returns(bool);              
// Signed comparison                                                         
function {:bvbuiltin "bvslt"} bv64slt(bv64,bv64) returns(bool);          
function {:bvbuiltin "bvsle"} bv64sle(bv64,bv64) returns(bool);                                   
function {:bvbuiltin "bvsgt"} bv64sgt(bv64,bv64) returns(bool);          
function {:bvbuiltin "bvsge"} bv64sge(bv64,bv64) returns(bool);
// Datatype conversion from other bv to bv                                                              
     
// For function: vecTrans                                         
procedure {:inline 1} vecTrans($A_0: [bv64]bv64, $A_1: [bv64]bv64) returns (label: bv64, address: bv64,
iteration: bv64, load: bool, valid: bool, array: bv64)       
{                                                      
        var $i: bv64;                                                 
        var $add_ln5: bv64;                              
        var $icmp_ln5: bv64;                                    
        var $zext_ln5: bv64;                             
        var $zext_ln9: bv64;                                           
        var $shl_ln9: bv64;                               
        var $A_0_addr: bv64;                                     
        var $A_0_load: bv64;                              
        var $add_ln12: bv64;                                     
        var $zext_ln12: bv64;                             
        var $trunc_ln1: bv64;                                    
        var $A_0_addr_1: bv64;                            
        var $add_ln16: bv64;                                  
        var $zext_ln16: bv64;                                        
        var $trunc_ln2: bv64;                            
        var $A_0_addr_2: bv64;                                       
        var boogie_fp_mode : rmode;
        var undef:bv64;                                    
        boogie_fp_mode := RNE;                             
        valid := false;                                    
        havoc undef;                                 
                                                             
                                                            
        // For basic block: bb_$0                                
        bb_$0:                                              
        $i := 0bv64;                                       
        goto bb_$bb5;                                                    
                                                                         
        // For basic block: bb_$bb5                                       
        bb_$bb5:                                                          
        assert ( bv64sge($i,0bv64) && bv64slt($i,100bv64));             
        havoc $i;                                          
        assume ( bv64sge($i,0bv64) && bv64slt($i,100bv64));
        if ($i == 100bv64) { $icmp_ln5 := 1bv64; } else { $icmp_ln5 := 0bv64; }
        $add_ln5 := bv64add($i, 1bv64);
        if($icmp_ln5 == 1bv64) {goto bb_$2;} else {goto bb_$bb5.split;}      

        // For basic block: bb_$bb5.split                 
        bb_$bb5.split:                                                                                  
vagrant@ubuntu-bionic:/shared/iiProver/examples$ ls                                                     
Makefile  vecTrans
vagrant@ubuntu-bionic:/shared/iiProver/examples$ ls                                                     
Makefile  vecTrans
vagrant@ubuntu-bionic:/shared/iiProver/examples$ ls                                                     
Makefile  vecTrans
vagrant@ubuntu-bionic:/shared/iiProver/examples$ cd vecTrans/src/                                       
vagrant@ubuntu-bionic:/shared/iiProver/examples/vecTrans/src$ ls
vecTrans.cpp  vecTrans.h  vecTrans_tb.cpp
vagrant@ubuntu-bionic:/shared/iiProver/examples/vecTrans/src$ vim vecTrans.cpp                          
#include "vecTrans.h"                                                                                   
     
void vecTrans(double A[1000]){                                    
#pragma HLS ARRAY_PARTITION variable=A block factor=2 dim=1                                            
        for (int i = 0; i < 100; i++){                       
        //#pragma HLS PIPELINE                         
        #pragma HLS PIPELINE II=2                                     
        #pragma HLS DEPENDENCE variable=A array inter false
            double a = A[i];                                    
            if (a > 100.0){                              
                double b = (((((a+0.64)*a+0.7)*a+0.21)*a+0.33)*a+0.25)*a+0.125;
                A[i+63] = b;                              
            }                                                    
                else {                                    
                double b = a*a;                                  
                A[i+9] = b;                               
            }                                                    
        }                                                 
}                                                             
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
vagrant@ubuntu-bionic:/shared/iiProver/examples/vecTrans/src$ cd ../examples                            
-bash: cd: ../examples: No such file or directory
vagrant@ubuntu-bionic:/shared/iiProver/examples/vecTrans/src$ cd ../                                    
vagrant@ubuntu-bionic:/shared/iiProver/examples/vecTrans$ cd ..
vagrant@ubuntu-bionic:/shared/iiProver/examples$ boogie vecTrans/output.bpl 
Boogie program verifier version 2.7.34.0, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
vagrant@ubuntu-bionic:/shared/iiProver/examples$ boogie vecTrans/output.bpl || echo "fuck"              
Boogie program verifier version 2.7.34.0, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
vagrant@ubuntu-bionic:/shared/iiProver/examples$ vim vecTrans/output.bpl                                
// Unsigned comparison                                                                                  
function {:bvbuiltin "bvult"} bv64ult(bv64,bv64) returns(bool);  
function {:bvbuiltin "bvule"} bv64ule(bv64,bv64) returns(bool);
function {:bvbuiltin "bvugt"} bv64ugt(bv64,bv64) returns(bool);  
function {:bvbuiltin "bvuge"} bv64uge(bv64,bv64) returns(bool);
// Signed comparison                                          
function {:bvbuiltin "bvslt"} bv64slt(bv64,bv64) returns(bool);                                         
function {:bvbuiltin "bvsle"} bv64sle(bv64,bv64) returns(bool);                                         
function {:bvbuiltin "bvsgt"} bv64sgt(bv64,bv64) returns(bool);                                         
function {:bvbuiltin "bvsge"} bv64sge(bv64,bv64) returns(bool);                                         
// Datatype conversion from other bv to bv                                                              
                                                                                                        
// For function: vecTrans                                                                               
procedure {:inline 1} vecTrans($A_0: [bv64]bv64, $A_1: [bv64]bv64) returns (label: bv64, address: bv64, 
iteration: bv64, load: bool, valid: bool, array: bv64)                                                  
{                                                                                                       
        var $i: bv64;                                                                                   
        var $add_ln5: bv64;                                                                             
        var $icmp_ln5: bv64;                                                                            
        var $zext_ln5: bv64;                                                                            
        var $zext_ln9: bv64;                                                                            
        var $shl_ln9: bv64;                                                                             
        var $A_0_addr: bv64;                                                                            
        var $A_0_load: bv64;                                                                            
        var $add_ln12: bv64;                                                                            
        var $zext_ln12: bv64;                                                                           
        var $trunc_ln1: bv64;                                                                           
        var $A_0_addr_1: bv64;                                                                          
        var $add_ln16: bv64;                                                                            
        var $zext_ln16: bv64;                                                                           
        var $trunc_ln2: bv64;                                                                           
        var $A_0_addr_2: bv64;                                                                          
        var boogie_fp_mode : rmode;                                                                     
        var undef:bv64;                                                                                 
        boogie_fp_mode := RNE;                                                                          
        valid := false;                                                                                 
        havoc undef;                                                                                    
                                                                                                        
                                                                                                        
        // For basic block: bb_$0                                                                       
        bb_$0:                                                                                          
        $i := 0bv64;                                                                                    
        goto bb_$bb5;                                                                                   
                                                 
        // For basic block: bb_$bb5                                                                     
        bb_$bb5:                                               
        assert ( bv64sge($i,0bv64) && bv64slt($i,100bv64));                 
        havoc $i;                                                            
        assume ( bv64sge($i,0bv64) && bv64slt($i,100bv64));
        if ($i == 100bv64) { $icmp_ln5 := 1bv64; } else { $icmp_ln5 := 0bv64; }
        $add_ln5 := bv64add($i, 1bv64);                                                                 
        if($icmp_ln5 == 1bv64) {goto bb_$2;} else {goto bb_$bb5.split;}      

        // For basic block: bb_$bb5.split                 
        bb_$bb5.split:                                                                                  
:$                                                                                                      
                latency := 1bv64;                                                                       
        }                                                        
        else {                                                 
                latency := bv64neg(1bv64);                       
        }                                                      
        return;                                               
}                                                                                                       
procedure main () {                                                                                     
        var label_0: bv64;                                                                              
        var address_0: bv64;                                                                            
        var iteration_0: bv64;                                                                          
        var load_0: bool;                                                                               
        var valid_0: bool;                                                                              
        var array_0: bv64;                                                                              
        var offset_0: bv64;                                                                             
        var start_time_0: bv64;                                                                         
        var label_1: bv64;                                                                              
        var address_1: bv64;                                                                            
        var iteration_1: bv64;                                                                          
        var load_1: bool;                                                                               
        var valid_1: bool;                                                                              
        var array_1: bv64;                                                                              
        var offset_1: bv64;                                                                             
        var start_time_1: bv64;                                                                         
        var label_2: bv64;                                                                              
        var address_2: bv64;                                                                            
        var iteration_2: bv64;                                                                          
        var load_2: bool;                                                                               
        var valid_2: bool;                                                                              
        var array_2: bv64;                                                                              
        var offset_2: bv64;                                                                             
        var start_time_2: bv64;                                                                         
        var $A_0: [bv64]bv64;                                                                           
        var $A_1: [bv64]bv64;                                                                           
                                                                                                        
        var II: bv64;                                                                                   
        var latency_0: bv64;                                                                            
        var end_time_0:bv64;                                                                            
        II := 1bv64;                                                                                    
        call label_0, address_0, iteration_0, load_0, valid_0, array_0 := vecTrans($A_0, $A_1);         
        call label_1, address_1, iteration_1, load_1, valid_1, array_1 := vecTrans($A_0, $A_1);         
        call label_2, address_2, iteration_2, load_2, valid_2, array_2 := vecTrans($A_0, $A_1);         
        call latency_0 := getLatency(label_0);                                                          
        call offset_0 := getOffset(label_0);     
        start_time_0 := bv64add(bv64mul(II, iteration_0), offset_0);                                    
        call offset_1 := getOffset(label_1);                   
        start_time_1 := bv64add(bv64mul(II, iteration_1), offset_1);        
        call offset_2 := getOffset(label_2);                                 
        start_time_2 := bv64add(bv64mul(II, iteration_2), offset_2);
        end_time_0 := bv64add(bv64add(bv64mul(II, iteration_0), offset_0), latency_0);
        assert (!valid_0 || !valid_1 || address_0 != address_1 || (load_0 && load_1) || label_0 == label
_1 || bv64sgt(iteration_0, iteration_1) || bv64sgt(start_time_1, end_time_0));
        assert (!valid_0 || !valid_1 || !valid_2 || label_0 == label_1 || label_0 == label_2 || label_1
== label_2 || !(start_time_0 == start_time_1 && start_time_1 == start_time_2));
}                                                                                                       
"vecTrans/output.bpl" 259L, 9649C written                                                               
vagrant@ubuntu-bionic:/shared/iiProver/examples$ boogie vecTrans/output.bpl || echo "fuck"
Boogie program verifier version 2.7.34.0, Copyright (c) 2003-2014, Microsoft.
vecTrans/output.bpl(257,2): Error BP5001: This assertion might not hold.
Execution trace:
    vecTrans/output.bpl(245,5): anon0
    vecTrans/output.bpl(101,17): inline$vecTrans$0$anon0
    vecTrans/output.bpl(116,62): inline$vecTrans$0$anon15_Else
    vecTrans/output.bpl(117,11): inline$vecTrans$0$anon3
    vecTrans/output.bpl(118,45): inline$vecTrans$0$anon16_Else
    vecTrans/output.bpl(136,22): inline$vecTrans$0$anon18_Then
    vecTrans/output.bpl(145,9): inline$vecTrans$0$anon19_Then
    vecTrans/output.bpl(101,17): inline$vecTrans$1$anon0
    vecTrans/output.bpl(116,62): inline$vecTrans$1$anon15_Else
    vecTrans/output.bpl(117,11): inline$vecTrans$1$anon3
    vecTrans/output.bpl(118,45): inline$vecTrans$1$anon16_Else
    vecTrans/output.bpl(136,42): inline$vecTrans$1$anon18_Else
    vecTrans/output.bpl(162,9): inline$vecTrans$1$anon20_Then
    vecTrans/output.bpl(101,17): inline$vecTrans$2$anon0
    vecTrans/output.bpl(116,62): inline$vecTrans$2$anon15_Else
    vecTrans/output.bpl(117,11): inline$vecTrans$2$anon3
    vecTrans/output.bpl(118,45): inline$vecTrans$2$anon16_Else
    vecTrans/output.bpl(136,22): inline$vecTrans$2$anon18_Then
    vecTrans/output.bpl(173,2): inline$vecTrans$2$bb_$1
    vecTrans/output.bpl(200,2): inline$getLatency$0$anon6_Else
    vecTrans/output.bpl(204,11): inline$getLatency$0$anon7_Then
    vecTrans/output.bpl(185,2): inline$getOffset$0$anon6_Else
    vecTrans/output.bpl(189,10): inline$getOffset$0$anon7_Then
    vecTrans/output.bpl(245,5): anon0$5
    vecTrans/output.bpl(185,2): inline$getOffset$1$anon6_Else
    vecTrans/output.bpl(185,2): inline$getOffset$1$anon7_Else
    vecTrans/output.bpl(192,10): inline$getOffset$1$anon8_Then
    vecTrans/output.bpl(245,5): anon0$6
    vecTrans/output.bpl(185,2): inline$getOffset$2$anon6_Else
    vecTrans/output.bpl(185,2): inline$getOffset$2$anon7_Else
    vecTrans/output.bpl(195,10): inline$getOffset$2$anon8_Else
    vecTrans/output.bpl(245,5): anon0$7
vecTrans/output.bpl(258,2): Error BP5001: This assertion might not hold.
Execution trace:
    vecTrans/output.bpl(245,5): anon0
    vecTrans/output.bpl(101,17): inline$vecTrans$0$anon0
    vecTrans/output.bpl(116,62): inline$vecTrans$0$anon15_Else
    vecTrans/output.bpl(117,11): inline$vecTrans$0$anon3
    vecTrans/output.bpl(118,45): inline$vecTrans$0$anon16_Else
    vecTrans/output.bpl(128,9): inline$vecTrans$0$anon17_Then
    vecTrans/output.bpl(101,17): inline$vecTrans$1$anon0
    vecTrans/output.bpl(116,62): inline$vecTrans$1$anon15_Else
    vecTrans/output.bpl(117,11): inline$vecTrans$1$anon3
    vecTrans/output.bpl(118,45): inline$vecTrans$1$anon16_Else
    vecTrans/output.bpl(136,42): inline$vecTrans$1$anon18_Else
    vecTrans/output.bpl(162,9): inline$vecTrans$1$anon20_Then
    vecTrans/output.bpl(101,17): inline$vecTrans$2$anon0
    vecTrans/output.bpl(116,62): inline$vecTrans$2$anon15_Else
    vecTrans/output.bpl(117,11): inline$vecTrans$2$anon3
    vecTrans/output.bpl(118,45): inline$vecTrans$2$anon16_Else
    vecTrans/output.bpl(136,22): inline$vecTrans$2$anon18_Then
    vecTrans/output.bpl(145,9): inline$vecTrans$2$anon19_Then
    vecTrans/output.bpl(201,11): inline$getLatency$0$anon6_Then
    vecTrans/output.bpl(186,10): inline$getOffset$0$anon6_Then
    vecTrans/output.bpl(245,5): anon0$5
    vecTrans/output.bpl(185,2): inline$getOffset$1$anon6_Else
    vecTrans/output.bpl(185,2): inline$getOffset$1$anon7_Else
    vecTrans/output.bpl(192,10): inline$getOffset$1$anon8_Then
    vecTrans/output.bpl(245,5): anon0$6
    vecTrans/output.bpl(185,2): inline$getOffset$2$anon6_Else
    vecTrans/output.bpl(189,10): inline$getOffset$2$anon7_Then
    vecTrans/output.bpl(245,5): anon0$7

Boogie program verifier finished with 0 verified, 2 errors
vagrant@ubuntu-bionic:/shared/iiProver/examples$ boogie vecTrans/output.bpl || echo "fuck"
Boogie program verifier version 2.7.34.0, Copyright (c) 2003-2014, Microsoft.
vecTrans/output.bpl(257,2): Error BP5001: This assertion might not hold.
Execution trace:
    vecTrans/output.bpl(245,5): anon0
    vecTrans/output.bpl(101,17): inline$vecTrans$0$anon0
    vecTrans/output.bpl(116,62): inline$vecTrans$0$anon15_Else
    vecTrans/output.bpl(117,11): inline$vecTrans$0$anon3
    vecTrans/output.bpl(118,45): inline$vecTrans$0$anon16_Else
    vecTrans/output.bpl(136,22): inline$vecTrans$0$anon18_Then
    vecTrans/output.bpl(145,9): inline$vecTrans$0$anon19_Then
    vecTrans/output.bpl(101,17): inline$vecTrans$1$anon0
    vecTrans/output.bpl(116,62): inline$vecTrans$1$anon15_Else
    vecTrans/output.bpl(117,11): inline$vecTrans$1$anon3
    vecTrans/output.bpl(118,45): inline$vecTrans$1$anon16_Else
    vecTrans/output.bpl(136,42): inline$vecTrans$1$anon18_Else
    vecTrans/output.bpl(162,9): inline$vecTrans$1$anon20_Then
    vecTrans/output.bpl(101,17): inline$vecTrans$2$anon0
    vecTrans/output.bpl(116,62): inline$vecTrans$2$anon15_Else
    vecTrans/output.bpl(117,11): inline$vecTrans$2$anon3
    vecTrans/output.bpl(118,45): inline$vecTrans$2$anon16_Else
    vecTrans/output.bpl(136,22): inline$vecTrans$2$anon18_Then
    vecTrans/output.bpl(173,2): inline$vecTrans$2$bb_$1
    vecTrans/output.bpl(200,2): inline$getLatency$0$anon6_Else
    vecTrans/output.bpl(204,11): inline$getLatency$0$anon7_Then
    vecTrans/output.bpl(185,2): inline$getOffset$0$anon6_Else
    vecTrans/output.bpl(189,10): inline$getOffset$0$anon7_Then
    vecTrans/output.bpl(245,5): anon0$5
    vecTrans/output.bpl(185,2): inline$getOffset$1$anon6_Else
    vecTrans/output.bpl(185,2): inline$getOffset$1$anon7_Else
    vecTrans/output.bpl(192,10): inline$getOffset$1$anon8_Then
    vecTrans/output.bpl(245,5): anon0$6
    vecTrans/output.bpl(185,2): inline$getOffset$2$anon6_Else
    vecTrans/output.bpl(185,2): inline$getOffset$2$anon7_Else
    vecTrans/output.bpl(195,10): inline$getOffset$2$anon8_Else
    vecTrans/output.bpl(245,5): anon0$7
vecTrans/output.bpl(258,2): Error BP5001: This assertion might not hold.
Execution trace:
    vecTrans/output.bpl(245,5): anon0
    vecTrans/output.bpl(101,17): inline$vecTrans$0$anon0
    vecTrans/output.bpl(116,62): inline$vecTrans$0$anon15_Else
    vecTrans/output.bpl(117,11): inline$vecTrans$0$anon3
    vecTrans/output.bpl(118,45): inline$vecTrans$0$anon16_Else
    vecTrans/output.bpl(128,9): inline$vecTrans$0$anon17_Then
    vecTrans/output.bpl(101,17): inline$vecTrans$1$anon0
    vecTrans/output.bpl(116,62): inline$vecTrans$1$anon15_Else
    vecTrans/output.bpl(117,11): inline$vecTrans$1$anon3
    vecTrans/output.bpl(118,45): inline$vecTrans$1$anon16_Else
    vecTrans/output.bpl(136,42): inline$vecTrans$1$anon18_Else
    vecTrans/output.bpl(162,9): inline$vecTrans$1$anon20_Then
    vecTrans/output.bpl(101,17): inline$vecTrans$2$anon0
    vecTrans/output.bpl(116,62): inline$vecTrans$2$anon15_Else
    vecTrans/output.bpl(117,11): inline$vecTrans$2$anon3
    vecTrans/output.bpl(118,45): inline$vecTrans$2$anon16_Else
    vecTrans/output.bpl(136,22): inline$vecTrans$2$anon18_Then
    vecTrans/output.bpl(145,9): inline$vecTrans$2$anon19_Then
    vecTrans/output.bpl(201,11): inline$getLatency$0$anon6_Then
    vecTrans/output.bpl(186,10): inline$getOffset$0$anon6_Then
    vecTrans/output.bpl(245,5): anon0$5
    vecTrans/output.bpl(185,2): inline$getOffset$1$anon6_Else
    vecTrans/output.bpl(185,2): inline$getOffset$1$anon7_Else
    vecTrans/output.bpl(192,10): inline$getOffset$1$anon8_Then
    vecTrans/output.bpl(245,5): anon0$6
    vecTrans/output.bpl(185,2): inline$getOffset$2$anon6_Else
    vecTrans/output.bpl(189,10): inline$getOffset$2$anon7_Then
    vecTrans/output.bpl(245,5): anon0$7

Boogie program verifier finished with 0 verified, 2 errors
vagrant@ubuntu-bionic:/shared/iiProver/examples$ cd ..                                                  
vagrant@ubuntu-bionic:/shared/iiProver$ ls
env.tcl  examples  src
vagrant@ubuntu-bionic:/shared/iiProver$ sudo apt install z3                                             
Reading package lists... Done
Building dependency tree       
Reading state information... Done
z3 is already the newest version (4.4.1-0.3build4).
The following packages were automatically installed and are no longer required:
  ca-certificates-mono cli-common libboogie-cil libexif12 libgdiplus libmono-accessibility4.0-cil
  libmono-corlib4.5-cil libmono-csharp4.0c-cil libmono-data-tds4.0-cil libmono-i18n-west4.0-cil
  libmono-i18n4.0-cil libmono-microsoft-csharp4.0-cil libmono-posix4.0-cil libmono-security4.0-cil
  libmono-system-configuration4.0-cil libmono-system-core4.0-cil libmono-system-data4.0-cil
  libmono-system-drawing4.0-cil libmono-system-enterpriseservices4.0-cil
  libmono-system-numerics4.0-cil libmono-system-runtime-caching4.0-cil
  libmono-system-runtime-serialization-formatters-soap4.0-cil libmono-system-security4.0-cil
  libmono-system-transactions4.0-cil libmono-system-windows-forms4.0-cil libmono-system-xml4.0-cil
  libmono-system4.0-cil libmono-webbrowser4.0-cil mono-4.0-gac mono-gac mono-mcs mono-runtime
  mono-runtime-common mono-runtime-sgen
Use 'sudo apt autoremove' to remove them.
0 upgraded, 0 newly installed, 0 to remove and 7 not upgraded.
vagrant@ubuntu-bionic:/shared/iiProver$ sudo apt install dotnet                                         
Reading package lists... Done
Building dependency tree       
Reading state information... Done
Package dotnet is not available, but is referred to by another package.
This may mean that the package is missing, has been obsoleted, or
is only available from another source

E: Package 'dotnet' has no installation candidate
vagrant@ubuntu-bionic:/shared/iiProver$ cd ../
vagrant@ubuntu-bionic:/shared$ cd dass/
vagrant@ubuntu-bionic:/shared/dass$ vim dhls_install.sh 
#!/bin/sh                                                                                               
# This is the installation script for Dynamatic         
                                                              
DHLS=dhls                                               
                                                              
echo "============================================="          
echo "         Install Dynamatic..."                         
echo "============================================="    
                                                              
# Install required packages                             
sudo apt-get update                                           
sudo apt install graphviz clang cmake graphviz-dev pkg-config coinor-cbc g++ llvm libxtst6 xdg-utils des
ktop-file-utils libboost-regex1.65.1                         
                                                               
# Download LLVM for Dynamatic                                 
git clone http://llvm.org/git/llvm.git --branch release_60 --depth 1
cd llvm/tools                                                
git clone http://llvm.org/git/clang.git --branch release_60 --depth 1
git clone http://llvm.org/git/polly.git --branch release_60 --depth 1
cd ..                                  
mkdir _build                                                 
cd _build                                                     
cmake .. -DCMAKE_BUILD_TYPE=DEBUG -DLLVM_INSTALL_UTILS=ON -DLLVM_TARGETS_TO_BUILD="X86" -DCMAKE_INSTALL_
PREFIX=../../llvm-6.0
make -j4                                                  
make install                                                                                            
                                          
# install elastic pass
cd ../../$DHLS/elastic-circuits                                                                         
mkdir _build && cd _build    
cmake .. -DLLVM_ROOT=../../../llvm-6.0
make -j4                         
                                                   
# install buffering tool                                                       
cd ../../Buffers                                                                                 
mkdir bin                                                                                      
make                                                                                              
                                                                                           
# install the VHDL code generator                                       
cd ../dot2vhdl                                                        
mkdir bin                                                                                   
make                                                                                              
                                                                                             
cd ../..                               
                                         
# install chisel lsq                                          
sudo apt-get install default-jdk                                                                        
echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a /etc/apt/sources.list.d/sbt.list
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 642AC823
sudo apt-get update              
sudo apt-get install sbt                                               
                                                                 
                                     
# todo install tb
                                                 
echo "============= Installation Success ================"
                                       
                                                        
vagrant@ubuntu-bionic:/shared/dass$ ls                                                                  
LICENSE    dhls             env.tcl   examples_1  examples_3  libExt  llvm-6.0           src    src_2
README.md  dhls_install.sh  examples  examples_2  install.sh  llvm    prism-4.6-linux64  src_1  src_3
vagrant@ubuntu-bionic:/shared/dass$ vim install.sh                                                      
#!/bin/sh                                                                                               
# This is the installation script for DSS compiler            
# Written by Jianyi Cheng, 22/02/2020                        
                                                        
# This is the script in case you do not have dynamatic        
# If you have installed dynamatic, please change the directory in the env.tcl file
                                                              
# open-sourced version                                                                                  
# git clone https://github.com/JianyiCheng/dynamatic.git     
# closed-sourced version                                       
#git clone https://jianyicheng@bitbucket.org/lana_j/dhls.git  
#bash dhls_install.sh                                               
                                                             
sudo apt install python-pip clang-tools                              
pip install cxxfilt                                                  
if ! grep -q "DSS" env.tcl; then       
  echo "DSS="$PWD >> env.tcl                                 
else                                                          
  sed -i "s|DSS=.*|DSS=$PWD|" env.tcl                                                                   
fi                   
. env.tcl                                                 
                                                                                                        
# Installing DSS analysis pass            
if ! grep -q "add_subdirectory(DSSAnalysis)" $DHLS/elastic-circuits/CMakeLists.txt; then
  echo "add_subdirectory(DSSAnalysis)" >> $DHLS/elastic-circuits/CMakeLists.txt                         
fi                           
cp -r src/DSSAnalysis $DHLS/elastic-circuits/
cp -r src/include/DSSAnalysis $DHLS/elastic-circuits/include/
if ! grep -q "\/\*DASS\*\/std::string func_name = demangle(fname.c_str());" $DHLS/elastic-circuits/MyCFG
Pass/MyCFGPass.cpp; then                                                       
  sed -i 's|circuitGen->sanityCheckVanilla(enode_dag);|circuitGen->sanityCheckVanilla(enode_dag);\n/*DAS
S*/std::string func_name = demangle(fname.c_str());\n\t\tDASS(enode_dag, bbnode_dag, (opt_cfgOutdir+\"/\
"+func_name.substr(0, func_name.find(\"(\"))+\"_\").c_str());\n|' $DHLS/elastic-circuits/MyCFGPass/MyCFG
Pass.cpp                                                                                   
  sed -i 's|#include "OptimizeBitwidth/OptimizeBitwidth.h"|#include "OptimizeBitwidth/OptimizeBitwidth.h
"\n#include "DSSAnalysis/DSSAnalysis.h"\n|' $DHLS/elastic-circuits/MyCFGPass/MyCFGPass.cpp
fi                                                                                          
cd $DHLS/elastic-circuits/_build/                                                                 
make clean                                                                                   
make -j4                               
                                         
if ! grep -q "\-load ..\/_build\/DSSAnalysis\/libDSSAnalysis.so \-load ..\/_build\/MyCFGPass\/libMyCFGPa
ss.so" $DHLS/elastic-circuits/examples/Makefile; then                                                   
  sed -i 's|-load ../_build/MyCFGPass/libMyCFGPass.so|-load ../_build/DSSAnalysis/libDSSAnalysis.so -loa
d ../_build/MyCFGPass/libMyCFGPass.so|g' $DHLS/elastic-circuits/examples/Makefile
fi                               
                                                                       
# TODO fixed tb generation                                       
                                     
# prism installation
wget http://www.prismmodelchecker.org/dl/prism-4.6-linux64.tar.gz#download-box
tar -zxvf prism-4.6-linux64.tar.gz                        
rm prism-4.6-linux64.tar.gz            
cd prism-4.6-linux64                                    
bash install.sh                                                                                         
cd ..                                                                                                
                                                                                                     
                                                                                                        
vagrant@ubuntu-bionic:/shared/dass$ :q                                                                  
:q: command not found
vagrant@ubuntu-bionic:/shared/dass$ vim dhls                                                            
" ============================================================================                          
" Netrw Directory Listing                                        (netrw v156)
"   /shared/dass/dhls                                                             
"   Sorted by      name                                       
"   Sort sequence: [\/]$,\<core\%(\.\d\+\)\=\>,\.h$,\.c$,\.cpp$,\~\=\*$,*,\.o$,\.obj$,\.info$,\.swp$,\.b
"   Quick Help: <F1>:help  -:go up dir  D:delete  R:rename  s:sort-by  x:special
" ==============================================================================
../                                                                                                     
./                                                                  
.git/                                                        
Buffers/                                                             
Documentation/                                                       
Frontend/                              
Regression_test/                                             
bin/                                                          
chisel_lsq/                                                                                             
components/          
dot2vhdl/                                                 
elastic-circuits/                                                                                       
resource_sharing/                         
README.md                                                                               
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
vagrant@ubuntu-bionic:/shared/dass$ vim dhls_install.sh                                                 
#!/bin/sh                                                                                               
# This is the installation script for Dynamatic                                   
                                                              
DHLS=dhls                                                                                               
                                                                                
echo "============================================="                            
echo "         Install Dynamatic..."                                                                    
echo "============================================="                
                                                             
# Install required packages                                          
sudo apt-get update                                                  
sudo apt install graphviz clang cmake graphviz-dev pkg-config coinor-cbc g++ llvm libxtst6 xdg-utils des
ktop-file-utils libboost-regex1.65.1                         
                                                              
# Download LLVM for Dynamatic                                                                           
git clone http://llvm.org/git/llvm.git --branch release_60 --depth 1
cd llvm/tools                                             
git clone http://llvm.org/git/clang.git --branch release_60 --depth 1                                   
git clone http://llvm.org/git/polly.git --branch release_60 --depth 1
cd ..                                                                                   
mkdir _build                                                                                            
cd _build                                                                                               
cmake .. -DCMAKE_BUILD_TYPE=DEBUG -DLLVM_INSTALL_UTILS=ON -DLLVM_TARGETS_TO_BUILD="X86" -DCMAKE_INSTALL_
PREFIX=../../llvm-6.0                                                                                   
make -j4                                                                                                
make install                                                                                            
                                                                                                        
# install elastic pass                                                                                  
cd ../../$DHLS/elastic-circuits                                                                         
mkdir _build && cd _build                                                                               
cmake .. -DLLVM_ROOT=../../../llvm-6.0                                                                  
make -j4                                                                                                
                                                                                                        
# install buffering tool                                                                                
cd ../../Buffers                                                                                        
mkdir bin                                                                                               
make                                                                                                    
                                                                                                        
# install the VHDL code generator                                                                       
cd ../dot2vhdl                                                                                          
mkdir bin                                                                                               
make                                                                                                    
                                                                                                        
cd ../..                                                                                                
                                                                                                        
# install chisel lsq                                                                                    
sudo apt-get install default-jdk                                                                        
echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a /etc/apt/sources.list.d/sbt.list           
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 642AC823                              
sudo apt-get update                                                                                     
sudo apt-get install sbt                                                                                
                                                                                                        
                                                                                                        
# todo install tb                                                                                       
                                                                                                        
echo "============= Installation Success ================"                                              
                                                                                                        
                                                                                                        
vagrant@ubuntu-bionic:/shared/dass$ cd ../iiProver/                                                     
vagrant@ubuntu-bionic:/shared/iiProver$ ls
env.tcl  examples  install.sh  src
vagrant@ubuntu-bionic:/shared/iiProver$ cd src/                                                         
vagrant@ubuntu-bionic:/shared/iiProver/src$ ls
CMakeLists.txt  _build  boogieGen  helper.py  helper.pyc  tclGen.py
vagrant@ubuntu-bionic:/shared/iiProver/src$ cd _build/                                                  
vagrant@ubuntu-bionic:/shared/iiProver/src/_build$ ls
CMakeCache.txt  CMakeFiles  Makefile  boogieGen  cmake_install.cmake
vagrant@ubuntu-bionic:/shared/iiProver/src/_build$ 
vagrant@ubuntu-bionic:/shared/iiProver/src/_build$ cd ../..
vagrant@ubuntu-bionic:/shared/iiProver$ cd ../dass/in                                                   
-bash: cd: ../dass/in: No such file or directory
vagrant@ubuntu-bionic:/shared/iiProver$ cd ../dass/                                                     
vagrant@ubuntu-bionic:/shared/dass$ vim install.sh 
#!/bin/sh                                                                                               
# This is the installation script for DSS compiler        
# Written by Jianyi Cheng, 22/02/2020                                                                   
                                                                     
# This is the script in case you do not have dynamatic                                  
# If you have installed dynamatic, please change the directory in the env.tcl file                      
                                                                                                        
# open-sourced version                                                                                  
# git clone https://github.com/JianyiCheng/dynamatic.git                                                
# closed-sourced version                                                                                
#git clone https://jianyicheng@bitbucket.org/lana_j/dhls.git                                            
#bash dhls_install.sh                                                                                   
                                                                                                        
sudo apt install python-pip clang-tools                                                                 
pip install cxxfilt                                                                                     
if ! grep -q "DSS" env.tcl; then                                                                        
  echo "DSS="$PWD >> env.tcl                                                                            
else                                                                                                    
  sed -i "s|DSS=.*|DSS=$PWD|" env.tcl                                                                   
fi                                                                                                      
. env.tcl                                                                                               
                                                                                                        
# Installing DSS analysis pass                                                                          
if ! grep -q "add_subdirectory(DSSAnalysis)" $DHLS/elastic-circuits/CMakeLists.txt; then                
  echo "add_subdirectory(DSSAnalysis)" >> $DHLS/elastic-circuits/CMakeLists.txt                         
fi                                                                                                      
cp -r src/DSSAnalysis $DHLS/elastic-circuits/                                                           
cp -r src/include/DSSAnalysis $DHLS/elastic-circuits/include/                                           
if ! grep -q "\/\*DASS\*\/std::string func_name = demangle(fname.c_str());" $DHLS/elastic-circuits/MyCFG
Pass/MyCFGPass.cpp; then                                                                                
  sed -i 's|circuitGen->sanityCheckVanilla(enode_dag);|circuitGen->sanityCheckVanilla(enode_dag);\n/*DAS
S*/std::string func_name = demangle(fname.c_str());\n\t\tDASS(enode_dag, bbnode_dag, (opt_cfgOutdir+\"/\
"+func_name.substr(0, func_name.find(\"(\"))+\"_\").c_str());\n|' $DHLS/elastic-circuits/MyCFGPass/MyCFG
Pass.cpp                                                                                                
  sed -i 's|#include "OptimizeBitwidth/OptimizeBitwidth.h"|#include "OptimizeBitwidth/OptimizeBitwidth.h
"\n#include "DSSAnalysis/DSSAnalysis.h"\n|' $DHLS/elastic-circuits/MyCFGPass/MyCFGPass.cpp              
fi                                                                                                      
cd $DHLS/elastic-circuits/_build/                                                                       
make clean                                                                                              
make -j4                                                                                                
                                                                                                        
if ! grep -q "\-load ..\/_build\/DSSAnalysis\/libDSSAnalysis.so \-load ..\/_build\/MyCFGPass\/libMyCFGPa
ss.so" $DHLS/elastic-circuits/examples/Makefile; then                                                   
  sed -i 's|-load ../_build/MyCFGPass/libMyCFGPass.so|-load ../_build/DSSAnalysis/libDSSAnalysis.so -loa
d ../_build/MyCFGPass/libMyCFGPass.so|g' $DHLS/elastic-circuits/examples/Makefile
fi                                
                                                                                                        
# TODO fixed tb generation                    
                                                                   
# prism installation                                                                                    
wget http://www.prismmodelchecker.org/dl/prism-4.6-linux64.tar.gz#download-box
tar -zxvf prism-4.6-linux64.tar.gz                                  
rm prism-4.6-linux64.tar.gz                        
cd prism-4.6-linux64                                       
bash install.sh                                                                                         
cd ..                                           
                                                                                                        
                                                   
vagrant@ubuntu-bionic:/shared/dass$ vim dhls_install.sh                                                 
#!/bin/sh                                                                                               
# This is the installation script for Dynamatic                                                         
                                                                     
DHLS=dhls                                                                               
                                                                                                        
echo "============================================="                                                    
echo "         Install Dynamatic..."                                                                    
echo "============================================="                                                    
                                                                                                        
# Install required packages                                                                             
sudo apt-get update                                                                                     
sudo apt install graphviz clang cmake graphviz-dev pkg-config coinor-cbc g++ llvm libxtst6 xdg-utils des
ktop-file-utils libboost-regex1.65.1                                                                    
                                                                                                        
# Download LLVM for Dynamatic                                                                           
git clone http://llvm.org/git/llvm.git --branch release_60 --depth 1                                    
cd llvm/tools                                                                                           
git clone http://llvm.org/git/clang.git --branch release_60 --depth 1                                   
git clone http://llvm.org/git/polly.git --branch release_60 --depth 1                                   
cd ..                                                                                                   
mkdir _build                                                                                            
cd _build                                                                                               
cmake .. -DCMAKE_BUILD_TYPE=DEBUG -DLLVM_INSTALL_UTILS=ON -DLLVM_TARGETS_TO_BUILD="X86" -DCMAKE_INSTALL_
PREFIX=../../llvm-6.0                                                                                   
make -j4                                                                                                
make install                                                                                            
                                                                                                        
# install elastic pass                                                                                  
cd ../../$DHLS/elastic-circuits                                                                         
mkdir _build && cd _build                                                                               
cmake .. -DLLVM_ROOT=../../../llvm-6.0                                                                  
make -j4                                                                                                
                                                                                                        
# install buffering tool                                                                                
cd ../../Buffers                                                                                        
mkdir bin                                                                                               
make                                                                                                    
                                                                                                        
# install the VHDL code generator                                                                       
cd ../dot2vhdl                                                                                          
mkdir bin                                                                                               
make                                                                                                    
                                                                                                        
cd ../..                                                                         
                                  
# install chisel lsq                                                                                    
sudo apt-get install default-jdk              
echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a /etc/apt/sources.list.d/sbt.list
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 642AC823                              
sudo apt-get update                                                           
sudo apt-get install sbt                                            
                                                   
                                                           
# todo install tb                                                                                       
                                                
echo "============= Installation Success ================"                                              
                                                   
                                                                                                        
vagrant@ubuntu-bionic:/shared/dass$ ls                                                                  
LICENSE    dhls             env.tcl   examples_1  examples_3  libExt  llvm-6.0           src    src_2
README.md  dhls_install.sh  examples  examples_2  install.sh  llvm    prism-4.6-linux64  src_1  src_3
vagrant@ubuntu-bionic:/shared/dass$ cd ../iiProver/src/
vagrant@ubuntu-bionic:/shared/iiProver/src$ ls
CMakeLists.txt  _build  boogieGen  helper.py  helper.pyc  tclGen.py
vagrant@ubuntu-bionic:/shared/iiProver/src$ cd ../
vagrant@ubuntu-bionic:/shared/iiProver$ ls
env.tcl  examples  install.sh  src
vagrant@ubuntu-bionic:/shared/iiProver$ cd examples/
vagrant@ubuntu-bionic:/shared/iiProver/examples$ ls
Makefile  loopCond  vecTrans
vagrant@ubuntu-bionic:/shared/iiProver/examples$ vim                                                    
.DS_Store  Makefile   loopCond/  vecTrans/  
vagrant@ubuntu-bionic:/shared/iiProver/examples$ vim vecTrans/proj/soluion1/.autopilot/db/a.o.3.ll      
; ModuleID = 'a.o.3.bc'                                                                                 
source_filename = "a.o.3.bc"                                                                            
target datalayout = "e-m:e-i64:64-i128:128-i256:256-i512:512-i1024:1024-i2048:2048-i4096:4096-n8:16:32:6
4-S128-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024"                       
target triple = "fpga64-xilinx-none"                                                                    
                                                                                                        
$_ssdm_op_SpecTopModule = comdat any                                                                    
                                                                                                        
$_ssdm_op_SpecPipeline = comdat any                                                                     
                                                                                                        
$_ssdm_op_SpecLoopTripCount = comdat any                                                                
                                                                                                        
$_ssdm_op_SpecLoopName = comdat any                                                                     
                                                                                                        
$_ssdm_op_SpecBitsMap = comdat any                                                                      
                                                                                                        
$_ssdm_op_PartSelect.i8.i11.i32.i32 = comdat any                                                        
                                                                                                        
$_ssdm_op_PartSelect.i7.i10.i32.i32 = comdat any                                                        
                                                                                                        
$_ssdm_op_PartSelect.i11.i64.i32.i32 = comdat any                                                       
                                                                                                        
$_ssdm_op_BitConcatenate.i10.i7.i3 = comdat any                                                         
                                                                                                        
@empty = internal unnamed_addr constant [1 x i8] zeroinitializer                                        
@empty_0 = internal unnamed_addr constant [9 x i8] c"vecTrans\00"                                       
@empty_1 = internal unnamed_addr constant [15 x i8] c"VITIS_LOOP_5_1\00"                                
                                                                                                        
define void @vecTrans([500 x i64]* noalias %A_0, [500 x i64]* noalias %A_1) {    
  call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !50
  call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !56                                    
  call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
  br label %bb5, !bitwidth !62                                                               
                                                                                                        
bb5:                                              ; preds = %1, %0            
  %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !63            
  %icmp_ln5 = icmp eq i7 %i, -28, !bitwidth !64    
  %empty = call i32 (...) @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) #2
  %add_ln5 = add i7 %i, 1, !bitwidth !63                                                                
  br i1 %icmp_ln5, label %2, label %bb5.split, !llvm.loop !65, !bitwidth !62
                                                                                                        
bb5.split:                                        ; preds = %bb5
  %zext_ln5 = zext i7 %i to i64, !bitwidth !69                                                          
  call void (...) @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2               
  call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2                                     
  %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !70                 
  %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !71  
  %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
  %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !72, !deps !73, !dep_cands !77
  %a = bitcast i64 %A_0_load to double, !bitwidth !37
  %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidth !80
  %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !81
  %icmp_ln10 = icmp ne i11 %tmp, -1, !bitwidth !64  
  %icmp_ln10_1 = icmp eq i52 %trunc_ln10, 0, !bitwidth !64
  %or_ln10 = or i1 %icmp_ln10_1, %icmp_ln10, !bitwidth !64
  %tmp_1 = fcmp ogt double %a, 1.000000e+02, !bitwidth !64                                              
  %and_ln10 = and i1 %or_ln10, %tmp_1, !bitwidth !64
  br i1 %and_ln10, label %bb, label %bb4, !bitwidth !62                                                 
/pi                                                                                                     
!38 = !{double 2.000000e-01, !37}                                                                       
!39 = !{double 3.000000e-01, !37}                                                                       
!40 = !{double 6.000000e-01, !37}                                                                       
!41 = !{double 0x3FE6666666666666, !37}                                                                 
!42 = !{i11 504, !43}                                                                                   
!43 = !{i32 10, i32 11, i32 0, i32 1}                                                                   
!44 = !{i32 3, !19}                                                                                     
!45 = !{i32 10, !46}                                                                                    
!46 = !{i32 5, i32 32, i32 0, i32 1}                                                                    
!47 = !{i10 72, !48}                                                                                    
!48 = !{i32 8, i32 10, i32 0, i32 1}                                                                    
!49 = !{i32 9, !46}                                                                                     
!50 = !{!51}                                                                                            
!51 = !{i32 0, i32 63, !52}                                                                             
!52 = !{!53}                                                                                            
!53 = !{!"A", !54, !"", i32 0, i32 63}                                                                  
!54 = !{!55}                                                                                            
!55 = !{i32 500, i32 999, i32 1}                                                                        
!56 = !{!57}                                                                                            
!57 = !{i32 0, i32 63, !58}                                                                             
!58 = !{!59}                                                                                            
!59 = !{!"A", !60, !"", i32 0, i32 63}                                                                  
!60 = !{!61}                                                                                            
!61 = !{i32 0, i32 499, i32 1}                                                                          
!62 = !{i32 0, i32 0, i32 0, i32 2}                                                                     
!63 = !{i32 7, i32 7, i32 0, i32 2}                                                                     
!64 = !{i32 1, i32 1, i32 0, i32 2}                                                                     
!65 = distinct !{!65, !1, !1, !66, !67, !68}                                                            
!66 = !{!"llvm.loop.pipeline.enable", i32 2, i1 false}                           
!67 = !{!"llvm.loop.name", !"VITIS_LOOP_5_1"}                       
!68 = !{!"llvm.loop.unroll.disable"}                                                                    
!69 = !{i32 64, i32 64, i32 0, i32 0}                           
!70 = !{i32 10, i32 10, i32 0, i32 2}                                                        
!71 = !{i32 11, i32 11, i32 0, i32 0}                                                                   
!72 = !{i32 0}                                                                
!73 = !{!74, !76}                                                   
!74 = !{i32 2, !75}                                
!75 = !{!"WAR", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}                  
!76 = !{i32 1, !75}                                                                                     
!77 = !{!78, !79}                                                           
!78 = !{i32 2, !"(src/vecTrans.cpp:5:47)"}                                                              
!79 = !{i32 1, !"(src/vecTrans.cpp:5:47)"}                      
!80 = !{i32 11, i32 11, i32 0, i32 2}                                                                   
!81 = !{i32 52, i32 52, i32 0, i32 2}                                                                   
!82 = !{i32 11, i32 11, i32 0, i32 1}                                                                
!83 = !{i32 8, i32 8, i32 0, i32 2}                                                                  
!84 = !{i32 1}                                         
!85 = !{!86, !88}                                                                             
!86 = !{i32 2, !87}                                                                                    
!87 = !{!"WAW", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}
!88 = !{i32 0, !89}                                                                                 
!89 = !{!"RAW", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}
!90 = !{!78, !91}                                   
!91 = !{i32 0, !"(src/vecTrans.cpp:5:47)"}                
!92 = !{i32 2}                                            
!93 = !{!88, !94}                                                                                       
!94 = !{i32 1, !87}                                 
!95 = !{!91, !79}                                                                                       
vagrant@ubuntu-bionic:/shared/iiProver/examples$ vim vecTrans/proj/soluion1/.autopilot/db/a.o.3.ll      
!38 = !{double 2.000000e-01, !37}                                                                       
!39 = !{double 3.000000e-01, !37}                                                                       
!40 = !{double 6.000000e-01, !37}                                                                       
!41 = !{double 0x3FE6666666666666, !37}                                                                 
!42 = !{i11 504, !43}                                                                                   
!43 = !{i32 10, i32 11, i32 0, i32 1}                                                                   
!44 = !{i32 3, !19}                                                                                     
!45 = !{i32 10, !46}                                                                                    
!46 = !{i32 5, i32 32, i32 0, i32 1}                                                                    
!47 = !{i10 72, !48}                                                                                    
!48 = !{i32 8, i32 10, i32 0, i32 1}                                                                    
!49 = !{i32 9, !46}                                                                                     
!50 = !{!51}                                                                                            
!51 = !{i32 0, i32 63, !52}                                                                             
!52 = !{!53}                                                                                            
!53 = !{!"A", !54, !"", i32 0, i32 63}                                                                  
!54 = !{!55}                                                                                            
!55 = !{i32 500, i32 999, i32 1}                                                                        
!56 = !{!57}                                                                                            
!57 = !{i32 0, i32 63, !58}                                                                             
!58 = !{!59}                                                                                            
!59 = !{!"A", !60, !"", i32 0, i32 63}                                                                  
!60 = !{!61}                                                                                            
!61 = !{i32 0, i32 499, i32 1}                                                                          
!62 = !{i32 0, i32 0, i32 0, i32 2}                                                                     
!63 = !{i32 7, i32 7, i32 0, i32 2}                                                                     
!64 = !{i32 1, i32 1, i32 0, i32 2}                                                                     
!65 = distinct !{!65, !1, !1, !66, !67, !68}                                     
!66 = !{!"llvm.loop.pipeline.enable", i32 2, i1 false}              
!67 = !{!"llvm.loop.name", !"VITIS_LOOP_5_1"}                                                           
!68 = !{!"llvm.loop.unroll.disable"}                            
!69 = !{i32 64, i32 64, i32 0, i32 0}                                                        
!70 = !{i32 10, i32 10, i32 0, i32 2}                                                                   
!71 = !{i32 11, i32 11, i32 0, i32 0}                                         
!72 = !{i32 0}                                                      
!73 = !{!74, !76}                                  
!74 = !{i32 2, !75}                                                                
!75 = !{!"WAR", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}                                       
!76 = !{i32 1, !75}                                                         
!77 = !{!78, !79}                                                                                       
!78 = !{i32 2, !"(src/vecTrans.cpp:5:47)"}                      
!79 = !{i32 1, !"(src/vecTrans.cpp:5:47)"}                                                              
!80 = !{i32 11, i32 11, i32 0, i32 2}                                                                   
!81 = !{i32 52, i32 52, i32 0, i32 2}                                                                
!82 = !{i32 11, i32 11, i32 0, i32 1}                                                                
!83 = !{i32 8, i32 8, i32 0, i32 2}                    
!84 = !{i32 1}                                                                                
!85 = !{!86, !88}                                                                                      
!86 = !{i32 2, !87}                                              
!87 = !{!"WAW", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}                                   
!88 = !{i32 0, !89}                                              
!89 = !{!"RAW", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}
!90 = !{!78, !91}                                         
!91 = !{i32 0, !"(src/vecTrans.cpp:5:47)"}                
!92 = !{i32 2}                                                                                          
!93 = !{!88, !94}                                   
!94 = !{i32 1, !87}                                                                                     
!95 = !{!91, !79}                                                                                       
:66                                                                                                     
  %add_ln5 = add i7 %i, 1, !bitwidth !63                                                                
  br i1 %icmp_ln5, label %2, label %bb5.split, !llvm.loop !65, !bitwidth !62                            
                                                                                                        
bb5.split:                                        ; preds = %bb5                                        
  %zext_ln5 = zext i7 %i to i64, !bitwidth !69                                                          
  call void (...) @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2               
  call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2                                        
  %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !70                    
  %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !71                                                   
  %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7          
  %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !72, !deps !73, !dep_cands !77 
  %a = bitcast i64 %A_0_load to double, !bitwidth !37                                                   
  %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidth !80    
  %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !81                                               
  %icmp_ln10 = icmp ne i11 %tmp, -1, !bitwidth !64                                                      
  %icmp_ln10_1 = icmp eq i52 %trunc_ln10, 0, !bitwidth !64                                              
  %or_ln10 = or i1 %icmp_ln10_1, %icmp_ln10, !bitwidth !64                                              
  %tmp_1 = fcmp ogt double %a, 1.000000e+02, !bitwidth !64                                              
  %and_ln10 = and i1 %or_ln10, %tmp_1, !bitwidth !64                                                    
  br i1 %and_ln10, label %bb, label %bb4, !bitwidth !62                                                 
                                                                                                        
bb:                                               ; preds = %bb5.split                                  
  %add = fadd double %a, 2.000000e-01, !bitwidth !37                                                    
  %mul = fmul double %add, %a, !bitwidth !37                                                            
  %add2 = fadd double %mul, 3.000000e-01, !bitwidth !37                                                 
  %mul3 = fmul double %add2, %a, !bitwidth !37                                                          
  %add4 = fadd double %mul3, 6.000000e-01, !bitwidth !37                                                
  %mul5 = fmul double %add4, %a, !bitwidth !37                                   
  %add6 = fadd double %mul5, 2.000000e-01, !bitwidth !37            
  %mul7 = fmul double %add6, %a, !bitwidth !37                                                          
  %add8 = fadd double %mul7, 0x3FE6666666666666, !bitwidth !37  
  %mul9 = fmul double %add8, %a, !bitwidth !37                                               
  %b = fadd double %mul9, 2.000000e-01, !bitwidth !37                                                   
  %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !82                           
  %bitcast_ln12 = bitcast double %b to i64, !bitwidth !37           
  %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwidth !83
  %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !69                            
  %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7       
  store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !62, !dep_idx !84, !deps !85, !dep_cands
 !90                                                                                                    
  br label %1, !bitwidth !62                                    
                                                                                                        
bb4:                                              ; preds = %bb5.split                                  
  %b_1 = fmul double %a, %a, !bitwidth !37                                                           
  %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !70                                                    
  %bitcast_ln16 = bitcast double %b_1 to i64, !bitwidth !37
  %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidth !63
  %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !69                                                
  %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
  store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !62, !dep_idx !92, !deps !93, !dep_cands
 !95                                                             
  br label %1, !bitwidth !62                                     
                                                          
; <label>:1:                                      ; preds = %bb4, %bb
  br label %bb5, !llvm.loop !65, !bitwidth !62                                                          
                                                    
; <label>:2:                                      ; preds = %bb5                                        
  ret void, !bitwidth !62                                                                               
/pipeline                                                                                               
!38 = !{double 2.000000e-01, !37}                                                                       
!39 = !{double 3.000000e-01, !37}                                                                       
!40 = !{double 6.000000e-01, !37}                                                                       
!41 = !{double 0x3FE6666666666666, !37}                                                                 
!42 = !{i11 504, !43}                                                                                   
!43 = !{i32 10, i32 11, i32 0, i32 1}                                                                   
!44 = !{i32 3, !19}                                                                                     
!45 = !{i32 10, !46}                                                                                    
!46 = !{i32 5, i32 32, i32 0, i32 1}                                                                    
!47 = !{i10 72, !48}                                                                                    
!48 = !{i32 8, i32 10, i32 0, i32 1}                                                                    
!49 = !{i32 9, !46}                                                                                     
!50 = !{!51}                                                                                            
!51 = !{i32 0, i32 63, !52}                                                                             
!52 = !{!53}                                                                                            
!53 = !{!"A", !54, !"", i32 0, i32 63}                                                                  
!54 = !{!55}                                                                                            
!55 = !{i32 500, i32 999, i32 1}                                                                        
!56 = !{!57}                                                                                            
!57 = !{i32 0, i32 63, !58}                                                                             
!58 = !{!59}                                                                                            
!59 = !{!"A", !60, !"", i32 0, i32 63}                                                                  
!60 = !{!61}                                                                                            
!61 = !{i32 0, i32 499, i32 1}                                                                          
!62 = !{i32 0, i32 0, i32 0, i32 2}                                                                     
!63 = !{i32 7, i32 7, i32 0, i32 2}                                                                     
!64 = !{i32 1, i32 1, i32 0, i32 2}                                                                     
!65 = distinct !{!65, !1, !1, !66, !67, !68}                                     
!66 = !{!"llvm.loop.pipeline.enable", i32 2, i1 false}              
!67 = !{!"llvm.loop.name", !"VITIS_LOOP_5_1"}                                                           
!68 = !{!"llvm.loop.unroll.disable"}                            
!69 = !{i32 64, i32 64, i32 0, i32 0}                                                        
!70 = !{i32 10, i32 10, i32 0, i32 2}                                                                   
!71 = !{i32 11, i32 11, i32 0, i32 0}                                         
!72 = !{i32 0}                                                      
!73 = !{!74, !76}                                                                                      
!74 = !{i32 2, !75}                                                                
!75 = !{!"WAR", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}                                       
!76 = !{i32 1, !75}                                                                                     
!77 = !{!78, !79}                                                                                       
!78 = !{i32 2, !"(src/vecTrans.cpp:5:47)"}                      
!79 = !{i32 1, !"(src/vecTrans.cpp:5:47)"}                                                              
!80 = !{i32 11, i32 11, i32 0, i32 2}                                                                   
!81 = !{i32 52, i32 52, i32 0, i32 2}                                                                
!82 = !{i32 11, i32 11, i32 0, i32 1}                                                                
!83 = !{i32 8, i32 8, i32 0, i32 2}                        
!84 = !{i32 1}                                                                                        
!85 = !{!86, !88}                                                                                      
!86 = !{i32 2, !87}                                                                              
!87 = !{!"WAW", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}                                       
!88 = !{i32 0, !89}                                              
!89 = !{!"RAW", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}
!90 = !{!78, !91}                                         
!91 = !{i32 0, !"(src/vecTrans.cpp:5:47)"}                           
!92 = !{i32 2}                                                                                          
!93 = !{!88, !94}                                   
!94 = !{i32 1, !87}                                                                                     
!95 = !{!91, !79}                                                                                       
/66                                                                                                     
                                                                                                        
bb5.split:                                        ; preds = %bb5                                        
  %zext_ln5 = zext i7 %i to i64, !bitwidth !69                                                          
  call void (...) @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2               
  call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2                                        
  %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !70                    
  %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !71                                                   
  %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7          
  %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !72, !deps !73, !dep_cands !77 
  %a = bitcast i64 %A_0_load to double, !bitwidth !37                                                   
  %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidth !80    
  %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !81                                               
  %icmp_ln10 = icmp ne i11 %tmp, -1, !bitwidth !64                                                      
  %icmp_ln10_1 = icmp eq i52 %trunc_ln10, 0, !bitwidth !64                                              
  %or_ln10 = or i1 %icmp_ln10_1, %icmp_ln10, !bitwidth !64                                              
  %tmp_1 = fcmp ogt double %a, 1.000000e+02, !bitwidth !64                                              
  %and_ln10 = and i1 %or_ln10, %tmp_1, !bitwidth !64                                                    
  br i1 %and_ln10, label %bb, label %bb4, !bitwidth !62                                                 
                                                                                                        
bb:                                               ; preds = %bb5.split                                  
  %add = fadd double %a, 2.000000e-01, !bitwidth !37                                                    
  %mul = fmul double %add, %a, !bitwidth !37                                                            
  %add2 = fadd double %mul, 3.000000e-01, !bitwidth !37                                                 
  %mul3 = fmul double %add2, %a, !bitwidth !37                                                          
  %add4 = fadd double %mul3, 6.000000e-01, !bitwidth !37                                                
  %mul5 = fmul double %add4, %a, !bitwidth !37                                                          
  %add6 = fadd double %mul5, 2.000000e-01, !bitwidth !37                                                
  %mul7 = fmul double %add6, %a, !bitwidth !37                                   
  %add8 = fadd double %mul7, 0x3FE6666666666666, !bitwidth !37      
  %mul9 = fmul double %add8, %a, !bitwidth !37                                                          
  %b = fadd double %mul9, 2.000000e-01, !bitwidth !37           
  %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !82                                          
  %bitcast_ln12 = bitcast double %b to i64, !bitwidth !37                                               
  %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwidth !83
  %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !69             
  %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7      
  store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !62, !dep_idx !84, !deps !85, !dep_cands
 !90                                                                                                    
  br label %1, !bitwidth !62                                                                            
                                                                                                        
bb4:                                              ; preds = %bb5.split
  %b_1 = fmul double %a, %a, !bitwidth !37                                                              
  %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !70                                                       
  %bitcast_ln16 = bitcast double %b_1 to i64, !bitwidth !37                                          
  %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidth !63
  %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !69    
  %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7     
  store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !62, !dep_idx !92, !deps !93, !dep_cands
 !95                                                                                             
  br label %1, !bitwidth !62                                                                            
                                                                 
; <label>:1:                                      ; preds = %bb4, %bb
  br label %bb5, !llvm.loop !65, !bitwidth !62            
                                                                     
; <label>:2:                                      ; preds = %bb5                                        
  ret void, !bitwidth !62                           
}                                                                                                       
                                                                                                        
/66                                                                                                     
!14 = !{i32 6, i32 7, i32 0, i32 1}                                                                     
!15 = !{i64 100, !16}                                                                                   
!16 = !{i32 8, i32 64, i32 0, i32 1}                                                                    
!17 = !{i7 1, !12}                                                                                      
!18 = !{i32 2, !19}                                                                                     
!19 = !{i32 3, i32 32, i32 0, i32 1}                                                                    
!20 = !{i32 1, !21}                                                                                     
!21 = !{i32 1, i32 32, i32 0, i32 0}                                                                    
!22 = !{i32 0, !21}                                                                                     
!23 = !{[1 x i8]* @empty, !10}                                                                          
!24 = !{[15 x i8]* @empty_1, !10}                                                                       
!25 = !{i3 0, !26}                                                                                      
!26 = !{i32 1, i32 3, i32 0, i32 0}                                                                     
!27 = !{i64 0, !28}                                                                                     
!28 = !{i32 1, i32 64, i32 0, i32 0}                                                                    
!29 = !{i32 52, !30}                                                                                    
!30 = !{i32 7, i32 32, i32 0, i32 1}                                                                    
!31 = !{i32 62, !30}                                                                                    
!32 = !{i11 -1, !33}                                                                                    
!33 = !{i32 1, i32 11, i32 0, i32 1}                                                                    
!34 = !{i52 0, !35}                                                                                     
!35 = !{i32 1, i32 52, i32 0, i32 0}                                                                    
!36 = !{double 1.000000e+02, !37}                                                                       
!37 = !{i32 64, i32 64, i32 0, i32 2}                                                                   
!38 = !{double 2.000000e-01, !37}                                                                       
!39 = !{double 3.000000e-01, !37}                                                                       
!40 = !{double 6.000000e-01, !37}                                                
!41 = !{double 0x3FE6666666666666, !37}                             
!42 = !{i11 504, !43}                                                                                   
!43 = !{i32 10, i32 11, i32 0, i32 1}                           
!44 = !{i32 3, !19}                                                                          
!45 = !{i32 10, !46}                                                                                    
!46 = !{i32 5, i32 32, i32 0, i32 1}                                                                   
!47 = !{i10 72, !48}                                                
!48 = !{i32 8, i32 10, i32 0, i32 1}                                                                   
!49 = !{i32 9, !46}                                                                                     
!50 = !{!51}                                                                                            
!51 = !{i32 0, i32 63, !52}                                                                             
!52 = !{!53}                                                                                            
!53 = !{!"A", !54, !"", i32 0, i32 63}                                
!54 = !{!55}                                                                                            
!55 = !{i32 500, i32 999, i32 1}                                                                        
!56 = !{!57}                                                                                         
!57 = !{i32 0, i32 63, !58}                                                                           
!58 = !{!59}                                               
!59 = !{!"A", !60, !"", i32 0, i32 63}                                                                
!60 = !{!61}                                                                                            
!61 = !{i32 0, i32 499, i32 1}                                                                   
!62 = !{i32 0, i32 0, i32 0, i32 2}                                                                     
!63 = !{i32 7, i32 7, i32 0, i32 2}                              
!64 = !{i32 1, i32 1, i32 0, i32 2}                                  
!65 = distinct !{!65, !1, !1, !66, !67, !68}              
!66 = !{!"llvm.loop.pipeline.enable", i32 2, i1 false}               
!67 = !{!"llvm.loop.name", !"VITIS_LOOP_5_1"}                                                           
!68 = !{!"llvm.loop.unroll.disable"}                
!69 = !{i32 64, i32 64, i32 0, i32 0}                                                                   
!70 = !{i32 10, i32 10, i32 0, i32 2}                                                                   
!71 = !{i32 11, i32 11, i32 0, i32 0}
search hit BOTTOM, continuing at TOP                                                                    
                                                                                                        
bb5.split:                                        ; preds = %bb5                                        
  %zext_ln5 = zext i7 %i to i64, !bitwidth !69                                                          
  call void (...) @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2               
  call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2                                        
  %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !70                    
  %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !71                                                   
  %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7          
  %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !72, !deps !73, !dep_cands !77 
  %a = bitcast i64 %A_0_load to double, !bitwidth !37                                                   
  %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidth !80    
  %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !81                                               
  %icmp_ln10 = icmp ne i11 %tmp, -1, !bitwidth !64                                                      
  %icmp_ln10_1 = icmp eq i52 %trunc_ln10, 0, !bitwidth !64                                              
  %or_ln10 = or i1 %icmp_ln10_1, %icmp_ln10, !bitwidth !64                                              
  %tmp_1 = fcmp ogt double %a, 1.000000e+02, !bitwidth !64                                              
  %and_ln10 = and i1 %or_ln10, %tmp_1, !bitwidth !64                                                    
  br i1 %and_ln10, label %bb, label %bb4, !bitwidth !62                                                 
                                                                                                        
bb:                                               ; preds = %bb5.split                                  
  %add = fadd double %a, 2.000000e-01, !bitwidth !37                                                    
  %mul = fmul double %add, %a, !bitwidth !37                                                            
  %add2 = fadd double %mul, 3.000000e-01, !bitwidth !37                                                 
  %mul3 = fmul double %add2, %a, !bitwidth !37                                                          
  %add4 = fadd double %mul3, 6.000000e-01, !bitwidth !37                                                
  %mul5 = fmul double %add4, %a, !bitwidth !37                                                          
  %add6 = fadd double %mul5, 2.000000e-01, !bitwidth !37                         
  %mul7 = fmul double %add6, %a, !bitwidth !37                      
  %add8 = fadd double %mul7, 0x3FE6666666666666, !bitwidth !37                                          
  %mul9 = fmul double %add8, %a, !bitwidth !37                  
  %b = fadd double %mul9, 2.000000e-01, !bitwidth !37                                        
  %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !82                                                     
  %bitcast_ln12 = bitcast double %b to i64, !bitwidth !37                                              
  %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwidth !83
  %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !69                                                
  %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7       
  store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !62, !dep_idx !84, !deps !85, !dep_cands
 !90                                                                                                    
  br label %1, !bitwidth !62                                                                            
                                                                      
bb4:                                              ; preds = %bb5.split                                  
  %b_1 = fmul double %a, %a, !bitwidth !37                                                              
  %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !70                                                    
  %bitcast_ln16 = bitcast double %b_1 to i64, !bitwidth !37                                           
  %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidth !63
  %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !69                                               
  %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7       
  store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !62, !dep_idx !92, !deps !93, !dep_cands
 !95                                                                                                    
  br label %1, !bitwidth !62                                     
                                                                     
; <label>:1:                                      ; preds = %bb4, %bb
  br label %bb5, !llvm.loop !65, !bitwidth !62                       
                                                                                                        
; <label>:2:                                      ; preds = %bb5
  ret void, !bitwidth !62                                                                               
}                                                                                                       
                                     
/!66                                                                                                    
!37 = !{i32 64, i32 64, i32 0, i32 2}                                                                   
!38 = !{double 2.000000e-01, !37}                                                                       
!39 = !{double 3.000000e-01, !37}                                                                       
!40 = !{double 6.000000e-01, !37}                                                                       
!41 = !{double 0x3FE6666666666666, !37}                                                                 
!42 = !{i11 504, !43}                                                                                   
!43 = !{i32 10, i32 11, i32 0, i32 1}                                                                   
!44 = !{i32 3, !19}                                                                                     
!45 = !{i32 10, !46}                                                                                    
!46 = !{i32 5, i32 32, i32 0, i32 1}                                                                    
!47 = !{i10 72, !48}                                                                                    
!48 = !{i32 8, i32 10, i32 0, i32 1}                                                                    
!49 = !{i32 9, !46}                                                                                     
!50 = !{!51}                                                                                            
!51 = !{i32 0, i32 63, !52}                                                                             
!52 = !{!53}                                                                                            
!53 = !{!"A", !54, !"", i32 0, i32 63}                                                                  
!54 = !{!55}                                                                                            
!55 = !{i32 500, i32 999, i32 1}                                                                        
!56 = !{!57}                                                                                            
!57 = !{i32 0, i32 63, !58}                                                                             
!58 = !{!59}                                                                                            
!59 = !{!"A", !60, !"", i32 0, i32 63}                                                                  
!60 = !{!61}                                                                                            
!61 = !{i32 0, i32 499, i32 1}                                                                          
!62 = !{i32 0, i32 0, i32 0, i32 2}                                                                     
!63 = !{i32 7, i32 7, i32 0, i32 2}                                              
!64 = !{i32 1, i32 1, i32 0, i32 2}                                 
!65 = distinct !{!65, !1, !1, !66, !67, !68}                                                            
!66 = !{!"llvm.loop.pipeline.enable", i32 2, i1 false}          
!67 = !{!"llvm.loop.name", !"VITIS_LOOP_5_1"}                                                
!68 = !{!"llvm.loop.unroll.disable"}                                                                    
!69 = !{i32 64, i32 64, i32 0, i32 0}                                                                  
!70 = !{i32 10, i32 10, i32 0, i32 2}                                                                  
!71 = !{i32 11, i32 11, i32 0, i32 0}                                                                  
!72 = !{i32 0}                                                                                          
!73 = !{!74, !76}                                                                                       
!74 = !{i32 2, !75}                                                                                     
!75 = !{!"WAR", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}                                       
!76 = !{i32 1, !75}                                                   
!77 = !{!78, !79}                                                                                       
!78 = !{i32 2, !"(src/vecTrans.cpp:5:47)"}                                                              
!79 = !{i32 1, !"(src/vecTrans.cpp:5:47)"}                                                           
!80 = !{i32 11, i32 11, i32 0, i32 2}                                                                 
!81 = !{i32 52, i32 52, i32 0, i32 2}                                                                 
!82 = !{i32 11, i32 11, i32 0, i32 1}                                                                 
!83 = !{i32 8, i32 8, i32 0, i32 2}                                                                     
!84 = !{i32 1}                                                                                          
!85 = !{!86, !88}                                                                                       
!86 = !{i32 2, !87}                                              
!87 = !{!"WAW", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}    
!88 = !{i32 0, !89}                                                  
!89 = !{!"RAW", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}    
!90 = !{!78, !91}                                                                                       
!91 = !{i32 0, !"(src/vecTrans.cpp:5:47)"}                      
!92 = !{i32 2}                                                                                          
!93 = !{!88, !94}                                                                                       
!94 = !{i32 1, !87}                  
/!65                                                                                                    
                                                                
bb5.split:                                        ; preds = %bb5                             
  %zext_ln5 = zext i7 %i to i64, !bitwidth !69                                                          
  call void (...) @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2              
  call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2                                       
  %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !70                   
  %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !71                                                   
  %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7          
  %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !72, !deps !73, !dep_cands !77 
  %a = bitcast i64 %A_0_load to double, !bitwidth !37                                                   
  %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidth !80
  %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !81                                               
  %icmp_ln10 = icmp ne i11 %tmp, -1, !bitwidth !64                                                      
  %icmp_ln10_1 = icmp eq i52 %trunc_ln10, 0, !bitwidth !64                                           
  %or_ln10 = or i1 %icmp_ln10_1, %icmp_ln10, !bitwidth !64                                            
  %tmp_1 = fcmp ogt double %a, 1.000000e+02, !bitwidth !64                                            
  %and_ln10 = and i1 %or_ln10, %tmp_1, !bitwidth !64                                                  
  br i1 %and_ln10, label %bb, label %bb4, !bitwidth !62                                                 
                                                                                                        
bb:                                               ; preds = %bb5.split                                  
  %add = fadd double %a, 2.000000e-01, !bitwidth !37             
  %mul = fmul double %add, %a, !bitwidth !37                         
  %add2 = fadd double %mul, 3.000000e-01, !bitwidth !37              
  %mul3 = fmul double %add2, %a, !bitwidth !37                       
  %add4 = fadd double %mul3, 6.000000e-01, !bitwidth !37                                                
  %mul5 = fmul double %add4, %a, !bitwidth !37                  
  %add6 = fadd double %mul5, 2.000000e-01, !bitwidth !37                                                
  %mul7 = fmul double %add6, %a, !bitwidth !37                                                          
  %add8 = fadd double %mul7, 0x3FE6666666666666, !bitwidth !37
  %mul9 = fmul double %add8, %a, !bitwidth !37
  %b = fadd double %mul9, 2.000000e-01, !bitwidth !37
  %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !82
  %bitcast_ln12 = bitcast double %b to i64, !bitwidth !37
  %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwidth !83
  %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !69
  %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
  store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !62, !dep_idx !84, !deps !85, !dep_cands
 !90
  br label %1, !bitwidth !62

bb4:                                              ; preds = %bb5.split
  %b_1 = fmul double %a, %a, !bitwidth !37
  %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !70
  %bitcast_ln16 = bitcast double %b_1 to i64, !bitwidth !37
  %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidth !63
  %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !69
  %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
  store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !62, !dep_idx !92, !deps !93, !dep_cands
 !95
  br label %1, !bitwidth !62

; <label>:1:                                      ; preds = %bb4, %bb
  br label %bb5, !llvm.loop !65, !bitwidth !62

; <label>:2:                                      ; preds = %bb5
  ret void, !bitwidth !62
}

/!65                                                                                                    
!37 = !{i32 64, i32 64, i32 0, i32 2}                                                                   
!38 = !{double 2.000000e-01, !37}                                                            
!39 = !{double 3.000000e-01, !37}                                                                       
!40 = !{double 6.000000e-01, !37}                                                                      
!41 = !{double 0x3FE6666666666666, !37}                                                                
!42 = !{i11 504, !43}                                                                                  
!43 = !{i32 10, i32 11, i32 0, i32 1}                                                                   
!44 = !{i32 3, !19}                                                                                     
!45 = !{i32 10, !46}                                                                                    
!46 = !{i32 5, i32 32, i32 0, i32 1}                                                                    
!47 = !{i10 72, !48}                                                                                
!48 = !{i32 8, i32 10, i32 0, i32 1}                                                                    
!49 = !{i32 9, !46}                                                                                     
!50 = !{!51}                                                                                         
!51 = !{i32 0, i32 63, !52}                                                                           
!52 = !{!53}                                                                                          
!53 = !{!"A", !54, !"", i32 0, i32 63}                                                                
!54 = !{!55}                                                                                            
!55 = !{i32 500, i32 999, i32 1}                                                                        
!56 = !{!57}                                                                                            
!57 = !{i32 0, i32 63, !58}                                      
!58 = !{!59}                                                         
!59 = !{!"A", !60, !"", i32 0, i32 63}                               
!60 = !{!61}                                                         
!61 = !{i32 0, i32 499, i32 1}                                                                          
!62 = !{i32 0, i32 0, i32 0, i32 2}                             
!63 = !{i32 7, i32 7, i32 0, i32 2}                                                                     
!64 = !{i32 1, i32 1, i32 0, i32 2}                                                                     
!65 = distinct !{!65, !1, !1, !66, !67, !68}                  
!66 = !{!"llvm.loop.pipeline.enable", i32 2, i1 false}
!67 = !{!"llvm.loop.name", !"VITIS_LOOP_5_1"}        
!68 = !{!"llvm.loop.unroll.disable"}               
!69 = !{i32 64, i32 64, i32 0, i32 0}                    
!70 = !{i32 10, i32 10, i32 0, i32 2}                                                                  
!71 = !{i32 11, i32 11, i32 0, i32 0}                  
!72 = !{i32 0}                                                                                   
!73 = !{!74, !76}                                                                                       
!74 = !{i32 2, !75}
!75 = !{!"WAR", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}
!76 = !{i32 1, !75}
!77 = !{!78, !79}                                                     
!78 = !{i32 2, !"(src/vecTrans.cpp:5:47)"}
!79 = !{i32 1, !"(src/vecTrans.cpp:5:47)"}       
!80 = !{i32 11, i32 11, i32 0, i32 2}                      
!81 = !{i32 52, i32 52, i32 0, i32 2}                                                                 
!82 = !{i32 11, i32 11, i32 0, i32 1}                  
!83 = !{i32 8, i32 8, i32 0, i32 2}                                                              
!84 = !{i32 1}                                                                                          
!85 = !{!86, !88}
!86 = !{i32 2, !87}         
!87 = !{!"WAW", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}
!88 = !{i32 0, !89}                                                  
!89 = !{!"RAW", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}
!90 = !{!78, !91}
!91 = !{i32 0, !"(src/vecTrans.cpp:5:47)"}                      
!92 = !{i32 2}           
!93 = !{!88, !94}
!94 = !{i32 1, !87}
search hit BOTTOM, continuing at TOP                                                                    
bb5:                                              ; preds = %1, %0
  %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !63
  %icmp_ln5 = icmp eq i7 %i, -28, !bitwidth !64
  %empty = call i32 (...) @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) #2
  %add_ln5 = add i7 %i, 1, !bitwidth !63
  br i1 %icmp_ln5, label %2, label %bb5.split, !llvm.loop !65, !bitwidth !62
                                                      
bb5.split:                                        ; preds = %bb5
  %zext_ln5 = zext i7 %i to i64, !bitwidth !69     
  call void (...) @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
  call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2                                       
  %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !70
  %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !71                                            
  %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7          
  %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !72, !deps !73, !dep_cands !77
  %a = bitcast i64 %A_0_load to double, !bitwidth !37            
  %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidth !80
  %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !81             
  %icmp_ln10 = icmp ne i11 %tmp, -1, !bitwidth !64
  %icmp_ln10_1 = icmp eq i52 %trunc_ln10, 0, !bitwidth !64
  %or_ln10 = or i1 %icmp_ln10_1, %icmp_ln10, !bitwidth !64 
  %tmp_1 = fcmp ogt double %a, 1.000000e+02, !bitwidth !64                                            
  %and_ln10 = and i1 %or_ln10, %tmp_1, !bitwidth !64   
  br i1 %and_ln10, label %bb, label %bb4, !bitwidth !62                                          
                                                                                                        
bb:                                               ; preds = %bb5.split
  %add = fadd double %a, 2.000000e-01, !bitwidth !37
  %mul = fmul double %add, %a, !bitwidth !37                     
  %add2 = fadd double %mul, 3.000000e-01, !bitwidth !37              
  %mul3 = fmul double %add2, %a, !bitwidth !37                   
  %add4 = fadd double %mul3, 6.000000e-01, !bitwidth !37
  %mul5 = fmul double %add4, %a, !bitwidth !37                  
  %add6 = fadd double %mul5, 2.000000e-01, !bitwidth !37
  %mul7 = fmul double %add6, %a, !bitwidth !37
  %add8 = fadd double %mul7, 0x3FE6666666666666, !bitwidth !37
  %mul9 = fmul double %add8, %a, !bitwidth !37
  %b = fadd double %mul9, 2.000000e-01, !bitwidth !37
  %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !82
  %bitcast_ln12 = bitcast double %b to i64, !bitwidth !37
  %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwidth !83
  %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !69
  %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
  store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !62, !dep_idx !84, !deps !85, !dep_cands
 !90
  br label %1, !bitwidth !62

bb4:                                              ; preds = %bb5.split
  %b_1 = fmul double %a, %a, !bitwidth !37
  %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !70
  %bitcast_ln16 = bitcast double %b_1 to i64, !bitwidth !37
  %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidth !63
  %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !69
  %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7
  store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !62, !dep_idx !92, !deps !93, !dep_cands
 !95
  br label %1, !bitwidth !62

; <label>:1:                                      ; preds = %bb4, %bb
search hit TOP, continuing at BOTTOM                                                                    
!37 = !{i32 64, i32 64, i32 0, i32 2}                                                                   
!38 = !{double 2.000000e-01, !37}                       
!39 = !{double 3.000000e-01, !37}              
!40 = !{double 6.000000e-01, !37}                                                  
!41 = !{double 0x3FE6666666666666, !37} 
!42 = !{i11 504, !43}                                                       
!43 = !{i32 10, i32 11, i32 0, i32 1}                 
!44 = !{i32 3, !19}                                             
!45 = !{i32 10, !46}                               
!46 = !{i32 5, i32 32, i32 0, i32 1}                                                     
!47 = !{i10 72, !48}                                                                                   
!48 = !{i32 8, i32 10, i32 0, i32 1}                                                
!49 = !{i32 9, !46}                                                                              
!50 = !{!51}                                                                                            
!51 = !{i32 0, i32 63, !52}                                                                            
!52 = !{!53}                                                     
!53 = !{!"A", !54, !"", i32 0, i32 63}                                                              
!54 = !{!55}                                                          
!55 = !{i32 500, i32 999, i32 1}                  
!56 = !{!57}                                              
!57 = !{i32 0, i32 63, !58}                                
!58 = !{!59}                                                                                          
!59 = !{!"A", !60, !"", i32 0, i32 63}                 
!60 = !{!61}                                                                                     
!61 = !{i32 0, i32 499, i32 1}                                                                          
!62 = !{i32 0, i32 0, i32 0, i32 2}                                   
!63 = !{i32 7, i32 7, i32 0, i32 2}                 
!64 = !{i32 1, i32 1, i32 0, i32 2}                              
!65 = distinct !{!65, !1, !1, !66, !67, !68}                         
!66 = !{!"llvm.loop.pipeline.enable", i32 2, i1 false}           
!67 = !{!"llvm.loop.name", !"VITIS_LOOP_5_1"}           
!68 = !{!"llvm.loop.unroll.disable"}                            
!69 = !{i32 64, i32 64, i32 0, i32 0}                   
!70 = !{i32 10, i32 10, i32 0, i32 2}         
!71 = !{i32 11, i32 11, i32 0, i32 0}                         
!72 = !{i32 0}                                
!73 = !{!74, !76}                                    
!74 = !{i32 2, !75}                                
!75 = !{!"WAR", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}
!76 = !{i32 1, !75}                                                                                    
!77 = !{!78, !79}                                      
!78 = !{i32 2, !"(src/vecTrans.cpp:5:47)"}                                                       
!79 = !{i32 1, !"(src/vecTrans.cpp:5:47)"}                                                              
!80 = !{i32 11, i32 11, i32 0, i32 2}
!81 = !{i32 52, i32 52, i32 0, i32 2}
!82 = !{i32 11, i32 11, i32 0, i32 1}
!83 = !{i32 8, i32 8, i32 0, i32 2}                                   
!84 = !{i32 1}                            
!85 = !{!86, !88}                                
!86 = !{i32 2, !87}                                        
!87 = !{!"WAW", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}                                     
!88 = !{i32 0, !89}                                    
!89 = !{!"RAW", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}                                
!90 = !{!78, !91}                                                                                       
!91 = !{i32 0, !"(src/vecTrans.cpp:5:47)"}
!92 = !{i32 2}              
!93 = !{!88, !94}
!94 = !{i32 1, !87}                                                  
?!65                                                                                                    

$_ssdm_op_SpecLoopName = comdat any

$_ssdm_op_SpecBitsMap = comdat any

$_ssdm_op_PartSelect.i8.i11.i32.i32 = comdat any

$_ssdm_op_PartSelect.i7.i10.i32.i32 = comdat any

$_ssdm_op_PartSelect.i11.i64.i32.i32 = comdat any

$_ssdm_op_BitConcatenate.i10.i7.i3 = comdat any

@empty = internal unnamed_addr constant [1 x i8] zeroinitializer
@empty_0 = internal unnamed_addr constant [9 x i8] c"vecTrans\00"
@empty_1 = internal unnamed_addr constant [15 x i8] c"VITIS_LOOP_5_1\00"

define void @vecTrans([500 x i64]* noalias %A_0, [500 x i64]* noalias %A_1) {
  call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !50
  call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !56
  call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
  br label %bb5, !bitwidth !62

bb5:                                              ; preds = %1, %0
  %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !63
  %icmp_ln5 = icmp eq i7 %i, -28, !bitwidth !64
  %empty = call i32 (...) @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) #2
  %add_ln5 = add i7 %i, 1, !bitwidth !63
  br i1 %icmp_ln5, label %2, label %bb5.split, !llvm.loop !65, !bitwidth !62

bb5.split:                                        ; preds = %bb5
  %zext_ln5 = zext i7 %i to i64, !bitwidth !69
  call void (...) @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
  call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
  %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !70
  %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !71
  %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
  %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !72, !deps !73, !dep_cands !77
  %a = bitcast i64 %A_0_load to double, !bitwidth !37
  %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidth !80
  %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !81
  %icmp_ln10 = icmp ne i11 %tmp, -1, !bitwidth !64
  %icmp_ln10_1 = icmp eq i52 %trunc_ln10, 0, !bitwidth !64
  %or_ln10 = or i1 %icmp_ln10_1, %icmp_ln10, !bitwidth !64
  %tmp_1 = fcmp ogt double %a, 1.000000e+02, !bitwidth !64
  %and_ln10 = and i1 %or_ln10, %tmp_1, !bitwidth !64
  br i1 %and_ln10, label %bb, label %bb4, !bitwidth !62

bb:                                               ; preds = %bb5.split
  %add = fadd double %a, 2.000000e-01, !bitwidth !37
  %mul = fmul double %add, %a, !bitwidth !37
  %add2 = fadd double %mul, 3.000000e-01, !bitwidth !37
  %mul3 = fmul double %add2, %a, !bitwidth !37
  %add4 = fadd double %mul3, 6.000000e-01, !bitwidth !37                                                
  %mul5 = fmul double %add4, %a, !bitwidth !37          
  %add6 = fadd double %mul5, 2.000000e-01, !bitwidth !37
  %mul7 = fmul double %add6, %a, !bitwidth !37                                     
  %add8 = fadd double %mul7, 0x3FE6666666666666, !bitwidth !37
vagrant@ubuntu-bionic:/shared/iiProver/examples$ vim vecTrans/output.bpl                                
                latency := 1bv64;                                                                       
        }
        else if (label == 2bv64){ 
                latency := 1bv64;
        }                                       
        else {
                latency := bv64neg(1bv64);      
        }
        return;                                  
}
procedure main () {                            
        var label_0: bv64;
        var address_0: bv64;                                    
        var iteration_0: bv64;                                   
        var load_0: bool;                                               
        var valid_0: bool;
        var array_0: bv64;                                                   
        var offset_0: bv64;                                         
        var start_time_0: bv64;                                     
        var label_1: bv64;                                      
        var address_1: bv64;  
        var iteration_1: bv64;
        var load_1: bool;                                         
        var valid_1: bool;                              
        var array_1: bv64;                     
        var offset_1: bv64;                                                        
        var start_time_1: bv64;         
        var label_2: bv64;                                                  
        var address_2: bv64;
        var iteration_2: bv64;                                  
        var load_2: bool;                     
        var valid_2: bool;                                                               
        var array_2: bv64;                                      
        var offset_2: bv64;                                                         
        var start_time_2: bv64;                      
        var $A_0: [bv64]bv64;                                                                 
        var $A_1: [bv64]bv64;                                                                          
                                                     
        var II: bv64;                                                                               
        var latency_0: bv64;                             
        var end_time_0:bv64;                      
        II := 1bv64;                                      
        call label_0, address_0, iteration_0, load_0, valid_0, array_0 := vecTrans($A_0, $A_1);
        call label_1, address_1, iteration_1, load_1, valid_1, array_1 := vecTrans($A_0, $A_1);
        call label_2, address_2, iteration_2, load_2, valid_2, array_2 := vecTrans($A_0, $A_1);
        call latency_0 := getLatency(label_0);         
        call offset_0 := getOffset(label_0);
        start_time_0 := bv64add(bv64mul(II, iteration_0), offset_0);  
        call offset_1 := getOffset(label_1);        
        start_time_1 := bv64add(bv64mul(II, iteration_1), offset_1);
        call offset_2 := getOffset(label_2);           
        start_time_2 := bv64add(bv64mul(II, iteration_2), offset_2);
        end_time_0 := bv64add(bv64add(bv64mul(II, iteration_0), offset_0), latency_0);                  
        assert (!valid_0 || !valid_1 || address_0 != address_1 || (load_0 && load_1) || label_0 == label
_1 || bv64sgt(iteration_0, iteration_1) || bv64sgt(start_time_1, end_time_0));
        assert (!valid_0 || !valid_1 || !valid_2 || label_0 == label_1 || label_0 == label_2 || label_1
== label_2 || !(start_time_0 == start_time_1 && start_time_1 == start_time_2));
}                                                                                                       
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test                                
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
<0x55cb0739cf20> = distinct !{<0x55cb0739cf20>, <0x55cb073995f0>, <0x55cb073995f0>, <0x55cb0739cf58>, <0​‌​
x55cb0739cf90>, <0x55cb0739cfb8>}
opt: /shared/iiProver/src/boogieGen/boogieGen.cpp:76: void boogieGen::boogieGen::programSlice(llvm::Modu​‌​
le&): Assertion `0' failed.
#0 0x000055cb0249d7cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x000055cb0249d85e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x000055cb0249ba33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x000055cb0249d037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007ff833b6b8a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007ff83281cf47 gsignal (/lib/x86_64-linux-gnu/libc.so.6+0x3ef47)
#6 0x00007ff83281e8b1 abort (/lib/x86_64-linux-gnu/libc.so.6+0x408b1)
#7 0x00007ff83280e42a (/lib/x86_64-linux-gnu/libc.so.6+0x3042a)
#8 0x00007ff83280e4a2 (/lib/x86_64-linux-gnu/libc.so.6+0x304a2)
#9 0x00007ff8325672be boogieGen::boogieGen::programSlice(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:79:0
#10 0x00007ff832566eb6 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:41:0
#11 0x000055cb01cb1a21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#12 0x000055cb01cb214b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#13 0x000055cb01cb2343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#14 0x000055cb00f17f79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#15 0x00007ff8327ffb97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#16 0x000055cb00ee76ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Aborted (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ vim vecTrans/proj/soluion1/.autopilot/db/a.o.3.ll      
; ModuleID = 'a.o.3.bc'                                                                                 
source_filename = "a.o.3.bc"                                                                            
target datalayout = "e-m:e-i64:64-i128:128-i256:256-i512:512-i1024:1024-i2048:2048-i4096:4096-n8:16:32:6
4-S128-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024"
target triple = "fpga64-xilinx-none"                     
                                                         
$_ssdm_op_SpecTopModule = comdat any     
                                                        
$_ssdm_op_SpecPipeline = comdat any                      
                                                                             
$_ssdm_op_SpecLoopTripCount = comdat any        
                                                        
$_ssdm_op_SpecLoopName = comdat any
                                                        
$_ssdm_op_SpecBitsMap = comdat any                      
                                                                                                        
$_ssdm_op_PartSelect.i8.i11.i32.i32 = comdat any
                                 
$_ssdm_op_PartSelect.i7.i10.i32.i32 = comdat any
                                 
$_ssdm_op_PartSelect.i11.i64.i32.i32 = comdat any                                                       
                                 
$_ssdm_op_BitConcatenate.i10.i7.i3 = comdat any                                                         
                           
@empty = internal unnamed_addr constant [1 x i8] zeroinitializer                                        
@empty_0 = internal unnamed_addr constant [9 x i8] c"vecTrans\00"
@empty_1 = internal unnamed_addr constant [15 x i8] c"VITIS_LOOP_5_1\00"                                
      
define void @vecTrans([500 x i64]* noalias %A_0, [500 x i64]* noalias %A_1) {                      
  call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !50                         
  call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !56              
  call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2       
  br label %bb5, !bitwidth !62                                       
                                                               
bb5:                                              ; preds = %1, %0
  %i = phi i7 [ 0, %0 ], [ %add_ln5, %1 ], !bitwidth !63                                                
  %icmp_ln5 = icmp eq i7 %i, -28, !bitwidth !64
  %empty = call i32 (...) @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) #2                     
  %add_ln5 = add i7 %i, 1, !bitwidth !63
  br i1 %icmp_ln5, label %2, label %bb5.split, !llvm.loop !65, !bitwidth !62                            
                                     
bb5.split:                                        ; preds = %bb5                                        
  %zext_ln5 = zext i7 %i to i64, !bitwidth !69
  call void (...) @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2               
  call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
  %shl_ln9 = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %i, i3 0), !bitwidth !70
  %zext_ln9 = zext i10 %shl_ln9 to i11, !bitwidth !71                             
  %A_0_addr = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln5, !bitwidth !7
  %A_0_load = load i64, i64* %A_0_addr, align 8, !bitwidth !37, !dep_idx !72, !deps !73, !dep_cands !77
  %a = bitcast i64 %A_0_load to double, !bitwidth !37                                                   
  %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidth !80
  %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !81                                               
  %icmp_ln10 = icmp ne i11 %tmp, -1, !bitwidth !64
  %icmp_ln10_1 = icmp eq i52 %trunc_ln10, 0, !bitwidth !64
  %or_ln10 = or i1 %icmp_ln10_1, %icmp_ln10, !bitwidth !64
  %tmp_1 = fcmp ogt double %a, 1.000000e+02, !bitwidth !64
  %and_ln10 = and i1 %or_ln10, %tmp_1, !bitwidth !64
  br i1 %and_ln10, label %bb, label %bb4, !bitwidth !62                                                 
/!65                                                                                                    
  %add4 = fadd double %mul3, 6.000000e-01, !bitwidth !37                                                
  %mul5 = fmul double %add4, %a, !bitwidth !37                                                          
  %add6 = fadd double %mul5, 2.000000e-01, !bitwidth !37                                                
  %mul7 = fmul double %add6, %a, !bitwidth !37                                   
  %add8 = fadd double %mul7, 0x3FE6666666666666, !bitwidth !37
  %mul9 = fmul double %add8, %a, !bitwidth !37           
  %b = fadd double %mul9, 2.000000e-01, !bitwidth !37
  %add_ln12 = add i11 %zext_ln9, 504, !bitwidth !82     
  %bitcast_ln12 = bitcast double %b to i64, !bitwidth !37
  %trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i11.i32.i32(i11 %add_ln12, i32 3, i32 10), !bitwidth !83
  %zext_ln12 = zext i8 %trunc_ln1 to i64, !bitwidth !69
  %A_0_addr_1 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln12, !bitwidth !7
  store i64 %bitcast_ln12, i64* %A_0_addr_1, align 8, !bitwidth !62, !dep_idx !84, !deps !85, !dep_cands
 !90                                                    
  br label %1, !bitwidth !62                            
                                                                                                        
bb4:                                              ; preds = %bb5.split
  %b_1 = fmul double %a, %a, !bitwidth !37
  %add_ln16 = add i10 %shl_ln9, 72, !bitwidth !70
  %bitcast_ln16 = bitcast double %b_1 to i64, !bitwidth !37
  %trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i10.i32.i32(i10 %add_ln16, i32 3, i32 9), !bitwidth !63  
  %zext_ln16 = zext i7 %trunc_ln2 to i64, !bitwidth !69
  %A_0_addr_2 = getelementptr [500 x i64], [500 x i64]* %A_0, i64 0, i64 %zext_ln16, !bitwidth !7       
  store i64 %bitcast_ln16, i64* %A_0_addr_2, align 8, !bitwidth !62, !dep_idx !92, !deps !93, !dep_cands
 !95                                                                                                    
  br label %1, !bitwidth !62                                     
                                                                                                        
; <label>:1:                                      ; preds = %bb4, %bb
  br label %bb5, !llvm.loop !65, !bitwidth !62                                                     
                                                                                             
; <label>:2:                                      ; preds = %bb5                  
  ret void, !bitwidth !62                                              
}                                                                    
                                                               
; Function Attrs: nounwind readnone                               
declare i64 @llvm.part.select.i64(i64, i32, i32) #0                                                     
                                               
; Function Attrs: nounwind readnone                                                                     
declare i11 @llvm.part.select.i11(i11, i32, i32) #0
                                                                                                        
; Function Attrs: nounwind readnone  
declare i10 @llvm.part.select.i10(i10, i32, i32) #0                                                     
                                              
; Function Attrs: nounwind readnone speculatable                                                        
declare void @llvm.dbg.value(metadata, i64, metadata) #1        
                                                                                    
define weak void @_ssdm_op_SpecTopModule(...) comdat {                            
entry:                                                                                        
  ret void                                                                                             
}                                                                                                       
                                                                                                    
define weak void @_ssdm_op_SpecPipeline(...) comdat {                                                   
entry:                                            
  ret void                                                
}                                                         
                                                          
define weak i32 @_ssdm_op_SpecLoopTripCount(...) comdat {
entry:                                                                                                  
/!65                                                                                                    
!37 = !{i32 64, i32 64, i32 0, i32 2}                                                                   
!38 = !{double 2.000000e-01, !37}                                                                       
!39 = !{double 3.000000e-01, !37}                                                                       
!40 = !{double 6.000000e-01, !37}                                                
!41 = !{double 0x3FE6666666666666, !37}                       
!42 = !{i11 504, !43}                                    
!43 = !{i32 10, i32 11, i32 0, i32 1}                
!44 = !{i32 3, !19}                                     
!45 = !{i32 10, !46}                                     
!46 = !{i32 5, i32 32, i32 0, i32 1}                                                                   
!47 = !{i10 72, !48}                                   
!48 = !{i32 8, i32 10, i32 0, i32 1}                                                             
!49 = !{i32 9, !46}                                                                                     
!50 = !{!51}                                            
!51 = !{i32 0, i32 63, !52}                             
!52 = !{!53}                                                                                            
!53 = !{!"A", !54, !"", i32 0, i32 63}                                
!54 = !{!55}                              
!55 = !{i32 500, i32 999, i32 1}                 
!56 = !{!57}                                               
!57 = !{i32 0, i32 63, !58}                                                                             
!58 = !{!59}                                           
!59 = !{!"A", !60, !"", i32 0, i32 63}                                                                  
!60 = !{!61}                                                                                            
!61 = !{i32 0, i32 499, i32 1}                                                                          
!62 = !{i32 0, i32 0, i32 0, i32 2}                              
!63 = !{i32 7, i32 7, i32 0, i32 2}                                                                     
!64 = !{i32 1, i32 1, i32 0, i32 2}                                  
!65 = distinct !{!65, !1, !1, !66, !67, !68}                                                       
!66 = !{!"llvm.loop.pipeline.enable", i32 2, i1 false}                                       
!67 = !{!"llvm.loop.name", !"VITIS_LOOP_5_1"}                                     
!68 = !{!"llvm.loop.unroll.disable"}                                   
!69 = !{i32 64, i32 64, i32 0, i32 0}                                
!70 = !{i32 10, i32 10, i32 0, i32 2}                          
!71 = !{i32 11, i32 11, i32 0, i32 0}                             
!72 = !{i32 0}                                                                                          
!73 = !{!74, !76}                              
!74 = !{i32 2, !75}                                                                                     
!75 = !{!"WAR", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}
!76 = !{i32 1, !75}                                                                                     
!77 = !{!78, !79}                    
!78 = !{i32 2, !"(src/vecTrans.cpp:5:47)"}                                                              
!79 = !{i32 1, !"(src/vecTrans.cpp:5:47)"}    
!80 = !{i32 11, i32 11, i32 0, i32 2}                                                                   
!81 = !{i32 52, i32 52, i32 0, i32 2}                           
!82 = !{i32 11, i32 11, i32 0, i32 1}                                               
!83 = !{i32 8, i32 8, i32 0, i32 2}                                               
!84 = !{i32 1}                                                                                
!85 = !{!86, !88}                                                                                      
!86 = !{i32 2, !87}                                                                                     
!87 = !{!"WAW", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}                                   
!88 = !{i32 0, !89}                                                                                     
!89 = !{!"RAW", !"pragma", !"indep", i32 1, !"=", i32 0, i1 true}
!90 = !{!78, !91}                                         
!91 = !{i32 0, !"(src/vecTrans.cpp:5:47)"}                
!92 = !{i32 2}                                            
!93 = !{!88, !94}                                        
!94 = !{i32 1, !87}                                                                                     
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test       
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::programSlic​‌​
e(llvm::Module&)’:                                                                                      
/shared/iiProver/src/boogieGen/boogieGen.cpp:75:73: error: ‘class llvm::Metadata’ has no member named ‘g​‌​
etOperand’; did you mean ‘printAsOperand’?                                                              
                 errs() << *(I->getMetadata("llvm.loop")->getOperand(3)->getOperand(1)) << "\n";        
                                                                         ^~~~~~~~~~                     
                                                                         printAsOperand                 
boogieGen/CMakeFiles/boogieGen.dir/build.make:62: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/​‌​
boogieGen.cpp.o' failed
make[3]: *** [boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o] Error 1
make[3]: Leaving directory '/shared/iiProver/src/_build'
CMakeFiles/Makefile2:117: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/all' failed
make[2]: *** [boogieGen/CMakeFiles/boogieGen.dir/all] Error 2
make[2]: Leaving directory '/shared/iiProver/src/_build'
Makefile:83: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/shared/iiProver/src/_build'
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 2
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::programSlic​‌​
e(llvm::Module&)’:                                                                                      
/shared/iiProver/src/boogieGen/boogieGen.cpp:75:73: error: ‘class llvm::Metadata’ has no member named ‘g​‌​
et’                                                                                                     
                 errs() << *(I->getMetadata("llvm.loop")->getOperand(3)->get()) << "\n";                
                                                                         ^~~                            
boogieGen/CMakeFiles/boogieGen.dir/build.make:62: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/​‌​
boogieGen.cpp.o' failed
make[3]: *** [boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o] Error 1
make[3]: Leaving directory '/shared/iiProver/src/_build'
CMakeFiles/Makefile2:117: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/all' failed
make[2]: *** [boogieGen/CMakeFiles/boogieGen.dir/all] Error 2
make[2]: Leaving directory '/shared/iiProver/src/_build'
Makefile:83: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/shared/iiProver/src/_build'
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 2
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
<0x5616d7197f58> = !{!"llvm.loop.pipeline.enable", i32 2, i1 false}
opt: /shared/iiProver/src/boogieGen/boogieGen.cpp:77: void boogieGen::boogieGen::programSlice(llvm::Modu​‌​
le&): Assertion `0' failed.
#0 0x00005616d305d7cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x00005616d305d85e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x00005616d305ba33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x00005616d305d037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007f163036a8a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007f162f01bf47 gsignal (/lib/x86_64-linux-gnu/libc.so.6+0x3ef47)
#6 0x00007f162f01d8b1 abort (/lib/x86_64-linux-gnu/libc.so.6+0x408b1)
#7 0x00007f162f00d42a (/lib/x86_64-linux-gnu/libc.so.6+0x3042a)
#8 0x00007f162f00d4a2 (/lib/x86_64-linux-gnu/libc.so.6+0x304a2)
#9 0x00007f162ed66523 boogieGen::boogieGen::programSlice(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:80:0
#10 0x00007f162ed66106 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:41:0
#11 0x00005616d2871a21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#12 0x00005616d287214b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#13 0x00005616d2872343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#14 0x00005616d1ad7f79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#15 0x00007f162effeb97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#16 0x00005616d1aa76ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Aborted (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
i32 2
opt: /shared/iiProver/src/boogieGen/boogieGen.cpp:77: void boogieGen::boogieGen::programSlice(llvm::Modu​‌​
le&): Assertion `0' failed.
#0 0x0000562c6340d7cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x0000562c6340d85e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x0000562c6340ba33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x0000562c6340d037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007f6144fb18a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007f6143c62f47 gsignal (/lib/x86_64-linux-gnu/libc.so.6+0x3ef47)
#6 0x00007f6143c648b1 abort (/lib/x86_64-linux-gnu/libc.so.6+0x408b1)
#7 0x00007f6143c5442a (/lib/x86_64-linux-gnu/libc.so.6+0x3042a)
#8 0x00007f6143c544a2 (/lib/x86_64-linux-gnu/libc.so.6+0x304a2)
#9 0x00007f61439acbe8 boogieGen::boogieGen::programSlice(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:80:0
#10 0x00007f61439ac7b6 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:41:0
#11 0x0000562c62c21a21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#12 0x0000562c62c2214b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#13 0x0000562c62c22343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#14 0x0000562c61e87f79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#15 0x00007f6143c45b97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#16 0x0000562c61e576ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Aborted (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test                                
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
In file included from /shared/iiProver/src/boogieGen/boogieGen.cpp:17:0:                                
/shared/iiProver/src/boogieGen/boogieGen.h:73:5: error: ‘loop’ does not name a type; did you mean ‘logl’​‌​
?
     loop *pipelinedLoop = NULL;                                                                        
     ^~~~                                                                                               
     logl                                                                                               
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::programSlic​‌​
e(llvm::Module&)’:                                                                                      
/shared/iiProver/src/boogieGen/boogieGen.cpp:78:110: error: no matching function for call to ‘stoi(const​‌​
 llvm::MDOperand&)’                                                                                     
 pplII = std::stoi(dyn_cast<MDNode>(I->getMetadata("llvm.loop")->getOperand(3))->getOperand(1)) << "\n";
                                                                                              ^         
In file included from /usr/include/c++/7/string:52:0,                                                   
                 from /usr/include/c++/7/bits/locale_classes.h:40,                                      
                 from /usr/include/c++/7/bits/ios_base.h:41,                                            
                 from /usr/include/c++/7/ios:42,                                                        
                 from /usr/include/c++/7/ostream:38,                                                    
                 from /usr/include/c++/7/iterator:64,                                                   
                 from /shared/dass/llvm-6.0/include/llvm/ADT/iterator_range.h:22,                       
                 from /shared/dass/llvm-6.0/include/llvm/ADT/SmallVector.h:17,                          
                 from /shared/dass/llvm-6.0/include/llvm/ADT/STLExtras.h:21,                            
                 from /shared/dass/llvm-6.0/include/llvm/ADT/StringRef.h:13,                            
                 from /shared/dass/llvm-6.0/include/llvm/ADT/StringMap.h:17,                            
                 from /shared/dass/llvm-6.0/include/llvm/Support/Host.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/Hashing.h:49,                              
                 from /shared/dass/llvm-6.0/include/llvm/ADT/ArrayRef.h:13,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseMapInfo.h:17,                         
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseMap.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseSet.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/IR/Function.h:21,                              
                 from /shared/iiProver/src/boogieGen/boogieGen.cpp:1:                                   
/usr/include/c++/7/bits/basic_string.h:6371:3: note: candidate: int std::__cxx11::stoi(const string&, st​‌​
d::size_t*, int)
   stoi(const string& __str, size_t* __idx = 0, int __base = 10)                                        
   ^~~~                                                                                                 
/usr/include/c++/7/bits/basic_string.h:6371:3: note:   no known conversion for argument 1 from ‘const ll​‌​
vm::MDOperand’ to ‘const string& {aka const std::__cxx11::basic_string<char>&}’                         
/usr/include/c++/7/bits/basic_string.h:6477:3: note: candidate: int std::__cxx11::stoi(const wstring&, s​‌​
td::size_t*, int)
   stoi(const wstring& __str, size_t* __idx = 0, int __base = 10)                                       
   ^~~~                                                                                                 
/usr/include/c++/7/bits/basic_string.h:6477:3: note:   no known conversion for argument 1 from ‘const ll​‌​
vm::MDOperand’ to ‘const wstring& {aka const std::__cxx11::basic_string<wchar_t>&}’                     
/shared/iiProver/src/boogieGen/boogieGen.cpp:79:30: error: conversion from ‘int’ to ‘llvm::StringRef’ is​‌​
 ambiguous
                 if (pplII != 0){                                                                       
                              ^                                                                         
In file included from /shared/dass/llvm-6.0/include/llvm/ADT/StringMap.h:17:0,                          
                 from /shared/dass/llvm-6.0/include/llvm/Support/Host.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/Hashing.h:49,                              
                 from /shared/dass/llvm-6.0/include/llvm/ADT/ArrayRef.h:13,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseMapInfo.h:17,                         
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseMap.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseSet.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/IR/Function.h:21,                              
                 from /shared/iiProver/src/boogieGen/boogieGen.cpp:1:                                   
/shared/dass/llvm-6.0/include/llvm/ADT/StringRef.h:85:18: note: candidate: llvm::StringRef::StringRef(co​‌​
nst char*)
     /*implicit*/ StringRef(const char *Str)                                                            
                  ^~~~~~~~~                                                                             
/shared/dass/llvm-6.0/include/llvm/ADT/StringRef.h:81:5: note: candidate: llvm::StringRef::StringRef(std​‌​
::nullptr_t) <deleted>
     StringRef(std::nullptr_t) = delete;                                                                
     ^~~~~~~~~                                                                                          
/shared/dass/llvm-6.0/include/llvm/ADT/StringRef.h:881:15: note:   initializing argument 2 of ‘bool llvm​‌​
::operator!=(llvm::StringRef, llvm::StringRef)’                                                         
   inline bool operator!=(StringRef LHS, StringRef RHS) { return !(LHS == RHS); }                       
               ^~~~~~~~                                                                                 
/shared/iiProver/src/boogieGen/boogieGen.cpp:80:23: error: ‘pipelinedLoop’ was not declared in this scop​‌​
e
                   if (pipelinedLoop == NULL)                                                           
                       ^~~~~~~~~~~~~                                                                    
/shared/iiProver/src/boogieGen/boogieGen.cpp:83:21: error: ‘error’ was not declared in this scope       
                     error("Multiple loops set to pipelined. It will be supported in the future.");     
                     ^~~~~                                                                              
/shared/iiProver/src/boogieGen/boogieGen.cpp:83:21: note: suggested alternative: ‘perror’               
                     error("Multiple loops set to pipelined. It will be supported in the future.");     
                     ^~~~~                                                                              
                     perror                                                                             
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::funcGen(llv​‌​
m::Function*)’:                                                                                         
/shared/iiProver/src/boogieGen/boogieGen.cpp:985:25: error: ‘pipelinedLoop’ was not declared in this sco​‌​
pe
                     if (pipelinedLoop->contains(&*BB)){                                                
                         ^~~~~~~~~~~~~                                                                  
/shared/iiProver/src/boogieGen/boogieGen.cpp:1013:25: error: ‘pipelinedLoop’ was not declared in this sc​‌​
ope
                     if (pipelinedLoop->contains(&*BB)){                                                
                         ^~~~~~~~~~~~~                                                                  
boogieGen/CMakeFiles/boogieGen.dir/build.make:62: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/​‌​
boogieGen.cpp.o' failed
make[3]: *** [boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o] Error 1
make[3]: Leaving directory '/shared/iiProver/src/_build'
CMakeFiles/Makefile2:117: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/all' failed
make[2]: *** [boogieGen/CMakeFiles/boogieGen.dir/all] Error 2
make[2]: Leaving directory '/shared/iiProver/src/_build'
Makefile:83: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/shared/iiProver/src/_build'
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 2
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test                                
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
In file included from /shared/iiProver/src/boogieGen/boogieGen.cpp:17:0:                                
/shared/iiProver/src/boogieGen/boogieGen.h:48:9: error: ‘loop’ does not name a type; did you mean ‘logl’​‌​
?
         loop *pipelinedLoop = NULL;                                                                    
         ^~~~                                                                                           
         logl                                                                                           
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::programSlic​‌​
e(llvm::Module&)’:                                                                                      
/shared/iiProver/src/boogieGen/boogieGen.cpp:78:110: error: no matching function for call to ‘stoi(const​‌​
 llvm::MDOperand&)’                                                                                     
 pplII = std::stoi(dyn_cast<MDNode>(I->getMetadata("llvm.loop")->getOperand(3))->getOperand(1)) << "\n";
                                                                                              ^         
In file included from /usr/include/c++/7/string:52:0,                                                   
                 from /usr/include/c++/7/bits/locale_classes.h:40,                                      
                 from /usr/include/c++/7/bits/ios_base.h:41,                                            
                 from /usr/include/c++/7/ios:42,                                                        
                 from /usr/include/c++/7/ostream:38,                                                    
                 from /usr/include/c++/7/iterator:64,                                                   
                 from /shared/dass/llvm-6.0/include/llvm/ADT/iterator_range.h:22,                       
                 from /shared/dass/llvm-6.0/include/llvm/ADT/SmallVector.h:17,                          
                 from /shared/dass/llvm-6.0/include/llvm/ADT/STLExtras.h:21,                            
                 from /shared/dass/llvm-6.0/include/llvm/ADT/StringRef.h:13,                            
                 from /shared/dass/llvm-6.0/include/llvm/ADT/StringMap.h:17,                            
                 from /shared/dass/llvm-6.0/include/llvm/Support/Host.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/Hashing.h:49,                              
                 from /shared/dass/llvm-6.0/include/llvm/ADT/ArrayRef.h:13,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseMapInfo.h:17,                         
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseMap.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseSet.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/IR/Function.h:21,                              
                 from /shared/iiProver/src/boogieGen/boogieGen.cpp:1:                                   
/usr/include/c++/7/bits/basic_string.h:6371:3: note: candidate: int std::__cxx11::stoi(const string&, st​‌​
d::size_t*, int)
   stoi(const string& __str, size_t* __idx = 0, int __base = 10)                                        
   ^~~~                                                                                                 
/usr/include/c++/7/bits/basic_string.h:6371:3: note:   no known conversion for argument 1 from ‘const ll​‌​
vm::MDOperand’ to ‘const string& {aka const std::__cxx11::basic_string<char>&}’                         
/usr/include/c++/7/bits/basic_string.h:6477:3: note: candidate: int std::__cxx11::stoi(const wstring&, s​‌​
td::size_t*, int)
   stoi(const wstring& __str, size_t* __idx = 0, int __base = 10)                                       
   ^~~~                                                                                                 
/usr/include/c++/7/bits/basic_string.h:6477:3: note:   no known conversion for argument 1 from ‘const ll​‌​
vm::MDOperand’ to ‘const wstring& {aka const std::__cxx11::basic_string<wchar_t>&}’                     
/shared/iiProver/src/boogieGen/boogieGen.cpp:79:30: error: conversion from ‘int’ to ‘llvm::StringRef’ is​‌​
 ambiguous
                 if (pplII != 0){                                                                       
                              ^                                                                         
In file included from /shared/dass/llvm-6.0/include/llvm/ADT/StringMap.h:17:0,                          
                 from /shared/dass/llvm-6.0/include/llvm/Support/Host.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/Hashing.h:49,                              
                 from /shared/dass/llvm-6.0/include/llvm/ADT/ArrayRef.h:13,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseMapInfo.h:17,                         
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseMap.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseSet.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/IR/Function.h:21,                              
                 from /shared/iiProver/src/boogieGen/boogieGen.cpp:1:                                   
/shared/dass/llvm-6.0/include/llvm/ADT/StringRef.h:85:18: note: candidate: llvm::StringRef::StringRef(co​‌​
nst char*)
     /*implicit*/ StringRef(const char *Str)                                                            
                  ^~~~~~~~~                                                                             
/shared/dass/llvm-6.0/include/llvm/ADT/StringRef.h:81:5: note: candidate: llvm::StringRef::StringRef(std​‌​
::nullptr_t) <deleted>
     StringRef(std::nullptr_t) = delete;                                                                
     ^~~~~~~~~                                                                                          
/shared/dass/llvm-6.0/include/llvm/ADT/StringRef.h:881:15: note:   initializing argument 2 of ‘bool llvm​‌​
::operator!=(llvm::StringRef, llvm::StringRef)’                                                         
   inline bool operator!=(StringRef LHS, StringRef RHS) { return !(LHS == RHS); }                       
               ^~~~~~~~                                                                                 
/shared/iiProver/src/boogieGen/boogieGen.cpp:80:23: error: ‘pipelinedLoop’ was not declared in this scop​‌​
e
                   if (pipelinedLoop == NULL)                                                           
                       ^~~~~~~~~~~~~                                                                    
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::funcGen(llv​‌​
m::Function*)’:                                                                                         
/shared/iiProver/src/boogieGen/boogieGen.cpp:987:25: error: ‘pipelinedLoop’ was not declared in this sco​‌​
pe
                     if (pipelinedLoop->contains(&*BB)){                                                
                         ^~~~~~~~~~~~~                                                                  
/shared/iiProver/src/boogieGen/boogieGen.cpp:1015:25: error: ‘pipelinedLoop’ was not declared in this sc​‌​
ope
                     if (pipelinedLoop->contains(&*BB)){                                                
                         ^~~~~~~~~~~~~                                                                  
boogieGen/CMakeFiles/boogieGen.dir/build.make:62: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/​‌​
boogieGen.cpp.o' failed
make[3]: *** [boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o] Error 1
make[3]: Leaving directory '/shared/iiProver/src/_build'
CMakeFiles/Makefile2:117: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/all' failed
make[2]: *** [boogieGen/CMakeFiles/boogieGen.dir/all] Error 2
make[2]: Leaving directory '/shared/iiProver/src/_build'
Makefile:83: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/shared/iiProver/src/_build'
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 2
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
In file included from /shared/iiProver/src/boogieGen/boogieGen.cpp:17:0:                                
/shared/iiProver/src/boogieGen/boogieGen.h:48:9: error: ‘loop’ does not name a type; did you mean ‘logl’​‌​
?
         loop *pipelinedLoop = NULL;                                                                    
         ^~~~                                                                                           
         logl                                                                                           
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::programSlic​‌​
e(llvm::Module&)’:                                                                                      
/shared/iiProver/src/boogieGen/boogieGen.cpp:78:114: error: no matching function for call to ‘stoi(const​‌​
 llvm::MDOperand&)’                                                                                     
 pplII = std::stoi(dyn_cast<MDNode>(I->getMetadata("llvm.loop")->getOperand(3))->getOperand(1)) << "\n";
                                                                                              ^         
In file included from /usr/include/c++/7/string:52:0,                                                   
                 from /usr/include/c++/7/bits/locale_classes.h:40,                                      
                 from /usr/include/c++/7/bits/ios_base.h:41,                                            
                 from /usr/include/c++/7/ios:42,                                                        
                 from /usr/include/c++/7/ostream:38,                                                    
                 from /usr/include/c++/7/iterator:64,                                                   
                 from /shared/dass/llvm-6.0/include/llvm/ADT/iterator_range.h:22,                       
                 from /shared/dass/llvm-6.0/include/llvm/ADT/SmallVector.h:17,                          
                 from /shared/dass/llvm-6.0/include/llvm/ADT/STLExtras.h:21,                            
                 from /shared/dass/llvm-6.0/include/llvm/ADT/StringRef.h:13,                            
                 from /shared/dass/llvm-6.0/include/llvm/ADT/StringMap.h:17,                            
                 from /shared/dass/llvm-6.0/include/llvm/Support/Host.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/Hashing.h:49,                              
                 from /shared/dass/llvm-6.0/include/llvm/ADT/ArrayRef.h:13,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseMapInfo.h:17,                         
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseMap.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseSet.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/IR/Function.h:21,                              
                 from /shared/iiProver/src/boogieGen/boogieGen.cpp:1:                                   
/usr/include/c++/7/bits/basic_string.h:6371:3: note: candidate: int std::__cxx11::stoi(const string&, st​‌​
d::size_t*, int)
   stoi(const string& __str, size_t* __idx = 0, int __base = 10)                                        
   ^~~~                                                                                                 
/usr/include/c++/7/bits/basic_string.h:6371:3: note:   no known conversion for argument 1 from ‘const ll​‌​
vm::MDOperand’ to ‘const string& {aka const std::__cxx11::basic_string<char>&}’                         
/usr/include/c++/7/bits/basic_string.h:6477:3: note: candidate: int std::__cxx11::stoi(const wstring&, s​‌​
td::size_t*, int)
   stoi(const wstring& __str, size_t* __idx = 0, int __base = 10)                                       
   ^~~~                                                                                                 
/usr/include/c++/7/bits/basic_string.h:6477:3: note:   no known conversion for argument 1 from ‘const ll​‌​
vm::MDOperand’ to ‘const wstring& {aka const std::__cxx11::basic_string<wchar_t>&}’                     
/shared/iiProver/src/boogieGen/boogieGen.cpp:80:23: error: ‘pipelinedLoop’ was not declared in this scop​‌​
e
                   if (pipelinedLoop == NULL)                                                           
                       ^~~~~~~~~~~~~                                                                    
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::funcGen(llv​‌​
m::Function*)’:                                                                                         
/shared/iiProver/src/boogieGen/boogieGen.cpp:987:25: error: ‘pipelinedLoop’ was not declared in this sco​‌​
pe
                     if (pipelinedLoop->contains(&*BB)){                                                
                         ^~~~~~~~~~~~~                                                                  
/shared/iiProver/src/boogieGen/boogieGen.cpp:1015:25: error: ‘pipelinedLoop’ was not declared in this sc​‌​
ope
                     if (pipelinedLoop->contains(&*BB)){                                                
                         ^~~~~~~~~~~~~                                                                  
boogieGen/CMakeFiles/boogieGen.dir/build.make:62: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/​‌​
boogieGen.cpp.o' failed
make[3]: *** [boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o] Error 1
make[3]: Leaving directory '/shared/iiProver/src/_build'
CMakeFiles/Makefile2:117: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/all' failed
make[2]: *** [boogieGen/CMakeFiles/boogieGen.dir/all] Error 2
make[2]: Leaving directory '/shared/iiProver/src/_build'
Makefile:83: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/shared/iiProver/src/_build'
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 2
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test                                
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
In file included from /shared/iiProver/src/boogieGen/boogieGen.cpp:17:0:                                
/shared/iiProver/src/boogieGen/boogieGen.h:48:9: error: ‘loop’ does not name a type; did you mean ‘logl’​‌​
?
         loop *ppl = NULL;                                                                              
         ^~~~                                                                                           
         logl                                                                                           
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘virtual bool boogieGen::boogieGen::run​‌​
OnModule(llvm::Module&)’:                                                                               
/shared/iiProver/src/boogieGen/boogieGen.cpp:32:5: error: ‘ppl’ was not declared in this scope          
     ppl = NULL;                                                                                        
     ^~~                                                                                                
/shared/iiProver/src/boogieGen/boogieGen.cpp:32:5: note: suggested alternative: ‘bpl’                   
     ppl = NULL;                                                                                        
     ^~~                                                                                                
     bpl                                                                                                
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::programSlic​‌​
e(llvm::Module&)’:                                                                                      
/shared/iiProver/src/boogieGen/boogieGen.cpp:80:114: error: no matching function for call to ‘stoi(const​‌​
 llvm::MDOperand&)’                                                                                     
 pplII = std::stoi(dyn_cast<MDNode>(I->getMetadata("llvm.loop")->getOperand(3))->getOperand(1)) << "\n";
                                                                                              ^         
In file included from /usr/include/c++/7/string:52:0,                                                   
                 from /usr/include/c++/7/bits/locale_classes.h:40,                                      
                 from /usr/include/c++/7/bits/ios_base.h:41,                                            
                 from /usr/include/c++/7/ios:42,                                                        
                 from /usr/include/c++/7/ostream:38,                                                    
                 from /usr/include/c++/7/iterator:64,                                                   
                 from /shared/dass/llvm-6.0/include/llvm/ADT/iterator_range.h:22,                       
                 from /shared/dass/llvm-6.0/include/llvm/ADT/SmallVector.h:17,                          
                 from /shared/dass/llvm-6.0/include/llvm/ADT/STLExtras.h:21,                            
                 from /shared/dass/llvm-6.0/include/llvm/ADT/StringRef.h:13,                            
                 from /shared/dass/llvm-6.0/include/llvm/ADT/StringMap.h:17,                            
                 from /shared/dass/llvm-6.0/include/llvm/Support/Host.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/Hashing.h:49,                              
                 from /shared/dass/llvm-6.0/include/llvm/ADT/ArrayRef.h:13,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseMapInfo.h:17,                         
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseMap.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseSet.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/IR/Function.h:21,                              
                 from /shared/iiProver/src/boogieGen/boogieGen.cpp:1:                                   
/usr/include/c++/7/bits/basic_string.h:6371:3: note: candidate: int std::__cxx11::stoi(const string&, st​‌​
d::size_t*, int)
   stoi(const string& __str, size_t* __idx = 0, int __base = 10)                                        
   ^~~~                                                                                                 
/usr/include/c++/7/bits/basic_string.h:6371:3: note:   no known conversion for argument 1 from ‘const ll​‌​
vm::MDOperand’ to ‘const string& {aka const std::__cxx11::basic_string<char>&}’                         
/usr/include/c++/7/bits/basic_string.h:6477:3: note: candidate: int std::__cxx11::stoi(const wstring&, s​‌​
td::size_t*, int)
   stoi(const wstring& __str, size_t* __idx = 0, int __base = 10)                                       
   ^~~~                                                                                                 
/usr/include/c++/7/bits/basic_string.h:6477:3: note:   no known conversion for argument 1 from ‘const ll​‌​
vm::MDOperand’ to ‘const wstring& {aka const std::__cxx11::basic_string<wchar_t>&}’                     
/shared/iiProver/src/boogieGen/boogieGen.cpp:82:23: error: ‘ppl’ was not declared in this scope         
                   if (ppl == NULL)                                                                     
                       ^~~                                                                              
/shared/iiProver/src/boogieGen/boogieGen.cpp:82:23: note: suggested alternative: ‘bpl’                  
                   if (ppl == NULL)                                                                     
                       ^~~                                                                              
                       bpl                                                                              
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::funcGen(llv​‌​
m::Function*)’:                                                                                         
/shared/iiProver/src/boogieGen/boogieGen.cpp:989:25: error: ‘ppl’ was not declared in this scope        
                     if (ppl->contains(&*BB)){                                                          
                         ^~~                                                                            
/shared/iiProver/src/boogieGen/boogieGen.cpp:989:25: note: suggested alternative: ‘bpl’                 
                     if (ppl->contains(&*BB)){                                                          
                         ^~~                                                                            
                         bpl                                                                            
/shared/iiProver/src/boogieGen/boogieGen.cpp:1017:25: error: ‘ppl’ was not declared in this scope       
                     if (ppl->contains(&*BB)){                                                          
                         ^~~                                                                            
/shared/iiProver/src/boogieGen/boogieGen.cpp:1017:25: note: suggested alternative: ‘bpl’                
                     if (ppl->contains(&*BB)){                                                          
                         ^~~                                                                            
                         bpl                                                                            
boogieGen/CMakeFiles/boogieGen.dir/build.make:62: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/​‌​
boogieGen.cpp.o' failed
make[3]: *** [boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o] Error 1
make[3]: Leaving directory '/shared/iiProver/src/_build'
CMakeFiles/Makefile2:117: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/all' failed
make[2]: *** [boogieGen/CMakeFiles/boogieGen.dir/all] Error 2
make[2]: Leaving directory '/shared/iiProver/src/_build'
Makefile:83: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/shared/iiProver/src/_build'
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 2
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
In file included from /shared/iiProver/src/boogieGen/boogieGen.cpp:17:0:                                
/shared/iiProver/src/boogieGen/boogieGen.h:48:15: error: ‘loopT’ in namespace ‘llvm’ does not name a typ​‌​
e
         llvm::loopT *pplLoop = NULL;                                                                   
               ^~~~~                                                                                    
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘virtual bool boogieGen::boogieGen::run​‌​
OnModule(llvm::Module&)’:                                                                               
/shared/iiProver/src/boogieGen/boogieGen.cpp:32:5: error: ‘pplLoop’ was not declared in this scope      
     pplLoop = NULL;                                                                                    
     ^~~~~~~                                                                                            
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::programSlic​‌​
e(llvm::Module&)’:                                                                                      
/shared/iiProver/src/boogieGen/boogieGen.cpp:80:114: error: no matching function for call to ‘stoi(const​‌​
 llvm::MDOperand&)’                                                                                     
 pplII = std::stoi(dyn_cast<MDNode>(I->getMetadata("llvm.loop")->getOperand(3))->getOperand(1)) << "\n";
                                                                                              ^         
In file included from /usr/include/c++/7/string:52:0,                                                   
                 from /usr/include/c++/7/bits/locale_classes.h:40,                                      
                 from /usr/include/c++/7/bits/ios_base.h:41,                                            
                 from /usr/include/c++/7/ios:42,                                                        
                 from /usr/include/c++/7/ostream:38,                                                    
                 from /usr/include/c++/7/iterator:64,                                                   
                 from /shared/dass/llvm-6.0/include/llvm/ADT/iterator_range.h:22,                       
                 from /shared/dass/llvm-6.0/include/llvm/ADT/SmallVector.h:17,                          
                 from /shared/dass/llvm-6.0/include/llvm/ADT/STLExtras.h:21,                            
                 from /shared/dass/llvm-6.0/include/llvm/ADT/StringRef.h:13,                            
                 from /shared/dass/llvm-6.0/include/llvm/ADT/StringMap.h:17,                            
                 from /shared/dass/llvm-6.0/include/llvm/Support/Host.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/Hashing.h:49,                              
                 from /shared/dass/llvm-6.0/include/llvm/ADT/ArrayRef.h:13,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseMapInfo.h:17,                         
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseMap.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseSet.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/IR/Function.h:21,                              
                 from /shared/iiProver/src/boogieGen/boogieGen.cpp:1:                                   
/usr/include/c++/7/bits/basic_string.h:6371:3: note: candidate: int std::__cxx11::stoi(const string&, st​‌​
d::size_t*, int)
   stoi(const string& __str, size_t* __idx = 0, int __base = 10)                                        
   ^~~~                                                                                                 
/usr/include/c++/7/bits/basic_string.h:6371:3: note:   no known conversion for argument 1 from ‘const ll​‌​
vm::MDOperand’ to ‘const string& {aka const std::__cxx11::basic_string<char>&}’                         
/usr/include/c++/7/bits/basic_string.h:6477:3: note: candidate: int std::__cxx11::stoi(const wstring&, s​‌​
td::size_t*, int)
   stoi(const wstring& __str, size_t* __idx = 0, int __base = 10)                                       
   ^~~~                                                                                                 
/usr/include/c++/7/bits/basic_string.h:6477:3: note:   no known conversion for argument 1 from ‘const ll​‌​
vm::MDOperand’ to ‘const wstring& {aka const std::__cxx11::basic_string<wchar_t>&}’                     
/shared/iiProver/src/boogieGen/boogieGen.cpp:82:23: error: ‘pplLoop’ was not declared in this scope     
                   if (pplLoop == NULL)                                                                 
                       ^~~~~~~                                                                          
/shared/iiProver/src/boogieGen/boogieGen.cpp:82:23: note: suggested alternative: ‘KLoop’                
                   if (pplLoop == NULL)                                                                 
                       ^~~~~~~                                                                          
                       KLoop                                                                            
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::funcGen(llv​‌​
m::Function*)’:                                                                                         
/shared/iiProver/src/boogieGen/boogieGen.cpp:989:25: error: ‘pplLoop’ was not declared in this scope    
                     if (pplLoop->contains(&*BB)){                                                      
                         ^~~~~~~                                                                        
/shared/iiProver/src/boogieGen/boogieGen.cpp:989:25: note: suggested alternative: ‘KLoop’               
                     if (pplLoop->contains(&*BB)){                                                      
                         ^~~~~~~                                                                        
                         KLoop                                                                          
/shared/iiProver/src/boogieGen/boogieGen.cpp:1017:25: error: ‘pplLoop’ was not declared in this scope   
                     if (pplLoop->contains(&*BB)){                                                      
                         ^~~~~~~                                                                        
/shared/iiProver/src/boogieGen/boogieGen.cpp:1017:25: note: suggested alternative: ‘KLoop’              
                     if (pplLoop->contains(&*BB)){                                                      
                         ^~~~~~~                                                                        
                         KLoop                                                                          
boogieGen/CMakeFiles/boogieGen.dir/build.make:62: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/​‌​
boogieGen.cpp.o' failed
make[3]: *** [boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o] Error 1
make[3]: Leaving directory '/shared/iiProver/src/_build'
CMakeFiles/Makefile2:117: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/all' failed
make[2]: *** [boogieGen/CMakeFiles/boogieGen.dir/all] Error 2
make[2]: Leaving directory '/shared/iiProver/src/_build'
Makefile:83: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/shared/iiProver/src/_build'
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 2
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::programSlic​‌​
e(llvm::Module&)’:                                                                                      
/shared/iiProver/src/boogieGen/boogieGen.cpp:80:114: error: no matching function for call to ‘stoi(const​‌​
 llvm::MDOperand&)’                                                                                     
 pplII = std::stoi(dyn_cast<MDNode>(I->getMetadata("llvm.loop")->getOperand(3))->getOperand(1)) << "\n";
                                                                                              ^         
In file included from /usr/include/c++/7/string:52:0,                                                   
                 from /usr/include/c++/7/bits/locale_classes.h:40,                                      
                 from /usr/include/c++/7/bits/ios_base.h:41,                                            
                 from /usr/include/c++/7/ios:42,                                                        
                 from /usr/include/c++/7/ostream:38,                                                    
                 from /usr/include/c++/7/iterator:64,                                                   
                 from /shared/dass/llvm-6.0/include/llvm/ADT/iterator_range.h:22,                       
                 from /shared/dass/llvm-6.0/include/llvm/ADT/SmallVector.h:17,                          
                 from /shared/dass/llvm-6.0/include/llvm/ADT/STLExtras.h:21,                            
                 from /shared/dass/llvm-6.0/include/llvm/ADT/StringRef.h:13,                            
                 from /shared/dass/llvm-6.0/include/llvm/ADT/StringMap.h:17,                            
                 from /shared/dass/llvm-6.0/include/llvm/Support/Host.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/Hashing.h:49,                              
                 from /shared/dass/llvm-6.0/include/llvm/ADT/ArrayRef.h:13,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseMapInfo.h:17,                         
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseMap.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/ADT/DenseSet.h:17,                             
                 from /shared/dass/llvm-6.0/include/llvm/IR/Function.h:21,                              
                 from /shared/iiProver/src/boogieGen/boogieGen.cpp:1:                                   
/usr/include/c++/7/bits/basic_string.h:6371:3: note: candidate: int std::__cxx11::stoi(const string&, st​‌​
d::size_t*, int)
   stoi(const string& __str, size_t* __idx = 0, int __base = 10)                                        
   ^~~~                                                                                                 
/usr/include/c++/7/bits/basic_string.h:6371:3: note:   no known conversion for argument 1 from ‘const ll​‌​
vm::MDOperand’ to ‘const string& {aka const std::__cxx11::basic_string<char>&}’                         
/usr/include/c++/7/bits/basic_string.h:6477:3: note: candidate: int std::__cxx11::stoi(const wstring&, s​‌​
td::size_t*, int)
   stoi(const wstring& __str, size_t* __idx = 0, int __base = 10)                                       
   ^~~~                                                                                                 
/usr/include/c++/7/bits/basic_string.h:6477:3: note:   no known conversion for argument 1 from ‘const ll​‌​
vm::MDOperand’ to ‘const wstring& {aka const std::__cxx11::basic_string<wchar_t>&}’                     
boogieGen/CMakeFiles/boogieGen.dir/build.make:62: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/​‌​
boogieGen.cpp.o' failed
make[3]: *** [boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o] Error 1
make[3]: Leaving directory '/shared/iiProver/src/_build'
CMakeFiles/Makefile2:117: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/all' failed
make[2]: *** [boogieGen/CMakeFiles/boogieGen.dir/all] Error 2
make[2]: Leaving directory '/shared/iiProver/src/_build'
Makefile:83: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/shared/iiProver/src/_build'
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 2
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::programSlic​‌​
e(llvm::Module&)’:                                                                                      
/shared/iiProver/src/boogieGen/boogieGen.cpp:79:129: error: no matching function for call to ‘llvm::Meta​‌​
data::printAsOperand(llvm::raw_string_ostream&, bool)’                                                  
 Node>(I->getMetadata("llvm.loop")->getOperand(3))->getOperand(1)->printAsOperand(string_stream, false);
                                                                                                      ^ 
In file included from /shared/dass/llvm-6.0/include/llvm/IR/TrackingMDRef.h:17:0,                       
                 from /shared/dass/llvm-6.0/include/llvm/IR/DebugLoc.h:18,                              
                 from /shared/dass/llvm-6.0/include/llvm/IR/Instruction.h:22,                           
                 from /shared/dass/llvm-6.0/include/llvm/IR/BasicBlock.h:23,                            
                 from /shared/dass/llvm-6.0/include/llvm/IR/Function.h:28,                              
                 from /shared/iiProver/src/boogieGen/boogieGen.cpp:1:                                   
/shared/dass/llvm-6.0/include/llvm/IR/Metadata.h:133:8: note: candidate: void llvm::Metadata::printAsOpe​‌​
rand(llvm::raw_ostream&, const llvm::Module*) const
   void printAsOperand(raw_ostream &OS, const Module *M = nullptr) const;                               
        ^~~~~~~~~~~~~~                                                                                  
/shared/dass/llvm-6.0/include/llvm/IR/Metadata.h:133:8: note:   no known conversion for argument 2 from ​‌​
‘bool’ to ‘const llvm::Module*’                                                                         
/shared/dass/llvm-6.0/include/llvm/IR/Metadata.h:134:8: note: candidate: void llvm::Metadata::printAsOpe​‌​
rand(llvm::raw_ostream&, llvm::ModuleSlotTracker&, const llvm::Module*) const
   void printAsOperand(raw_ostream &OS, ModuleSlotTracker &MST,                                         
        ^~~~~~~~~~~~~~                                                                                  
/shared/dass/llvm-6.0/include/llvm/IR/Metadata.h:134:8: note:   no known conversion for argument 2 from ​‌​
‘bool’ to ‘llvm::ModuleSlotTracker&’                                                                    
/shared/iiProver/src/boogieGen/boogieGen.cpp:80:50: error: invalid operands of types ‘int’ and ‘const ch​‌​
ar [2]’ to binary ‘operator<<’                                                                          
                 int pplII = std::stoi(pplIIBuff) << "\n";                                              
                             ~~~~~~~~~~~~~~~~~~~~~^~~~~~~                                               
boogieGen/CMakeFiles/boogieGen.dir/build.make:62: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/​‌​
boogieGen.cpp.o' failed
make[3]: *** [boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o] Error 1
make[3]: Leaving directory '/shared/iiProver/src/_build'
CMakeFiles/Makefile2:117: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/all' failed
make[2]: *** [boogieGen/CMakeFiles/boogieGen.dir/all] Error 2
make[2]: Leaving directory '/shared/iiProver/src/_build'
Makefile:83: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/shared/iiProver/src/_build'
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 2
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::programSlic​‌​
e(llvm::Module&)’:                                                                                      
/shared/iiProver/src/boogieGen/boogieGen.cpp:79:129: error: no matching function for call to ‘llvm::Meta​‌​
data::printAsOperand(llvm::raw_string_ostream&, bool)’                                                  
 Node>(I->getMetadata("llvm.loop")->getOperand(3))->getOperand(1)->printAsOperand(string_stream, false);
                                                                                                      ^ 
In file included from /shared/dass/llvm-6.0/include/llvm/IR/TrackingMDRef.h:17:0,                       
                 from /shared/dass/llvm-6.0/include/llvm/IR/DebugLoc.h:18,                              
                 from /shared/dass/llvm-6.0/include/llvm/IR/Instruction.h:22,                           
                 from /shared/dass/llvm-6.0/include/llvm/IR/BasicBlock.h:23,                            
                 from /shared/dass/llvm-6.0/include/llvm/IR/Function.h:28,                              
                 from /shared/iiProver/src/boogieGen/boogieGen.cpp:1:                                   
/shared/dass/llvm-6.0/include/llvm/IR/Metadata.h:133:8: note: candidate: void llvm::Metadata::printAsOpe​‌​
rand(llvm::raw_ostream&, const llvm::Module*) const
   void printAsOperand(raw_ostream &OS, const Module *M = nullptr) const;                               
        ^~~~~~~~~~~~~~                                                                                  
/shared/dass/llvm-6.0/include/llvm/IR/Metadata.h:133:8: note:   no known conversion for argument 2 from ​‌​
‘bool’ to ‘const llvm::Module*’                                                                         
/shared/dass/llvm-6.0/include/llvm/IR/Metadata.h:134:8: note: candidate: void llvm::Metadata::printAsOpe​‌​
rand(llvm::raw_ostream&, llvm::ModuleSlotTracker&, const llvm::Module*) const
   void printAsOperand(raw_ostream &OS, ModuleSlotTracker &MST,                                         
        ^~~~~~~~~~~~~~                                                                                  
/shared/dass/llvm-6.0/include/llvm/IR/Metadata.h:134:8: note:   no known conversion for argument 2 from ​‌​
‘bool’ to ‘llvm::ModuleSlotTracker&’                                                                    
boogieGen/CMakeFiles/boogieGen.dir/build.make:62: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/​‌​
boogieGen.cpp.o' failed
make[3]: *** [boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o] Error 1
make[3]: Leaving directory '/shared/iiProver/src/_build'
CMakeFiles/Makefile2:117: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/all' failed
make[2]: *** [boogieGen/CMakeFiles/boogieGen.dir/all] Error 2
make[2]: Leaving directory '/shared/iiProver/src/_build'
Makefile:83: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/shared/iiProver/src/_build'
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 2
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::programSlic​‌​
e(llvm::Module&)’:                                                                                      
/shared/iiProver/src/boogieGen/boogieGen.cpp:79:105: error: cannot convert ‘const llvm::MDOperand’ to ‘l​‌​
lvm::Value*’ in initialization                                                                          
              Value *temp = dyn_cast<MDNode>(I->getMetadata("llvm.loop")->getOperand(3))->getOperand(1);
                                                                                                      ^ 
boogieGen/CMakeFiles/boogieGen.dir/build.make:62: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/​‌​
boogieGen.cpp.o' failed
make[3]: *** [boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o] Error 1
make[3]: Leaving directory '/shared/iiProver/src/_build'
CMakeFiles/Makefile2:117: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/all' failed
make[2]: *** [boogieGen/CMakeFiles/boogieGen.dir/all] Error 2
make[2]: Leaving directory '/shared/iiProver/src/_build'
Makefile:83: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/shared/iiProver/src/_build'
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 2
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
/shared/iiProver/src/boogieGen/boogieGen.cpp: In member function ‘void boogieGen::boogieGen::programSlic​‌​
e(llvm::Module&)’:                                                                                      
/shared/iiProver/src/boogieGen/boogieGen.cpp:79:149: error: no matching function for call to ‘llvm::Meta​‌​
data::printAsOperand(llvm::raw_string_ostream&, bool)’                                                  
 ode>(I->getMetadata("llvm.loop")->getOperand(3))->getOperand(1))->printAsOperand(string_stream, false);
                                                                                                      ^ 
In file included from /shared/dass/llvm-6.0/include/llvm/IR/TrackingMDRef.h:17:0,                       
                 from /shared/dass/llvm-6.0/include/llvm/IR/DebugLoc.h:18,                              
                 from /shared/dass/llvm-6.0/include/llvm/IR/Instruction.h:22,                           
                 from /shared/dass/llvm-6.0/include/llvm/IR/BasicBlock.h:23,                            
                 from /shared/dass/llvm-6.0/include/llvm/IR/Function.h:28,                              
                 from /shared/iiProver/src/boogieGen/boogieGen.cpp:1:                                   
/shared/dass/llvm-6.0/include/llvm/IR/Metadata.h:133:8: note: candidate: void llvm::Metadata::printAsOpe​‌​
rand(llvm::raw_ostream&, const llvm::Module*) const
   void printAsOperand(raw_ostream &OS, const Module *M = nullptr) const;                               
        ^~~~~~~~~~~~~~                                                                                  
/shared/dass/llvm-6.0/include/llvm/IR/Metadata.h:133:8: note:   no known conversion for argument 2 from ​‌​
‘bool’ to ‘const llvm::Module*’                                                                         
/shared/dass/llvm-6.0/include/llvm/IR/Metadata.h:134:8: note: candidate: void llvm::Metadata::printAsOpe​‌​
rand(llvm::raw_ostream&, llvm::ModuleSlotTracker&, const llvm::Module*) const
   void printAsOperand(raw_ostream &OS, ModuleSlotTracker &MST,                                         
        ^~~~~~~~~~~~~~                                                                                  
/shared/dass/llvm-6.0/include/llvm/IR/Metadata.h:134:8: note:   no known conversion for argument 2 from ​‌​
‘bool’ to ‘llvm::ModuleSlotTracker&’                                                                    
boogieGen/CMakeFiles/boogieGen.dir/build.make:62: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/​‌​
boogieGen.cpp.o' failed
make[3]: *** [boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o] Error 1
make[3]: Leaving directory '/shared/iiProver/src/_build'
CMakeFiles/Makefile2:117: recipe for target 'boogieGen/CMakeFiles/boogieGen.dir/all' failed
make[2]: *** [boogieGen/CMakeFiles/boogieGen.dir/all] Error 2
make[2]: Leaving directory '/shared/iiProver/src/_build'
Makefile:83: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/shared/iiProver/src/_build'
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 2
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
terminate called after throwing an instance of 'std::invalid_argument'
  what():  stoi
#0 0x000056350a1397cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x000056350a13985e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x000056350a137a33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x000056350a139037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007fbdd26958a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007fbdd1346f47 gsignal (/lib/x86_64-linux-gnu/libc.so.6+0x3ef47)
#6 0x00007fbdd13488b1 abort (/lib/x86_64-linux-gnu/libc.so.6+0x408b1)
#7 0x00007fbdd1d3b957 __strtof_l (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x8c957)
#8 0x00007fbdd1d41ae6 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x92ae6)
#9 0x00007fbdd1d41b21 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x92b21)
#10 0x00007fbdd1d41d54 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x92d54)
#11 0x00007fbdd1d3d7eb __strtof_l (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x8e7eb)
#12 0x000056350a59919e int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), c​‌​
har const*, char const*, unsigned long*, int) /usr/include/c++/7/ext/string_conversions.h:84:0
#13 0x00007fbdd109f402 std::__cxx11::stoi(std::__cxx11::basic_string<char, std::char_traits<char>, std::​‌​
allocator<char> > const&, unsigned long*, int) /usr/include/c++/7/bits/basic_string.h:6373:0
#14 0x00007fbdd10900db boogieGen::boogieGen::programSlice(llvm::Module&) /shared/iiProver/src/boogieGen/​‌​
boogieGen.cpp:80:0
#15 0x00007fbdd108fca5 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:43:0
#16 0x000056350994da21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#17 0x000056350994e14b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#18 0x000056350994e343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#19 0x0000563508bb3f79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#20 0x00007fbdd1329b97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#21 0x0000563508b836ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Aborted (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
i32 2
terminate called after throwing an instance of 'std::invalid_argument'
  what():  stoi
#0 0x0000562aec35d7cb llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/dass/llvm/lib/Support/Unix/​‌​
Signals.inc:398:0
#1 0x0000562aec35d85e PrintStackTraceSignalHandler(void*) /shared/dass/llvm/lib/Support/Unix/Signals.inc​‌​
:462:0
#2 0x0000562aec35ba33 llvm::sys::RunSignalHandlers() /shared/dass/llvm/lib/Support/Signals.cpp:49:0
#3 0x0000562aec35d037 SignalHandler(int) /shared/dass/llvm/lib/Support/Unix/Signals.inc:252:0
#4 0x00007f31ab0eb8a0 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x128a0)
#5 0x00007f31a9d9cf47 gsignal (/lib/x86_64-linux-gnu/libc.so.6+0x3ef47)
#6 0x00007f31a9d9e8b1 abort (/lib/x86_64-linux-gnu/libc.so.6+0x408b1)
#7 0x00007f31aa791957 __strtof_l (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x8c957)
#8 0x00007f31aa797ae6 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x92ae6)
#9 0x00007f31aa797b21 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x92b21)
#10 0x00007f31aa797d54 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x92d54)
#11 0x00007f31aa7937eb __strtof_l (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x8e7eb)
#12 0x0000562aec7bd19e int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), c​‌​
har const*, char const*, unsigned long*, int) /usr/include/c++/7/ext/string_conversions.h:84:0
#13 0x00007f31a9af5428 std::__cxx11::stoi(std::__cxx11::basic_string<char, std::char_traits<char>, std::​‌​
allocator<char> > const&, unsigned long*, int) /usr/include/c++/7/bits/basic_string.h:6373:0
#14 0x00007f31a9ae6101 boogieGen::boogieGen::programSlice(llvm::Module&) /shared/iiProver/src/boogieGen/​‌​
boogieGen.cpp:81:0
#15 0x00007f31a9ae5ca5 boogieGen::boogieGen::runOnModule(llvm::Module&) /shared/iiProver/src/boogieGen/b​‌​
oogieGen.cpp:43:0
#16 0x0000562aebb71a21 (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/dass/llv​‌​
m/lib/IR/LegacyPassManager.cpp:1597:0
#17 0x0000562aebb7214b llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/dass/llvm/lib/IR/Legacy​‌​
PassManager.cpp:1700:0
#18 0x0000562aebb72343 llvm::legacy::PassManager::run(llvm::Module&) /shared/dass/llvm/lib/IR/LegacyPass​‌​
Manager.cpp:1732:0
#19 0x0000562aeadd7f79 main /shared/dass/llvm/tools/opt/opt.cpp:765:0
#20 0x00007f31a9d7fb97 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b97)
#21 0x0000562aeada76ba _start (/shared/dass/llvm-6.0/bin/opt+0x10156ba)
Stack dump:
0.      Program arguments: /shared/dass/llvm-6.0/bin/opt -load ../src/_build/boogieGen/libboogieGen.so -​‌​
boogieGen vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc -S 
1.      Running pass 'Boogie program generator from C code' on module 'vecTrans/proj/soluion1/.autopilot​‌​
/db/a.o.3.bc'.
Aborted (core dumped)
Error: syntax check failed.
Makefile:9: recipe for target 'test' failed
make: *** [test] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ ^C
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
2
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !52
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !52
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !37
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !70
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !70
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !54
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !54
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !54
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !54
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !54
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !37
Removing   %mul = fmul double undef, undef, !bitwidth !37
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !37
Removing   %mul3 = fmul double undef, undef, !bitwidth !37
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !37
Removing   %mul5 = fmul double undef, undef, !bitwidth !37
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !37
Removing   %mul7 = fmul double undef, undef, !bitwidth !37
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !37
Removing   %mul9 = fmul double undef, undef, !bitwidth !37
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !37
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !37
Removing   %b_1 = fmul double undef, undef, !bitwidth !37
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !37
Found 1 phi nodes.
Function: llvm.part.select.i64is empty so ignored in Boogie
Function: llvm.part.select.i11is empty so ignored in Boogie
Function: llvm.part.select.i10is empty so ignored in Boogie
Function: llvm.dbg.valueis empty so ignored in Boogie
Function: _ssdm_op_SpecTopModuleis empty so ignored in Boogie
Function: _ssdm_op_SpecPipelineis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopTripCountis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopNameis empty so ignored in Boogie
Function: _ssdm_op_SpecBitsMapis empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i8.i11.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i7.i10.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i52.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i11.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_BitConcatenate.i10.i7.i3is empty so ignored in Boogie
Function: _ssdm_SpecDependenceis empty so ignored in Boogie
Found total 84 states.
Boogie generated successfully.
boogie vecTrans/output.bpl
Boogie program verifier version 2.7.34.0, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test                                
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !52
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !52
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !37
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !70
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !70
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !54
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !54
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !54
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !54
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !54
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !37
Removing   %mul = fmul double undef, undef, !bitwidth !37
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !37
Removing   %mul3 = fmul double undef, undef, !bitwidth !37
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !37
Removing   %mul5 = fmul double undef, undef, !bitwidth !37
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !37
Removing   %mul7 = fmul double undef, undef, !bitwidth !37
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !37
Removing   %mul9 = fmul double undef, undef, !bitwidth !37
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !37
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !37
Removing   %b_1 = fmul double undef, undef, !bitwidth !37
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !37
Found 1 phi nodes.
Function: llvm.part.select.i64is empty so ignored in Boogie
Function: llvm.part.select.i11is empty so ignored in Boogie
Function: llvm.part.select.i10is empty so ignored in Boogie
Function: llvm.dbg.valueis empty so ignored in Boogie
Function: _ssdm_op_SpecTopModuleis empty so ignored in Boogie
Function: _ssdm_op_SpecPipelineis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopTripCountis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopNameis empty so ignored in Boogie
Function: _ssdm_op_SpecBitsMapis empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i8.i11.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i7.i10.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i52.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i11.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_BitConcatenate.i10.i7.i3is empty so ignored in Boogie
Function: _ssdm_SpecDependenceis empty so ignored in Boogie
Found total 84 states.
Boogie generated successfully.
boogie vecTrans/output.bpl
Boogie program verifier finished with 1 verified, 0 errors03-2014, Microsoft.
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans test                                
cd ../src/_build; make
make[1]: Entering directory '/shared/iiProver/src/_build'
make[2]: Entering directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
Scanning dependencies of target boogieGen
make[3]: Leaving directory '/shared/iiProver/src/_build'
make[3]: Entering directory '/shared/iiProver/src/_build'
[ 50%] Building CXX object boogieGen/CMakeFiles/boogieGen.dir/boogieGen.cpp.o
[100%] Linking CXX shared module libboogieGen.so
make[3]: Leaving directory '/shared/iiProver/src/_build'
[100%] Built target boogieGen
make[2]: Leaving directory '/shared/iiProver/src/_build'
make[1]: Leaving directory '/shared/iiProver/src/_build'
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !52
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !52
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !37
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !70
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !70
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !54
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !54
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !54
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !54
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !54
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !37
Removing   %mul = fmul double undef, undef, !bitwidth !37
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !37
Removing   %mul3 = fmul double undef, undef, !bitwidth !37
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !37
Removing   %mul5 = fmul double undef, undef, !bitwidth !37
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !37
Removing   %mul7 = fmul double undef, undef, !bitwidth !37
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !37
Removing   %mul9 = fmul double undef, undef, !bitwidth !37
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !37
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !37
Removing   %b_1 = fmul double undef, undef, !bitwidth !37
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !37
Found 1 phi nodes.
Function: llvm.part.select.i64is empty so ignored in Boogie
Function: llvm.part.select.i11is empty so ignored in Boogie
Function: llvm.part.select.i10is empty so ignored in Boogie
Function: llvm.dbg.valueis empty so ignored in Boogie
Function: _ssdm_op_SpecTopModuleis empty so ignored in Boogie
Function: _ssdm_op_SpecPipelineis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopTripCountis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopNameis empty so ignored in Boogie
Function: _ssdm_op_SpecBitsMapis empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i8.i11.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i7.i10.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i52.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i11.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_BitConcatenate.i10.i7.i3is empty so ignored in Boogie
Function: _ssdm_SpecDependenceis empty so ignored in Boogie
Found total 84 states.
Boogie generated successfully.
boogie vecTrans/output.bpl
Boogie program verifier version 2.7.34.0, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
vagrant@ubuntu-bionic:/shared/iiProver/examples$ cat vecTrans/syn.tcl                                   
open_project -reset proj
set_top vecTrans
add_files {src/vecTrans.h src/vecTrans.cpp }
add_files -tb {src/vecTrans_tb.cpp}
open_solution -reset "soluion1"
set_part {xc7z020clg484-1}
create_clock -period 10 -name default
csynth_design
exit
vagrant@ubuntu-bionic:/shared/iiProver/examples$ ls vecTrans/                                           
cosim.tcl  output.bpl  proj  src  syn.tcl  vecTrans.ll  vitis_hls.log
vagrant@ubuntu-bionic:/shared/iiProver/examples$ rm vecTrans/vecTrans.ll 
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full                                
python ../src/iiProver.py vecTrans || (echo "Error: iiProver check failed."; exit 3)
Traceback (most recent call last):
  File "../src/iiProver.py", line 18, in <module>
    buff.append(line)
NameError: name 'buff' is not defined
Error: iiProver check failed.
Makefile:14: recipe for target 'full' failed
make: *** [full] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full
python ../src/iiProver.py vecTrans || (echo "Error: iiProver check failed."; exit 3)
Traceback (most recent call last):
  File "../src/iiProver.py", line 19, in <module>
    buff.append(line)
AttributeError: 'str' object has no attribute 'append'
Error: iiProver check failed.
Makefile:14: recipe for target 'full' failed
make: *** [full] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full
python ../src/iiProver.py vecTrans || (echo "Error: iiProver check failed."; exit 3)
Traceback (most recent call last):
  File "../src/iiProver.py", line 42, in <module>
    buff = removeComment(buff)
NameError: name 'removeComment' is not defined
Error: iiProver check failed.
Makefile:14: recipe for target 'full' failed
make: *** [full] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full
python ../src/iiProver.py vecTrans || (echo "Error: iiProver check failed."; exit 3)
Traceback (most recent call last):
  File "../src/iiProver.py", line 48, in <module>
    iterFileName = os.path.relpath(h, top+"../src")
NameError: name 'h' is not defined
Error: iiProver check failed.
Makefile:14: recipe for target 'full' failed
make: *** [full] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full
python ../src/iiProver.py vecTrans || (echo "Error: iiProver check failed."; exit 3)
Traceback (most recent call last):
  File "../src/iiProver.py", line 49, in <module>
    iterFileName = os.path.relpath(h, top+"../src")
NameError: name 'h' is not defined
Error: iiProver check failed.
Makefile:14: recipe for target 'full' failed
make: *** [full] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full
python ../src/iiProver.py vecTrans || (echo "Error: iiProver check failed."; exit 3)
Traceback (most recent call last):
  File "../src/iiProver.py", line 50, in <module>
    ftemp = open(iterFileName, "w")
IOError: [Errno 2] No such file or directory: '../../vecTrans/src/vecTrans.cpp'
Error: iiProver check failed.
Makefile:14: recipe for target 'full' failed
make: *** [full] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full
python ../src/iiProver.py vecTrans || (echo "Error: iiProver check failed."; exit 3)
tcl files generated successfully.
rm: cannot remove 'vecTrans.cpp': No such file or directory
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full
python ../src/iiProver.py vecTrans || (echo "Error: iiProver check failed."; exit 3)
tcl files generated successfully.
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full
tcl files generated successfully.
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full
 ==================================================== 
 II prover for Vitis HLS v1.0 
 Written by Jianyi Cheng, Imperial College London 
Traceback (most recent call last):
  File "../src/iiProver.py", line 16, in <module>
    print(" "++str(datetime.datetime.now().strftime("%D %T")))
TypeError: bad operand type for unary +: 'str'
Error: iiProver check failed.
Makefile:14: recipe for target 'full' failed
make: *** [full] Error 3
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full
 ==================================================== 
 II prover for Vitis HLS v1.0 
 Written by Jianyi Cheng, Imperial College London 
 10/10/20 17:28:07
 ==================================================== 
tcl files generated successfully.
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full
 ==================================================== 
 II prover for Vitis HLS v1.0 
 Written by Jianyi Cheng, Imperial College London 
 10/10/20 17:28:54
 ==================================================== 
tcl files generated successfully.
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full
 ==================================================== 
 II prover for Vitis HLS v1.0 
 Written by Jianyi Cheng, Imperial College London 
 10/10/20 17:35:33
 ==================================================== 
preprocess successfully.
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full; cat vecTrans/vecTrans.cpp     
 ==================================================== 
 II prover for Vitis HLS v1.0 
 Written by Jianyi Cheng, Imperial College London 
 10/10/20 17:35:41
 ==================================================== 
preprocess successfully.
#include"vecTrans.h"

voidvecTrans(doubleA[1000]){
#pragmaHLSARRAY_PARTITIONvariable=Ablockfactor=2dim=1
for(inti=0;i<100;i++){

#pragma HLS PIPELINE
#pragmaHLSDEPENDENCEvariable=Aarrayinterfalse
doublea=A[i];
if(a>100.0){
doubleb=(((((a+0.64)*a+0.7)*a+0.21)*a+0.33)*a+0.25)*a+0.125;
A[i+63]=b;
}
else{
doubleb=a*a;
A[i+9]=b;
}
}
}
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full; cat vecTrans/vecTrans.cpp 
 ==================================================== 
 II prover for Vitis HLS v1.0 
 Written by Jianyi Cheng, Imperial College London 
 10/10/20 17:36:09
 ==================================================== 
preprocess successfully.
#include "vecTrans.h"

void vecTrans(double A[1000]){
#pragma HLS ARRAY_PARTITION variable=A block factor=2 dim=1
        for (int i = 0; i < 100; i++){
         
#pragma HLS PIPELINE
        #pragma HLS DEPENDENCE variable=A array inter false
            double a = A[i];
            if (a > 100.0){
                double b = (((((a+0.64)*a+0.7)*a+0.21)*a+0.33)*a+0.25)*a+0.125;
                A[i+63] = b;
            }
                else {
                double b = a*a;
                A[i+9] = b;
            }
        }
}
vagrant@ubuntu-bionic:/shared/iiProver/examples$ vim Makefile                                           
#!make                                                                                                  
include ../env.tcl                                    
                              
BENCH = vecTrans loopCond                         
                  
default: full                                         
                        
test: # automatically determine an optimal II for the loop
        cd ../src/_build; make
        @$(OPT) -load ../src/_build/boogieGen/libboogieGen.so -boogieGen $(name)/proj/soluion1/.autopilo
t/db/a.o.3.bc -S > /dev/null  || (echo "Error: syntax check failed."; exit 3)   
        boogie $(name)/output.bpl     
         
full:               
        @python ../src/iiProver.py $(name) 2>&1 | tee iiProver.log || (echo "Error: iiProver check faile
d."; exit 3)                
                           
cosim: # verify a schedule is correct by co-simulation                         
        @gcc $(name)/src/*.c* || (echo "Error: syntax check failed."; exit 3)
        @rm a.out
        @python ../src/tclGen.py $(name) || (echo "Error: generate synthesis script failed."; exit 3)
        @cd $(name); $(VHLS) cosim.tcl || (echo "Error: Vitis HLS synthesis failed."; exit 3)
                           
verify: # verify a schedule is correct by Boogie
        @gcc $(name)/src/*.c* || (echo "Error: syntax check failed."; exit 3)
        @rm a.out
        @python ../src/tclGen.py $(name) || (echo "Error: generate synthesis script failed."; exit 3)   
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full; cat vecTrans/vecTrans.cpp      
 ==================================================== 
 II prover for Vitis HLS v1.0 
 Written by Jianyi Cheng, Imperial College London 
 10/10/20 17:38:23
 ==================================================== 
preprocess successfully.
Traceback (most recent call last):
  File "../src/iiProver.py", line 93, in <module>
    buff.append("#pragma HLS PIPELINE II="+ii+"\n")
TypeError: cannot concatenate 'str' and 'int' objects
#include "vecTrans.h"

void vecTrans(double A[1000]){
#pragma HLS ARRAY_PARTITION variable=A block factor=2 dim=1
        for (int i = 0; i < 100; i++){
         
        #pragma HLS PIPELINE II=2
        #pragma HLS DEPENDENCE variable=A array inter false
            double a = A[i];
            if (a > 100.0){
                double b = (((((a+0.64)*a+0.7)*a+0.21)*a+0.33)*a+0.25)*a+0.125;
                A[i+63] = b;
            }
                else {
                double b = a*a;
                A[i+9] = b;
            }
        }
}
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full; cat vecTrans/vecTrans.cpp     
 ==================================================== 
 II prover for Vitis HLS v1.0 
 Written by Jianyi Cheng, Imperial College London 
 10/10/20 17:38:38
 ==================================================== 
preprocess successfully.
#include "vecTrans.h"

void vecTrans(double A[1000]){
#pragma HLS ARRAY_PARTITION variable=A block factor=2 dim=1
        for (int i = 0; i < 100; i++){
         
#pragma HLS PIPELINE II=99
        #pragma HLS DEPENDENCE variable=A array inter false
            double a = A[i];
            if (a > 100.0){
                double b = (((((a+0.64)*a+0.7)*a+0.21)*a+0.33)*a+0.25)*a+0.125;
                A[i+63] = b;
            }
                else {
                double b = a*a;
                A[i+9] = b;
            }
        }
}
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full; cat vecTrans/vecTrans.cpp 
 ==================================================== 
 II prover for Vitis HLS v1.0 
 Written by Jianyi Cheng, Imperial College London 
 10/10/20 17:38:42
 ==================================================== 
preprocess successfully.
#include "vecTrans.h"

void vecTrans(double A[1000]){
#pragma HLS ARRAY_PARTITION variable=A block factor=2 dim=1
        for (int i = 0; i < 100; i++){
         
#pragma HLS PIPELINE II=99
        #pragma HLS DEPENDENCE variable=A array inter false
            double a = A[i];
            if (a > 100.0){
                double b = (((((a+0.64)*a+0.7)*a+0.21)*a+0.33)*a+0.25)*a+0.125;
                A[i+63] = b;
            }
                else {
                double b = a*a;
                A[i+9] = b;
            }
        }
}
vagrant@ubuntu-bionic:/shared/iiProver/examples$ cat vecTrans/iiprover.tcl 
open_project -reset proj
set_top vecTrans
add_files {src/vecTrans.h vecTrans.cpp }
open_solution -reset "soluion1"
set_part {xc7z020clg484-1}
create_clock -period 10 -name default
csynth_design
exit
vagrant@ubuntu-bionic:/shared/iiProver/examples$ boogie vecTrans/output.bpl                             
Boogie program verifier version 2.7.34.0, Copyright (c) 2003-2014, Microsoft.

Boogie program verifier finished with 1 verified, 0 errors
vagrant@ubuntu-bionic:/shared/iiProver/examples$ vim vecTrans/output.bpl                                
        var address_2: bv64;                                                                            
        var iteration_2: bv64;                             
        var load_2: bool;   
        var valid_2: bool; 
        var array_2: bv64;                                                     
        var offset_2: bv64; 
        var start_time_2: bv64;
        var $A_0: [bv64]bv64;
        var $A_1: [bv64]bv64;  
                           
        var II: bv64;
        var latency_0: bv64;
        var end_time_0:bv64;
        II := 1bv64;                                                                                    
        call label_0, address_0, iteration_0, load_0, valid_0, array_0 := vecTrans($A_0, $A_1);
        call label_1, address_1, iteration_1, load_1, valid_1, array_1 := vecTrans($A_0, $A_1);
        call label_2, address_2, iteration_2, load_2, valid_2, array_2 := vecTrans($A_0, $A_1);
        call latency_0 := getLatency(label_0);
        call offset_0 := getOffset(label_0);
        start_time_0 := bv64add(bv64mul(II, iteration_0), offset_0);
        call offset_1 := getOffset(label_1);
        start_time_1 := bv64add(bv64mul(II, iteration_1), offset_1);
        call offset_2 := getOffset(label_2);                                                            
        start_time_2 := bv64add(bv64mul(II, iteration_2), offset_2);         
        end_time_0 := bv64add(bv64add(bv64mul(II, iteration_0), offset_0), latency_0);
        assert (!valid_0 || !valid_1 || address_0 != address_1 || (load_0 && load_1) || label_0 == label
_1 || bv64sgt(iteration_0, iteration_1) || bv64sgt(start_time_1, end_time_0));                          
"vecTrans/output.bpl" 259L, 9649C written                                                               
vagrant@ubuntu-bionic:/shared/iiProver/examples$ boogie vecTrans/output.bpl                              
Boogie program verifier version 2.7.34.0, Copyright (c) 2003-2014, Microsoft.
vecTrans/output.bpl(257,2): Error BP5001: This assertion might not hold.
Execution trace:
    vecTrans/output.bpl(245,5): anon0
    vecTrans/output.bpl(101,17): inline$vecTrans$0$anon0
    vecTrans/output.bpl(116,62): inline$vecTrans$0$anon15_Else
    vecTrans/output.bpl(117,11): inline$vecTrans$0$anon3
    vecTrans/output.bpl(118,45): inline$vecTrans$0$anon16_Else
    vecTrans/output.bpl(136,22): inline$vecTrans$0$anon18_Then
    vecTrans/output.bpl(145,9): inline$vecTrans$0$anon19_Then
    vecTrans/output.bpl(101,17): inline$vecTrans$1$anon0
    vecTrans/output.bpl(116,62): inline$vecTrans$1$anon15_Else
    vecTrans/output.bpl(117,11): inline$vecTrans$1$anon3
    vecTrans/output.bpl(118,45): inline$vecTrans$1$anon16_Else
    vecTrans/output.bpl(136,42): inline$vecTrans$1$anon18_Else
    vecTrans/output.bpl(162,9): inline$vecTrans$1$anon20_Then
    vecTrans/output.bpl(101,17): inline$vecTrans$2$anon0
    vecTrans/output.bpl(116,62): inline$vecTrans$2$anon15_Else
    vecTrans/output.bpl(117,11): inline$vecTrans$2$anon3
    vecTrans/output.bpl(118,45): inline$vecTrans$2$anon16_Else
    vecTrans/output.bpl(136,22): inline$vecTrans$2$anon18_Then
    vecTrans/output.bpl(173,2): inline$vecTrans$2$bb_$1
    vecTrans/output.bpl(200,2): inline$getLatency$0$anon6_Else
    vecTrans/output.bpl(204,11): inline$getLatency$0$anon7_Then
    vecTrans/output.bpl(185,2): inline$getOffset$0$anon6_Else
    vecTrans/output.bpl(189,10): inline$getOffset$0$anon7_Then
    vecTrans/output.bpl(245,5): anon0$5
    vecTrans/output.bpl(185,2): inline$getOffset$1$anon6_Else
    vecTrans/output.bpl(185,2): inline$getOffset$1$anon7_Else
    vecTrans/output.bpl(192,10): inline$getOffset$1$anon8_Then
    vecTrans/output.bpl(245,5): anon0$6
    vecTrans/output.bpl(185,2): inline$getOffset$2$anon6_Else
    vecTrans/output.bpl(185,2): inline$getOffset$2$anon7_Else
    vecTrans/output.bpl(195,10): inline$getOffset$2$anon8_Else
    vecTrans/output.bpl(245,5): anon0$7
vecTrans/output.bpl(258,2): Error BP5001: This assertion might not hold.
Execution trace:
    vecTrans/output.bpl(245,5): anon0
    vecTrans/output.bpl(101,17): inline$vecTrans$0$anon0
    vecTrans/output.bpl(116,62): inline$vecTrans$0$anon15_Else
    vecTrans/output.bpl(117,11): inline$vecTrans$0$anon3
    vecTrans/output.bpl(118,45): inline$vecTrans$0$anon16_Else
    vecTrans/output.bpl(128,9): inline$vecTrans$0$anon17_Then
    vecTrans/output.bpl(101,17): inline$vecTrans$1$anon0
    vecTrans/output.bpl(116,62): inline$vecTrans$1$anon15_Else
    vecTrans/output.bpl(117,11): inline$vecTrans$1$anon3
    vecTrans/output.bpl(118,45): inline$vecTrans$1$anon16_Else
    vecTrans/output.bpl(136,42): inline$vecTrans$1$anon18_Else
    vecTrans/output.bpl(162,9): inline$vecTrans$1$anon20_Then
    vecTrans/output.bpl(101,17): inline$vecTrans$2$anon0
    vecTrans/output.bpl(116,62): inline$vecTrans$2$anon15_Else
    vecTrans/output.bpl(117,11): inline$vecTrans$2$anon3
    vecTrans/output.bpl(118,45): inline$vecTrans$2$anon16_Else
    vecTrans/output.bpl(136,22): inline$vecTrans$2$anon18_Then
    vecTrans/output.bpl(145,9): inline$vecTrans$2$anon19_Then
    vecTrans/output.bpl(201,11): inline$getLatency$0$anon6_Then
    vecTrans/output.bpl(186,10): inline$getOffset$0$anon6_Then
    vecTrans/output.bpl(245,5): anon0$5
    vecTrans/output.bpl(185,2): inline$getOffset$1$anon6_Else
    vecTrans/output.bpl(185,2): inline$getOffset$1$anon7_Else
    vecTrans/output.bpl(192,10): inline$getOffset$1$anon8_Then
    vecTrans/output.bpl(245,5): anon0$6
    vecTrans/output.bpl(185,2): inline$getOffset$2$anon6_Else
    vecTrans/output.bpl(189,10): inline$getOffset$2$anon7_Then
    vecTrans/output.bpl(245,5): anon0$7

Boogie program verifier finished with 0 verified, 2 errors
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full                                 
  File "../src/iiProver.py", line 110
    if "This assertion might not hold" not in ftemp.read():
     ^
IndentationError: expected an indented block
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full
  File "../src/iiProver.py", line 112
    if done:
           ^
IndentationError: unindent does not match any outer indentation level
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full
  File "../src/iiProver.py", line 113
    break;
        ^
IndentationError: expected an indented block
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full

****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vitis/2020.1/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vitis/2020.1/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'vagrant' on host 'ubuntu-bionic' (Linux_x86_64 version 4.15.0-118-generic) ​‌​
on Sat Oct 10 17:54:22 UTC 2020
INFO: [HLS 200-10] On os Ubuntu 18.04.5 LTS
INFO: [HLS 200-10] In directory '/shared/iiProver/examples/vecTrans'
Sourcing Tcl script 'iiprover.tcl'
INFO: [HLS 200-10] Opening and resetting project '/shared/iiProver/examples/vecTrans/proj'.
WARNING: [HLS 200-40] No /shared/iiProver/examples/vecTrans/proj/soluion1/soluion1.aps file found.
INFO: [HLS 200-10] Adding design file 'src/vecTrans.h' to the project
INFO: [HLS 200-10] Adding design file 'vecTrans.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/shared/iiProver/examples/vecTrans/proj/soluion1'.
INFO: [HLS 200-10] Cleaning up the solution database.
WARNING: [HLS 200-40] No /shared/iiProver/examples/vecTrans/proj/soluion1/soluion1.aps file found.
INFO: [HLS 200-1505] Using default flow_target 'vivado'
Resolution: For help on HLS 200-1505 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-1505.htm​‌​
l
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Analyzing design file 'vecTrans.cpp' ... 
ERROR: [HLS 207-812] 'vecTrans.h' file not found: vecTrans.cpp:1:10
command 'ap_source' returned error code
    while executing
"source iiprover.tcl"
    invoked from within
"hls::main iiprover.tcl"
    ("uplevel" body line 1)
    invoked from within
"uplevel 1 hls::main {*}$args"
    (procedure "hls_proc" line 5)
    invoked from within
"hls_proc $argv"
INFO: [Common 17-206] Exiting vitis_hls at Sat Oct 10 17:54:33 2020...
/shared/dass/llvm-6.0/bin/opt: vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc: error: Could not open inpu​‌​
t file: No such file or directory
^C^C^C^CMakefile:14: recipe for target 'full' failed
make: *** [full] Interrupt

vagrant@ubuntu-bionic:/shared/iiProver/examples$ ^C
vagrant@ubuntu-bionic:/shared/iiProver/examples$ ^C
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full
 ==================================================== 
 II prover for Vitis HLS v1.0 
 Written by Jianyi Cheng, Imperial College London 
 10/10/20 18:00:11
 ==================================================== 
Traceback (most recent call last):
  File "../src/iiProver.py", line 58, in <module>
    iterFileName = os.path.relpath(splitext(f)[0]+"_"+splitext(f)[1], top)
NameError: name 'splitext' is not defined
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full

****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vitis/2020.1/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vitis/2020.1/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'vagrant' on host 'ubuntu-bionic' (Linux_x86_64 version 4.15.0-118-generic) ​‌​
on Sat Oct 10 18:00:42 UTC 2020
INFO: [HLS 200-10] On os Ubuntu 18.04.5 LTS
INFO: [HLS 200-10] In directory '/shared/iiProver/examples/vecTrans'
Sourcing Tcl script 'iiprover.tcl'
INFO: [HLS 200-10] Opening and resetting project '/shared/iiProver/examples/vecTrans/proj'.
WARNING: [HLS 200-40] No /shared/iiProver/examples/vecTrans/proj/soluion1/soluion1.aps file found.
INFO: [HLS 200-10] Adding design file 'src/vecTrans.h' to the project
INFO: [HLS 200-10] Adding design file 'src/vecTrans_.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/shared/iiProver/examples/vecTrans/proj/soluion1'.
INFO: [HLS 200-10] Cleaning up the solution database.
WARNING: [HLS 200-40] No /shared/iiProver/examples/vecTrans/proj/soluion1/soluion1.aps file found.
INFO: [HLS 200-1505] Using default flow_target 'vivado'
Resolution: For help on HLS 200-1505 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-1505.htm​‌​
l
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Analyzing design file 'src/vecTrans_.cpp' ... 
WARNING: [HLS 207-1536] 'false' in '#pragma HLS dependence' is deprecated, and it will be removed in fut​‌​
ure release: src/vecTrans_.cpp:8:47
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:06 ; elapsed = 00:00:14 . Memory (MB): peak =​‌​
 1626.156 ; gain = 1229.770 ; free physical = 14668 ; free virtual = 15424
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:06 ; elapsed = 00:00:14 . Memory (MB​‌​
): peak = 1626.156 ; gain = 1229.770 ; free physical = 14668 ; free virtual = 15424
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:06 ; elapsed = 00:00:14 . Memory ​‌​
(MB): peak = 1626.156 ; gain = 1229.770 ; free physical = 14663 ; free virtual = 15419
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:06 ; elapsed = 00:00:14 . M​‌​
emory (MB): peak = 1626.156 ; gain = 1229.770 ; free physical = 14662 ; free virtual = 15418
INFO: [XFORM 203-101] Partitioning array 'A'  in dimension 1 with a block factor 2.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:06 ; elapsed = 00:00:14 . Memory (MB): ​‌​
peak = 1626.156 ; gain = 1229.770 ; free physical = 14643 ; free virtual = 15399
WARNING: [ANALYSIS 214-52] Found false inter dependency for variable 'A.1'.
WARNING: [ANALYSIS 214-52] Found false inter dependency for variable 'A.0'.
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:06 ; elapsed = 00:00:14 . Memo​‌​
ry (MB): peak = 1626.156 ; gain = 1229.770 ; free physical = 14642 ; free virtual = 15398
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'vecTrans' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'vecTrans' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_5_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 81.
WARNING: [HLS 200-871] Estimated clock period (7.416ns) exceeds the target (target clock period: 10ns, c​‌​
lock uncertainty: 2.7ns, effective delay budget: 7.3ns).
Resolution: For help on HLS 200-871 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-871.html
WARNING: [HLS 200-1016] The critical path in module 'vecTrans' consists of the following:       'dadd' o​‌​
peration ('add', src/vecTrans_.cpp:11) [40]  (7.3 ns)
        blocking operation 0.119 ns on control path)

Resolution: For help on HLS 200-1016 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-1016.htm​‌​
l
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 14.28 seconds; current allocated memory: 142.059 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 142.748 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'vecTrans' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'vecTrans/A_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'vecTrans/A_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'vecTrans' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_address0' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_we0' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_d0' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_address1' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_we1' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_d1' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-104] Estimated max fanout for 'vecTrans' is 9435 from HDL expression: (1'b0 == ap_block​‌​
_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_7_full_dsp_1': 6 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_7_max_dsp_1': 6 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'vecTrans'.
INFO: [HLS 200-111]  Elapsed time: 0.27 seconds; current allocated memory: 144.721 MB.
ETP: found array_partition regexp: A_\d+ : A_0 A_1 
ETP: A_0 -> A_0_address0 -> A_0_address0  (bram data virtual)
ETP: A_0 -> A_0_ce0 -> A_0_ce0  (bram data virtual)
ETP: A_0 -> A_0_we0 -> A_0_we0  (bram data virtual)
ETP: A_0 -> A_0_d0 -> A_0_d0  (bram data virtual)
ETP: A_0 -> A_0_address1 -> A_0_address1  (bram data virtual)
ETP: A_0 -> A_0_ce1 -> A_0_ce1  (bram data virtual)
ETP: A_0 -> A_0_q1 -> A_0_q1  (bram data virtual)
ETP: A_1 -> A_1_address0 -> A_1_address0  (bram data virtual)
ETP: A_1 -> A_1_ce0 -> A_1_ce0  (bram data virtual)
ETP: A_1 -> A_1_we0 -> A_1_we0  (bram data virtual)
ETP: A_1 -> A_1_d0 -> A_1_d0  (bram data virtual)
ETP: A_1 -> A_1_q0 -> A_1_q0  (bram data virtual)
ETP: A_1 -> A_1_address1 -> A_1_address1  (bram data virtual)
ETP: A_1 -> A_1_ce1 -> A_1_ce1  (bram data virtual)
ETP: A_1 -> A_1_we1 -> A_1_we1  (bram data virtual)
ETP: A_1 -> A_1_d1 -> A_1_d1  (bram data virtual)
ETP: A_1 -> A_1_q1 -> A_1_q1  (bram data virtual)
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:07 ; elapsed = 00:00:17 . M​‌​
emory (MB): peak = 1626.156 ; gain = 1229.770 ; free physical = 14633 ; free virtual = 15389
INFO: [VHDL 208-304] Generating VHDL RTL for vecTrans.
INFO: [VLOG 209-307] Generating Verilog RTL for vecTrans.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 134.84 MHz
INFO: [HLS 200-112] Total elapsed time: 17.44 seconds; peak allocated memory: 144.721 MB.
INFO: [Common 17-206] Exiting vitis_hls at Sat Oct 10 18:00:58 2020...
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !51
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !51
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !35
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !69
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !69
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !53
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !53
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !53
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !53
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !53
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !35
Removing   %mul = fmul double undef, undef, !bitwidth !35
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !35
Removing   %mul3 = fmul double undef, undef, !bitwidth !35
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !35
Removing   %mul5 = fmul double undef, undef, !bitwidth !35
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !35
Removing   %mul7 = fmul double undef, undef, !bitwidth !35
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !35
Removing   %mul9 = fmul double undef, undef, !bitwidth !35
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !35
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !35
Removing   %b_1 = fmul double undef, undef, !bitwidth !35
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !35
Found 1 phi nodes.
Function: llvm.part.select.i64is empty so ignored in Boogie
Function: llvm.part.select.i11is empty so ignored in Boogie
Function: llvm.part.select.i10is empty so ignored in Boogie
Function: llvm.dbg.valueis empty so ignored in Boogie
Function: _ssdm_op_SpecTopModuleis empty so ignored in Boogie
Function: _ssdm_op_SpecPipelineis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopTripCountis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopNameis empty so ignored in Boogie
Function: _ssdm_op_SpecBitsMapis empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i8.i11.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i7.i10.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i52.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i11.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_BitConcatenate.i10.i7.i3is empty so ignored in Boogie
Function: _ssdm_SpecDependenceis empty so ignored in Boogie
Found total 83 states.
Boogie generated successfully.

****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vitis/2020.1/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vitis/2020.1/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'vagrant' on host 'ubuntu-bionic' (Linux_x86_64 version 4.15.0-118-generic) ​‌​
on Sat Oct 10 18:01:02 UTC 2020
INFO: [HLS 200-10] On os Ubuntu 18.04.5 LTS
INFO: [HLS 200-10] In directory '/shared/iiProver/examples/vecTrans'
Sourcing Tcl script 'iter.tcl'
INFO: [HLS 200-10] Opening project '/shared/iiProver/examples/vecTrans/proj'.
ERROR: [HLS 200-70] You must open a solution first
ERROR: csynth_design handler 'get_config_compile -dump_cfg' error: command 'get_config_compile' returned​‌​
 error code
    while executing
"source iter.tcl"
    invoked from within
"hls::main iter.tcl"
    ("uplevel" body line 1)
    invoked from within
"uplevel 1 hls::main {*}$args"
    (procedure "hls_proc" line 5)
    invoked from within
"hls_proc $argv"
INFO: [Common 17-206] Exiting vitis_hls at Sat Oct 10 18:01:03 2020...
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !51
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !51
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !35
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !69
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !69
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !53
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !53
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !53
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !53
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !53
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !35
Removing   %mul = fmul double undef, undef, !bitwidth !35
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !35
Removing   %mul3 = fmul double undef, undef, !bitwidth !35
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !35
Removing   %mul5 = fmul double undef, undef, !bitwidth !35
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !35
Removing   %mul7 = fmul double undef, undef, !bitwidth !35
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !35
Removing   %mul9 = fmul double undef, undef, !bitwidth !35
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !35
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !35
Removing   %b_1 = fmul double undef, undef, !bitwidth !35
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !35
Found 1 phi nodes.
Function: llvm.part.select.i64is empty so ignored in Boogie
Function: llvm.part.select.i11is empty so ignored in Boogie
Function: llvm.part.select.i10is empty so ignored in Boogie
Function: llvm.dbg.valueis empty so ignored in Boogie
Function: _ssdm_op_SpecTopModuleis empty so ignored in Boogie
Function: _ssdm_op_SpecPipelineis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopTripCountis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopNameis empty so ignored in Boogie
Function: _ssdm_op_SpecBitsMapis empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i8.i11.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i7.i10.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i52.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i11.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_BitConcatenate.i10.i7.i3is empty so ignored in Boogie
Function: _ssdm_SpecDependenceis empty so ignored in Boogie
Found total 83 states.
Boogie generated successfully.

****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vitis/2020.1/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vitis/2020.1/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'vagrant' on host 'ubuntu-bionic' (Linux_x86_64 version 4.15.0-118-generic) ​‌​
on Sat Oct 10 18:01:06 UTC 2020
INFO: [HLS 200-10] On os Ubuntu 18.04.5 LTS
INFO: [HLS 200-10] In directory '/shared/iiProver/examples/vecTrans'
Sourcing Tcl script 'iter.tcl'
INFO: [HLS 200-10] Opening project '/shared/iiProver/examples/vecTrans/proj'.
ERROR: [HLS 200-70] You must open a solution first
ERROR: csynth_design handler 'get_config_compile -dump_cfg' error: command 'get_config_compile' returned​‌​
 error code
    while executing
"source iter.tcl"
    invoked from within
"hls::main iter.tcl"
    ("uplevel" body line 1)
    invoked from within
"uplevel 1 hls::main {*}$args"
    (procedure "hls_proc" line 5)
    invoked from within
"hls_proc $argv"
INFO: [Common 17-206] Exiting vitis_hls at Sat Oct 10 18:01:06 2020...
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !51
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !51
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !35
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !69
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !69
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !53
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !53
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !53
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !53
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !53
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !35
Removing   %mul = fmul double undef, undef, !bitwidth !35
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !35
Removing   %mul3 = fmul double undef, undef, !bitwidth !35
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !35
Removing   %mul5 = fmul double undef, undef, !bitwidth !35
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !35
Removing   %mul7 = fmul double undef, undef, !bitwidth !35
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !35
Removing   %mul9 = fmul double undef, undef, !bitwidth !35
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !35
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !35
Removing   %b_1 = fmul double undef, undef, !bitwidth !35
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !35
Found 1 phi nodes.
Function: llvm.part.select.i64is empty so ignored in Boogie
Function: llvm.part.select.i11is empty so ignored in Boogie
Function: llvm.part.select.i10is empty so ignored in Boogie
Function: llvm.dbg.valueis empty so ignored in Boogie
Function: _ssdm_op_SpecTopModuleis empty so ignored in Boogie
Function: _ssdm_op_SpecPipelineis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopTripCountis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopNameis empty so ignored in Boogie
Function: _ssdm_op_SpecBitsMapis empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i8.i11.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i7.i10.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i52.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i11.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_BitConcatenate.i10.i7.i3is empty so ignored in Boogie
Function: _ssdm_SpecDependenceis empty so ignored in Boogie
Found total 83 states.
Boogie generated successfully.

****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vitis/2020.1/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vitis/2020.1/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'vagrant' on host 'ubuntu-bionic' (Linux_x86_64 version 4.15.0-118-generic) ​‌​
on Sat Oct 10 18:01:11 UTC 2020
INFO: [HLS 200-10] On os Ubuntu 18.04.5 LTS
INFO: [HLS 200-10] In directory '/shared/iiProver/examples/vecTrans'
Sourcing Tcl script 'iter.tcl'
INFO: [HLS 200-10] Opening project '/shared/iiProver/examples/vecTrans/proj'.
ERROR: [HLS 200-70] You must open a solution first
ERROR: csynth_design handler 'get_config_compile -dump_cfg' error: command 'get_config_compile' returned​‌​
 error code
    while executing
"source iter.tcl"
    invoked from within
"hls::main iter.tcl"
    ("uplevel" body line 1)
    invoked from within
"uplevel 1 hls::main {*}$args"
    (procedure "hls_proc" line 5)
    invoked from within
"hls_proc $argv"
INFO: [Common 17-206] Exiting vitis_hls at Sat Oct 10 18:01:11 2020...
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !51
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !51
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !35
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !69
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !69
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !53
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !53
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !53
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !53
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !53
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !35
Removing   %mul = fmul double undef, undef, !bitwidth !35
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !35
Removing   %mul3 = fmul double undef, undef, !bitwidth !35
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !35
Removing   %mul5 = fmul double undef, undef, !bitwidth !35
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !35
Removing   %mul7 = fmul double undef, undef, !bitwidth !35
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !35
Removing   %mul9 = fmul double undef, undef, !bitwidth !35
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !35
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !35
Removing   %b_1 = fmul double undef, undef, !bitwidth !35
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !35
Found 1 phi nodes.
Function: llvm.part.select.i64is empty so ignored in Boogie
Function: llvm.part.select.i11is empty so ignored in Boogie
Function: llvm.part.select.i10is empty so ignored in Boogie
Function: llvm.dbg.valueis empty so ignored in Boogie
Function: _ssdm_op_SpecTopModuleis empty so ignored in Boogie
Function: _ssdm_op_SpecPipelineis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopTripCountis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopNameis empty so ignored in Boogie
Function: _ssdm_op_SpecBitsMapis empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i8.i11.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i7.i10.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i52.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i11.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_BitConcatenate.i10.i7.i3is empty so ignored in Boogie
Function: _ssdm_SpecDependenceis empty so ignored in Boogie
Found total 83 states.
Boogie generated successfully.

****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vitis/2020.1/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vitis/2020.1/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'vagrant' on host 'ubuntu-bionic' (Linux_x86_64 version 4.15.0-118-generic) ​‌​
on Sat Oct 10 18:01:15 UTC 2020
INFO: [HLS 200-10] On os Ubuntu 18.04.5 LTS
INFO: [HLS 200-10] In directory '/shared/iiProver/examples/vecTrans'
Sourcing Tcl script 'iter.tcl'
INFO: [HLS 200-10] Opening project '/shared/iiProver/examples/vecTrans/proj'.
ERROR: [HLS 200-70] You must open a solution first
ERROR: csynth_design handler 'get_config_compile -dump_cfg' error: command 'get_config_compile' returned​‌​
 error code
    while executing
"source iter.tcl"
    invoked from within
"hls::main iter.tcl"
    ("uplevel" body line 1)
    invoked from within
"uplevel 1 hls::main {*}$args"
    (procedure "hls_proc" line 5)
    invoked from within
"hls_proc $argv"
INFO: [Common 17-206] Exiting vitis_hls at Sat Oct 10 18:01:15 2020...
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !51
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !51
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !35
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !69
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !69
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !53
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !53
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !53
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !53
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !53
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !35
Removing   %mul = fmul double undef, undef, !bitwidth !35
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !35
Removing   %mul3 = fmul double undef, undef, !bitwidth !35
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !35
Removing   %mul5 = fmul double undef, undef, !bitwidth !35
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !35
Removing   %mul7 = fmul double undef, undef, !bitwidth !35
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !35
Removing   %mul9 = fmul double undef, undef, !bitwidth !35
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !35
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !35
Removing   %b_1 = fmul double undef, undef, !bitwidth !35
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !35
Found 1 phi nodes.
Function: llvm.part.select.i64is empty so ignored in Boogie
Function: llvm.part.select.i11is empty so ignored in Boogie
Function: llvm.part.select.i10is empty so ignored in Boogie
Function: llvm.dbg.valueis empty so ignored in Boogie
Function: _ssdm_op_SpecTopModuleis empty so ignored in Boogie
Function: _ssdm_op_SpecPipelineis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopTripCountis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopNameis empty so ignored in Boogie
Function: _ssdm_op_SpecBitsMapis empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i8.i11.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i7.i10.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i52.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i11.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_BitConcatenate.i10.i7.i3is empty so ignored in Boogie
Function: _ssdm_SpecDependenceis empty so ignored in Boogie
Found total 83 states.
Boogie generated successfully.

****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vitis/2020.1/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vitis/2020.1/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'vagrant' on host 'ubuntu-bionic' (Linux_x86_64 version 4.15.0-118-generic) ​‌​
on Sat Oct 10 18:01:19 UTC 2020
INFO: [HLS 200-10] On os Ubuntu 18.04.5 LTS
INFO: [HLS 200-10] In directory '/shared/iiProver/examples/vecTrans'
Sourcing Tcl script 'iter.tcl'
INFO: [HLS 200-10] Opening project '/shared/iiProver/examples/vecTrans/proj'.
ERROR: [HLS 200-70] You must open a solution first
ERROR: csynth_design handler 'get_config_compile -dump_cfg' error: command 'get_config_compile' returned​‌​
 error code
    while executing
"source iter.tcl"
    invoked from within
"hls::main iter.tcl"
    ("uplevel" body line 1)
    invoked from within
"uplevel 1 hls::main {*}$args"
    (procedure "hls_proc" line 5)
    invoked from within
"hls_proc $argv"
INFO: [Common 17-206] Exiting vitis_hls at Sat Oct 10 18:01:19 2020...
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !51
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !51
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !35
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !69
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !69
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !53
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !53
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !53
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !53
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !53
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !35
Removing   %mul = fmul double undef, undef, !bitwidth !35
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !35
Removing   %mul3 = fmul double undef, undef, !bitwidth !35
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !35
Removing   %mul5 = fmul double undef, undef, !bitwidth !35
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !35
Removing   %mul7 = fmul double undef, undef, !bitwidth !35
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !35
Removing   %mul9 = fmul double undef, undef, !bitwidth !35
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !35
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !35
Removing   %b_1 = fmul double undef, undef, !bitwidth !35
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !35
Found 1 phi nodes.
Function: llvm.part.select.i64is empty so ignored in Boogie
Function: llvm.part.select.i11is empty so ignored in Boogie
Function: llvm.part.select.i10is empty so ignored in Boogie
Function: llvm.dbg.valueis empty so ignored in Boogie
Function: _ssdm_op_SpecTopModuleis empty so ignored in Boogie
Function: _ssdm_op_SpecPipelineis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopTripCountis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopNameis empty so ignored in Boogie
Function: _ssdm_op_SpecBitsMapis empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i8.i11.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i7.i10.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i52.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i11.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_BitConcatenate.i10.i7.i3is empty so ignored in Boogie
Function: _ssdm_SpecDependenceis empty so ignored in Boogie
Found total 83 states.
Boogie generated successfully.

****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vitis/2020.1/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vitis/2020.1/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'vagrant' on host 'ubuntu-bionic' (Linux_x86_64 version 4.15.0-118-generic) ​‌​
on Sat Oct 10 18:01:23 UTC 2020
INFO: [HLS 200-10] On os Ubuntu 18.04.5 LTS
INFO: [HLS 200-10] In directory '/shared/iiProver/examples/vecTrans'
Sourcing Tcl script 'iter.tcl'
INFO: [HLS 200-10] Opening project '/shared/iiProver/examples/vecTrans/proj'.
ERROR: [HLS 200-70] You must open a solution first
ERROR: csynth_design handler 'get_config_compile -dump_cfg' error: command 'get_config_compile' returned​‌​
 error code
    while executing
"source iter.tcl"
    invoked from within
"hls::main iter.tcl"
    ("uplevel" body line 1)
    invoked from within
"uplevel 1 hls::main {*}$args"
    (procedure "hls_proc" line 5)
    invoked from within
"hls_proc $argv"
INFO: [Common 17-206] Exiting vitis_hls at Sat Oct 10 18:01:23 2020...
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !51
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !51
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !35
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !69
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !69
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !53
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !53
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !53
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !53
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !53
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !35
Removing   %mul = fmul double undef, undef, !bitwidth !35
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !35
Removing   %mul3 = fmul double undef, undef, !bitwidth !35
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !35
Removing   %mul5 = fmul double undef, undef, !bitwidth !35
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !35
Removing   %mul7 = fmul double undef, undef, !bitwidth !35
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !35
Removing   %mul9 = fmul double undef, undef, !bitwidth !35
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !35
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !35
Removing   %b_1 = fmul double undef, undef, !bitwidth !35
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !35
Found 1 phi nodes.
Function: llvm.part.select.i64is empty so ignored in Boogie
Function: llvm.part.select.i11is empty so ignored in Boogie
Function: llvm.part.select.i10is empty so ignored in Boogie
Function: llvm.dbg.valueis empty so ignored in Boogie
Function: _ssdm_op_SpecTopModuleis empty so ignored in Boogie
Function: _ssdm_op_SpecPipelineis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopTripCountis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopNameis empty so ignored in Boogie
Function: _ssdm_op_SpecBitsMapis empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i8.i11.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i7.i10.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i52.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i11.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_BitConcatenate.i10.i7.i3is empty so ignored in Boogie
Function: _ssdm_SpecDependenceis empty so ignored in Boogie
Found total 83 states.
Boogie generated successfully.

****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vitis/2020.1/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vitis/2020.1/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'vagrant' on host 'ubuntu-bionic' (Linux_x86_64 version 4.15.0-118-generic) ​‌​
on Sat Oct 10 18:01:27 UTC 2020
INFO: [HLS 200-10] On os Ubuntu 18.04.5 LTS
INFO: [HLS 200-10] In directory '/shared/iiProver/examples/vecTrans'
Sourcing Tcl script 'iter.tcl'
INFO: [HLS 200-10] Opening project '/shared/iiProver/examples/vecTrans/proj'.
ERROR: [HLS 200-70] You must open a solution first
ERROR: csynth_design handler 'get_config_compile -dump_cfg' error: command 'get_config_compile' returned​‌​
 error code
    while executing
"source iter.tcl"
    invoked from within
"hls::main iter.tcl"
    ("uplevel" body line 1)
    invoked from within
"uplevel 1 hls::main {*}$args"
    (procedure "hls_proc" line 5)
    invoked from within
"hls_proc $argv"
INFO: [Common 17-206] Exiting vitis_hls at Sat Oct 10 18:01:27 2020...
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !51
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !51
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !35
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !69
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !69
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !53
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !53
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !53
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !53
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !53
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !35
Removing   %mul = fmul double undef, undef, !bitwidth !35
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !35
Removing   %mul3 = fmul double undef, undef, !bitwidth !35
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !35
Removing   %mul5 = fmul double undef, undef, !bitwidth !35
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !35
Removing   %mul7 = fmul double undef, undef, !bitwidth !35
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !35
Removing   %mul9 = fmul double undef, undef, !bitwidth !35
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !35
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !35
Removing   %b_1 = fmul double undef, undef, !bitwidth !35
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !35
Found 1 phi nodes.
Function: llvm.part.select.i64is empty so ignored in Boogie
Function: llvm.part.select.i11is empty so ignored in Boogie
Function: llvm.part.select.i10is empty so ignored in Boogie
Function: llvm.dbg.valueis empty so ignored in Boogie
Function: _ssdm_op_SpecTopModuleis empty so ignored in Boogie
Function: _ssdm_op_SpecPipelineis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopTripCountis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopNameis empty so ignored in Boogie
Function: _ssdm_op_SpecBitsMapis empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i8.i11.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i7.i10.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i52.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i11.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_BitConcatenate.i10.i7.i3is empty so ignored in Boogie
Function: _ssdm_SpecDependenceis empty so ignored in Boogie
Found total 83 states.
Boogie generated successfully.
^C^CMakefile:14: recipe for target 'full' failed
make: *** [full] Interrupt

vagrant@ubuntu-bionic:/shared/iiProver/examples$ ^C
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full

****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vitis/2020.1/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vitis/2020.1/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'vagrant' on host 'ubuntu-bionic' (Linux_x86_64 version 4.15.0-118-generic) ​‌​
on Sat Oct 10 18:02:29 UTC 2020
INFO: [HLS 200-10] On os Ubuntu 18.04.5 LTS
INFO: [HLS 200-10] In directory '/shared/iiProver/examples/vecTrans'
Sourcing Tcl script 'iiprover.tcl'
INFO: [HLS 200-10] Opening and resetting project '/shared/iiProver/examples/vecTrans/proj'.
WARNING: [HLS 200-40] No /shared/iiProver/examples/vecTrans/proj/soluion1/soluion1.aps file found.
INFO: [HLS 200-10] Adding design file 'src/vecTrans.h' to the project
INFO: [HLS 200-10] Adding design file 'src/vecTrans__.cpp' to the project
INFO: [HLS 200-10] Adding design file 'src/vecTrans.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/shared/iiProver/examples/vecTrans/proj/soluion1'.
INFO: [HLS 200-10] Cleaning up the solution database.
WARNING: [HLS 200-40] No /shared/iiProver/examples/vecTrans/proj/soluion1/soluion1.aps file found.
INFO: [HLS 200-1505] Using default flow_target 'vivado'
Resolution: For help on HLS 200-1505 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-1505.htm​‌​
l
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Analyzing design file 'src/vecTrans__.cpp' ... 
WARNING: [HLS 207-1536] 'false' in '#pragma HLS dependence' is deprecated, and it will be removed in fut​‌​
ure release: src/vecTrans__.cpp:8:47
INFO: [HLS 200-10] Analyzing design file 'src/vecTrans.cpp' ... 
WARNING: [HLS 207-1536] 'false' in '#pragma HLS dependence' is deprecated, and it will be removed in fut​‌​
ure release: src/vecTrans.cpp:8:47
Error in llvm-link
    while executing
"source iiprover.tcl"
    invoked from within
"hls::main iiprover.tcl"
    ("uplevel" body line 1)
    invoked from within
"uplevel 1 hls::main {*}$args"
    (procedure "hls_proc" line 5)
    invoked from within
"hls_proc $argv"
INFO: [Common 17-206] Exiting vitis_hls at Sat Oct 10 18:02:38 2020...
/shared/dass/llvm-6.0/bin/opt: vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc: error: Could not open inpu​‌​
t file: No such file or directory

****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vitis/2020.1/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vitis/2020.1/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'vagrant' on host 'ubuntu-bionic' (Linux_x86_64 version 4.15.0-118-generic) ​‌​
on Sat Oct 10 18:02:42 UTC 2020
INFO: [HLS 200-10] On os Ubuntu 18.04.5 LTS
INFO: [HLS 200-10] In directory '/shared/iiProver/examples/vecTrans'
Sourcing Tcl script 'iter.tcl'
INFO: [HLS 200-10] Opening project '/shared/iiProver/examples/vecTrans/proj'.
INFO: [HLS 200-10] Opening and resetting solution '/shared/iiProver/examples/vecTrans/proj/soluion1'.
INFO: [HLS 200-10] Cleaning up the solution database.
WARNING: [HLS 200-40] No /shared/iiProver/examples/vecTrans/proj/soluion1/soluion1.aps file found.
INFO: [HLS 200-1505] Using default flow_target 'vivado'
Resolution: For help on HLS 200-1505 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-1505.htm​‌​
l
ERROR: [HLS 200-70] 'csynth_design' failed due to missing target device. Please use command 'set_part' t​‌​
o specify the target device.
Elaboration failed: no synthesis library found.
    while executing
"source iter.tcl"
    invoked from within
"hls::main iter.tcl"
    ("uplevel" body line 1)
    invoked from within
"uplevel 1 hls::main {*}$args"
    (procedure "hls_proc" line 5)
    invoked from within
"hls_proc $argv"
INFO: [Common 17-206] Exiting vitis_hls at Sat Oct 10 18:02:42 2020...
/shared/dass/llvm-6.0/bin/opt: vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc: error: Could not open inpu​‌​
t file: No such file or directory
^CMakefile:14: recipe for target 'full' failed
make: *** [full] Interrupt

vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full

****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vitis/2020.1/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vitis/2020.1/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'vagrant' on host 'ubuntu-bionic' (Linux_x86_64 version 4.15.0-118-generic) ​‌​
on Sat Oct 10 18:04:01 UTC 2020
INFO: [HLS 200-10] On os Ubuntu 18.04.5 LTS
INFO: [HLS 200-10] In directory '/shared/iiProver/examples/vecTrans'
Sourcing Tcl script 'iiprover.tcl'
INFO: [HLS 200-10] Opening and resetting project '/shared/iiProver/examples/vecTrans/proj'.
WARNING: [HLS 200-40] No /shared/iiProver/examples/vecTrans/proj/soluion1/soluion1.aps file found.
INFO: [HLS 200-10] Adding design file 'src/vecTrans.h' to the project
INFO: [HLS 200-10] Adding design file 'src/vecTrans__.cpp' to the project
INFO: [HLS 200-10] Adding design file 'src/vecTrans__.cpp' to the project
INFO: [HLS 200-10] Adding design file 'src/vecTrans.cpp' to the project
WARNING: [HLS 200-40] File src/vecTrans__.cpp is duplicated in the list.
INFO: [HLS 200-10] Creating and opening solution '/shared/iiProver/examples/vecTrans/proj/soluion1'.
INFO: [HLS 200-1505] Using default flow_target 'vivado'
Resolution: For help on HLS 200-1505 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-1505.htm​‌​
l
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Analyzing design file 'src/vecTrans__.cpp' ... 
^C^CMakefile:14: recipe for target 'full' failed
make: *** [full] Interrupt

vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full                                

****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vitis/2020.1/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vitis/2020.1/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'vagrant' on host 'ubuntu-bionic' (Linux_x86_64 version 4.15.0-118-generic) ​‌​
on Sat Oct 10 18:04:30 UTC 2020
INFO: [HLS 200-10] On os Ubuntu 18.04.5 LTS
INFO: [HLS 200-10] In directory '/shared/iiProver/examples/vecTrans'
Sourcing Tcl script 'iiprover.tcl'
INFO: [HLS 200-10] Opening and resetting project '/shared/iiProver/examples/vecTrans/proj'.
WARNING: [HLS 200-40] No /shared/iiProver/examples/vecTrans/proj/soluion1/soluion1.aps file found.
INFO: [HLS 200-10] Adding design file 'src/vecTrans.h' to the project
INFO: [HLS 200-10] Adding design file 'src/vecTrans__.cpp' to the project
INFO: [HLS 200-10] Adding design file 'src/vecTrans__.cpp' to the project
INFO: [HLS 200-10] Adding design file 'src/vecTrans.cpp' to the project
WARNING: [HLS 200-40] File src/vecTrans__.cpp is duplicated in the list.
INFO: [HLS 200-10] Creating and opening solution '/shared/iiProver/examples/vecTrans/proj/soluion1'.
INFO: [HLS 200-1505] Using default flow_target 'vivado'
Resolution: For help on HLS 200-1505 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-1505.htm​‌​
l
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Analyzing design file 'src/vecTrans__.cpp' ... 
WARNING: [HLS 207-1536] 'false' in '#pragma HLS dependence' is deprecated, and it will be removed in fut​‌​
ure release: src/vecTrans__.cpp:8:47
INFO: [HLS 200-10] Analyzing design file 'src/vecTrans.cpp' ... 
WARNING: [HLS 207-1536] 'false' in '#pragma HLS dependence' is deprecated, and it will be removed in fut​‌​
ure release: src/vecTrans.cpp:8:47
Error in llvm-link
    while executing
"source iiprover.tcl"
    invoked from within
"hls::main iiprover.tcl"
    ("uplevel" body line 1)
    invoked from within
"uplevel 1 hls::main {*}$args"
    (procedure "hls_proc" line 5)
    invoked from within
"hls_proc $argv"
INFO: [Common 17-206] Exiting vitis_hls at Sat Oct 10 18:04:39 2020...
/shared/dass/llvm-6.0/bin/opt: vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc: error: Could not open inpu​‌​
t file: No such file or directory
^C^CMakefile:14: recipe for target 'full' failed
make: *** [full] Interrupt

vagrant@ubuntu-bionic:/shared/iiProver/examples$ ^C
vagrant@ubuntu-bionic:/shared/iiProver/examples$ ^C
vagrant@ubuntu-bionic:/shared/iiProver/examples$ ls
Makefile  boogie.log  iiProver.log  loopCond  vecTrans
vagrant@ubuntu-bionic:/shared/iiProver/examples$ ls vecTrans/src/                                       
vecTrans.cpp  vecTrans.h  vecTrans_.cpp  vecTrans__.cpp  vecTrans_tb.cpp
vagrant@ubuntu-bionic:/shared/iiProver/examples$ rm vecTrans/src/vecTrans_.cpp                          
vagrant@ubuntu-bionic:/shared/iiProver/examples$ rm vecTrans/src/vecTrans__.cpp                         
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full                                

****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vitis/2020.1/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vitis/2020.1/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'vagrant' on host 'ubuntu-bionic' (Linux_x86_64 version 4.15.0-118-generic) ​‌​
on Sat Oct 10 18:05:16 UTC 2020
INFO: [HLS 200-10] On os Ubuntu 18.04.5 LTS
INFO: [HLS 200-10] In directory '/shared/iiProver/examples/vecTrans'
Sourcing Tcl script 'iiprover.tcl'
INFO: [HLS 200-10] Opening and resetting project '/shared/iiProver/examples/vecTrans/proj'.
WARNING: [HLS 200-40] No /shared/iiProver/examples/vecTrans/proj/soluion1/soluion1.aps file found.
INFO: [HLS 200-10] Adding design file 'src/vecTrans.h' to the project
INFO: [HLS 200-10] Adding design file 'src/vecTrans_.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/shared/iiProver/examples/vecTrans/proj/soluion1'.
INFO: [HLS 200-1505] Using default flow_target 'vivado'
Resolution: For help on HLS 200-1505 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-1505.htm​‌​
l
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Analyzing design file 'src/vecTrans_.cpp' ... 
WARNING: [HLS 207-1536] 'false' in '#pragma HLS dependence' is deprecated, and it will be removed in fut​‌​
ure release: src/vecTrans_.cpp:8:47
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:06 ; elapsed = 00:00:12 . Memory (MB): peak =​‌​
 1626.156 ; gain = 1229.770 ; free physical = 14668 ; free virtual = 15424
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:06 ; elapsed = 00:00:12 . Memory (MB​‌​
): peak = 1626.156 ; gain = 1229.770 ; free physical = 14668 ; free virtual = 15424
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:06 ; elapsed = 00:00:12 . Memory ​‌​
(MB): peak = 1626.156 ; gain = 1229.770 ; free physical = 14663 ; free virtual = 15419
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:06 ; elapsed = 00:00:12 . M​‌​
emory (MB): peak = 1626.156 ; gain = 1229.770 ; free physical = 14662 ; free virtual = 15418
INFO: [XFORM 203-101] Partitioning array 'A'  in dimension 1 with a block factor 2.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:06 ; elapsed = 00:00:12 . Memory (MB): ​‌​
peak = 1626.156 ; gain = 1229.770 ; free physical = 14642 ; free virtual = 15398
WARNING: [ANALYSIS 214-52] Found false inter dependency for variable 'A.0'.
WARNING: [ANALYSIS 214-52] Found false inter dependency for variable 'A.1'.
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:06 ; elapsed = 00:00:12 . Memo​‌​
ry (MB): peak = 1626.156 ; gain = 1229.770 ; free physical = 14641 ; free virtual = 15397
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'vecTrans' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'vecTrans' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_5_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 81.
WARNING: [HLS 200-871] Estimated clock period (7.416ns) exceeds the target (target clock period: 10ns, c​‌​
lock uncertainty: 2.7ns, effective delay budget: 7.3ns).
Resolution: For help on HLS 200-871 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-871.html
WARNING: [HLS 200-1016] The critical path in module 'vecTrans' consists of the following:       'dadd' o​‌​
peration ('add', src/vecTrans_.cpp:11) [40]  (7.3 ns)
        blocking operation 0.119 ns on control path)

Resolution: For help on HLS 200-1016 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-1016.htm​‌​
l
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 12.25 seconds; current allocated memory: 142.045 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 142.733 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'vecTrans' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'vecTrans/A_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'vecTrans/A_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'vecTrans' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_address0' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_we0' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_d0' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_address1' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_we1' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_d1' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-104] Estimated max fanout for 'vecTrans' is 9435 from HDL expression: (1'b0 == ap_block​‌​
_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_7_full_dsp_1': 6 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_7_max_dsp_1': 6 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'vecTrans'.
INFO: [HLS 200-111]  Elapsed time: 0.24 seconds; current allocated memory: 144.705 MB.
ETP: found array_partition regexp: A_\d+ : A_0 A_1 
ETP: A_0 -> A_0_address0 -> A_0_address0  (bram data virtual)
ETP: A_0 -> A_0_ce0 -> A_0_ce0  (bram data virtual)
ETP: A_0 -> A_0_we0 -> A_0_we0  (bram data virtual)
ETP: A_0 -> A_0_d0 -> A_0_d0  (bram data virtual)
ETP: A_0 -> A_0_address1 -> A_0_address1  (bram data virtual)
ETP: A_0 -> A_0_ce1 -> A_0_ce1  (bram data virtual)
ETP: A_0 -> A_0_q1 -> A_0_q1  (bram data virtual)
ETP: A_1 -> A_1_address0 -> A_1_address0  (bram data virtual)
ETP: A_1 -> A_1_ce0 -> A_1_ce0  (bram data virtual)
ETP: A_1 -> A_1_we0 -> A_1_we0  (bram data virtual)
ETP: A_1 -> A_1_d0 -> A_1_d0  (bram data virtual)
ETP: A_1 -> A_1_q0 -> A_1_q0  (bram data virtual)
ETP: A_1 -> A_1_address1 -> A_1_address1  (bram data virtual)
ETP: A_1 -> A_1_ce1 -> A_1_ce1  (bram data virtual)
ETP: A_1 -> A_1_we1 -> A_1_we1  (bram data virtual)
ETP: A_1 -> A_1_d1 -> A_1_d1  (bram data virtual)
ETP: A_1 -> A_1_q1 -> A_1_q1  (bram data virtual)
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:07 ; elapsed = 00:00:15 . M​‌​
emory (MB): peak = 1626.156 ; gain = 1229.770 ; free physical = 14632 ; free virtual = 15388
INFO: [VHDL 208-304] Generating VHDL RTL for vecTrans.
INFO: [VLOG 209-307] Generating Verilog RTL for vecTrans.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 134.84 MHz
INFO: [HLS 200-112] Total elapsed time: 15.26 seconds; peak allocated memory: 144.705 MB.
INFO: [Common 17-206] Exiting vitis_hls at Sat Oct 10 18:05:31 2020...
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !51
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !51
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !35
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !69
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !69
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !53
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !53
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !53
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !53
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !53
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !35
Removing   %mul = fmul double undef, undef, !bitwidth !35
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !35
Removing   %mul3 = fmul double undef, undef, !bitwidth !35
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !35
Removing   %mul5 = fmul double undef, undef, !bitwidth !35
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !35
Removing   %mul7 = fmul double undef, undef, !bitwidth !35
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !35
Removing   %mul9 = fmul double undef, undef, !bitwidth !35
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !35
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !35
Removing   %b_1 = fmul double undef, undef, !bitwidth !35
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !35
Found 1 phi nodes.
Function: llvm.part.select.i64is empty so ignored in Boogie
Function: llvm.part.select.i11is empty so ignored in Boogie
Function: llvm.part.select.i10is empty so ignored in Boogie
Function: llvm.dbg.valueis empty so ignored in Boogie
Function: _ssdm_op_SpecTopModuleis empty so ignored in Boogie
Function: _ssdm_op_SpecPipelineis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopTripCountis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopNameis empty so ignored in Boogie
Function: _ssdm_op_SpecBitsMapis empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i8.i11.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i7.i10.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i52.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i11.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_BitConcatenate.i10.i7.i3is empty so ignored in Boogie
Function: _ssdm_SpecDependenceis empty so ignored in Boogie
Found total 83 states.
Boogie generated successfully.

****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vitis/2020.1/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vitis/2020.1/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'vagrant' on host 'ubuntu-bionic' (Linux_x86_64 version 4.15.0-118-generic) ​‌​
on Sat Oct 10 18:05:35 UTC 2020
INFO: [HLS 200-10] On os Ubuntu 18.04.5 LTS
INFO: [HLS 200-10] In directory '/shared/iiProver/examples/vecTrans'
Sourcing Tcl script 'iter.tcl'
INFO: [HLS 200-10] Opening project '/shared/iiProver/examples/vecTrans/proj'.
INFO: [HLS 200-10] Opening and resetting solution '/shared/iiProver/examples/vecTrans/proj/soluion1'.
INFO: [HLS 200-10] Cleaning up the solution database.
WARNING: [HLS 200-40] No /shared/iiProver/examples/vecTrans/proj/soluion1/soluion1.aps file found.
INFO: [HLS 200-1505] Using default flow_target 'vivado'
Resolution: For help on HLS 200-1505 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-1505.htm​‌​
l
ERROR: [HLS 200-70] 'csynth_design' failed due to missing target device. Please use command 'set_part' t​‌​
o specify the target device.
Elaboration failed: no synthesis library found.
    while executing
"source iter.tcl"
    invoked from within
"hls::main iter.tcl"
    ("uplevel" body line 1)
    invoked from within
"uplevel 1 hls::main {*}$args"
    (procedure "hls_proc" line 5)
    invoked from within
"hls_proc $argv"
INFO: [Common 17-206] Exiting vitis_hls at Sat Oct 10 18:05:35 2020...
/shared/dass/llvm-6.0/bin/opt: vecTrans/proj/soluion1/.autopilot/db/a.o.3.bc: error: Could not open inpu​‌​
t file: No such file or directory
^C^CMakefile:14: recipe for target 'full' failed
make: *** [full] Interrupt

vagrant@ubuntu-bionic:/shared/iiProver/examples$ ^C
vagrant@ubuntu-bionic:/shared/iiProver/examples$ cat vecTrans/src/vecTrans.cpp                          
#include "vecTrans.h"

void vecTrans(double A[1000]){
#pragma HLS ARRAY_PARTITION variable=A block factor=2 dim=1
        for (int i = 0; i < 100; i++){
        //#pragma HLS PIPELINE
        #pragma HLS PIPELINE II=2
        #pragma HLS DEPENDENCE variable=A array inter false
            double a = A[i];
            if (a > 100.0){
                double b = (((((a+0.64)*a+0.7)*a+0.21)*a+0.33)*a+0.25)*a+0.125;
                A[i+63] = b;
            }
                else {
                double b = a*a;
                A[i+9] = b;
            }
        }
}
vagrant@ubuntu-bionic:/shared/iiProver/examples$ cat vecTrans/src/vecTrans_.cpp                         
#include "vecTrans.h"

void vecTrans(double A[1000]){
#pragma HLS ARRAY_PARTITION variable=A block factor=2 dim=1
        for (int i = 0; i < 100; i++){
         
#pragma HLS PIPELINE II=3
        #pragma HLS DEPENDENCE variable=A array inter false
            double a = A[i];
            if (a > 100.0){
                double b = (((((a+0.64)*a+0.7)*a+0.21)*a+0.33)*a+0.25)*a+0.125;
                A[i+63] = b;
            }
                else {
                double b = a*a;
                A[i+9] = b;
            }
        }
}
vagrant@ubuntu-bionic:/shared/iiProver/examples$ cat vecTrans/src/vecTrans_.cpp 
#include "vecTrans.h"

void vecTrans(double A[1000]){
#pragma HLS ARRAY_PARTITION variable=A block factor=2 dim=1
        for (int i = 0; i < 100; i++){
         
#pragma HLS PIPELINE II=3
        #pragma HLS DEPENDENCE variable=A array inter false
            double a = A[i];
            if (a > 100.0){
                double b = (((((a+0.64)*a+0.7)*a+0.21)*a+0.33)*a+0.25)*a+0.125;
                A[i+63] = b;
            }
                else {
                double b = a*a;
                A[i+9] = b;
            }
        }
}
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full                         
 ==================================================== 
 II prover for Vitis HLS v1.0 
 Written by Jianyi Cheng, Imperial College London 
 10/10/20 18:07:30
 ==================================================== 
Multiple pipelines found - now only support the analysis for a single loop.
Traceback (most recent call last):
  File "../src/iiProver.py", line 62, in <module>
    assert(0)
AssertionError
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full                         
 ==================================================== 
 II prover for Vitis HLS v1.0 
 Written by Jianyi Cheng, Imperial College London 
 10/10/20 18:07:49
 ==================================================== 
Multiple pipelines found - now only support the analysis for a single loop.
Traceback (most recent call last):
  File "../src/iiProver.py", line 56, in <module>
    assert(0)
AssertionError
vagrant@ubuntu-bionic:/shared/iiProver/examples$ rm vecTrans/src/vecTrans                               
vecTrans.cpp     vecTrans.h       vecTrans_.cpp    vecTrans__.cpp   vecTrans_tb.cpp  
vagrant@ubuntu-bionic:/shared/iiProver/examples$ rm vecTrans/src/vecTrans_.cpp 
vagrant@ubuntu-bionic:/shared/iiProver/examples$ rm vecTrans/src/vecTrans__.cpp                          
vagrant@ubuntu-bionic:/shared/iiProver/examples$ ls
Makefile  boogie.log  iiProver.log  loopCond  vecTrans
vagrant@ubuntu-bionic:/shared/iiProver/examples$ make name=vecTrans full                          

****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vitis/2020.1/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vitis/2020.1/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'vagrant' on host 'ubuntu-bionic' (Linux_x86_64 version 4.15.0-118-generic) ​‌​
on Sat Oct 10 18:08:03 UTC 2020
INFO: [HLS 200-10] On os Ubuntu 18.04.5 LTS
INFO: [HLS 200-10] In directory '/shared/iiProver/examples/vecTrans'
Sourcing Tcl script 'iiprover.tcl'
INFO: [HLS 200-10] Opening and resetting project '/shared/iiProver/examples/vecTrans/proj'.
WARNING: [HLS 200-40] No /shared/iiProver/examples/vecTrans/proj/soluion1/soluion1.aps file found.
INFO: [HLS 200-10] Adding design file 'src/vecTrans.h' to the project
INFO: [HLS 200-10] Adding design file 'src/vecTrans_.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/shared/iiProver/examples/vecTrans/proj/soluion1'.
INFO: [HLS 200-1505] Using default flow_target 'vivado'
Resolution: For help on HLS 200-1505 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-1505.htm​‌​
l
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Analyzing design file 'src/vecTrans_.cpp' ... 
WARNING: [HLS 207-1536] 'false' in '#pragma HLS dependence' is deprecated, and it will be removed in fut​‌​
ure release: src/vecTrans_.cpp:8:47
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:05 ; elapsed = 00:00:12 . Memory (MB): peak =​‌​
 1690.156 ; gain = 1293.770 ; free physical = 14668 ; free virtual = 15424
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:05 ; elapsed = 00:00:12 . Memory (MB​‌​
): peak = 1690.156 ; gain = 1293.770 ; free physical = 14668 ; free virtual = 15424
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:05 ; elapsed = 00:00:12 . Memory ​‌​
(MB): peak = 1690.156 ; gain = 1293.770 ; free physical = 14663 ; free virtual = 15419
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:05 ; elapsed = 00:00:12 . M​‌​
emory (MB): peak = 1690.156 ; gain = 1293.770 ; free physical = 14662 ; free virtual = 15418
INFO: [XFORM 203-101] Partitioning array 'A'  in dimension 1 with a block factor 2.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:05 ; elapsed = 00:00:12 . Memory (MB): ​‌​
peak = 1690.156 ; gain = 1293.770 ; free physical = 14642 ; free virtual = 15398
WARNING: [ANALYSIS 214-52] Found false inter dependency for variable 'A.0'.
WARNING: [ANALYSIS 214-52] Found false inter dependency for variable 'A.1'.
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:05 ; elapsed = 00:00:12 . Memo​‌​
ry (MB): peak = 1690.156 ; gain = 1293.770 ; free physical = 14641 ; free virtual = 15397
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'vecTrans' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'vecTrans' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_5_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 81.
WARNING: [HLS 200-871] Estimated clock period (7.416ns) exceeds the target (target clock period: 10ns, c​‌​
lock uncertainty: 2.7ns, effective delay budget: 7.3ns).
Resolution: For help on HLS 200-871 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-871.html
WARNING: [HLS 200-1016] The critical path in module 'vecTrans' consists of the following:       'dadd' o​‌​
peration ('add', src/vecTrans_.cpp:11) [40]  (7.3 ns)
        blocking operation 0.119 ns on control path)

Resolution: For help on HLS 200-1016 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-1016.htm​‌​
l
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 12.04 seconds; current allocated memory: 142.038 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 142.729 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'vecTrans' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'vecTrans/A_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'vecTrans/A_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'vecTrans' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_address0' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_we0' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_d0' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_address1' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_we1' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_d1' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-104] Estimated max fanout for 'vecTrans' is 9435 from HDL expression: (1'b0 == ap_block​‌​
_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_7_full_dsp_1': 6 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_7_max_dsp_1': 6 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'vecTrans'.
INFO: [HLS 200-111]  Elapsed time: 0.24 seconds; current allocated memory: 144.698 MB.
ETP: found array_partition regexp: A_\d+ : A_0 A_1 
ETP: A_0 -> A_0_address0 -> A_0_address0  (bram data virtual)
ETP: A_0 -> A_0_ce0 -> A_0_ce0  (bram data virtual)
ETP: A_0 -> A_0_we0 -> A_0_we0  (bram data virtual)
ETP: A_0 -> A_0_d0 -> A_0_d0  (bram data virtual)
ETP: A_0 -> A_0_address1 -> A_0_address1  (bram data virtual)
ETP: A_0 -> A_0_ce1 -> A_0_ce1  (bram data virtual)
ETP: A_0 -> A_0_q1 -> A_0_q1  (bram data virtual)
ETP: A_1 -> A_1_address0 -> A_1_address0  (bram data virtual)
ETP: A_1 -> A_1_ce0 -> A_1_ce0  (bram data virtual)
ETP: A_1 -> A_1_we0 -> A_1_we0  (bram data virtual)
ETP: A_1 -> A_1_d0 -> A_1_d0  (bram data virtual)
ETP: A_1 -> A_1_q0 -> A_1_q0  (bram data virtual)
ETP: A_1 -> A_1_address1 -> A_1_address1  (bram data virtual)
ETP: A_1 -> A_1_ce1 -> A_1_ce1  (bram data virtual)
ETP: A_1 -> A_1_we1 -> A_1_we1  (bram data virtual)
ETP: A_1 -> A_1_d1 -> A_1_d1  (bram data virtual)
ETP: A_1 -> A_1_q1 -> A_1_q1  (bram data virtual)
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:06 ; elapsed = 00:00:15 . M​‌​
emory (MB): peak = 1690.156 ; gain = 1293.770 ; free physical = 14632 ; free virtual = 15388
INFO: [VHDL 208-304] Generating VHDL RTL for vecTrans.
INFO: [VLOG 209-307] Generating Verilog RTL for vecTrans.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 134.84 MHz
INFO: [HLS 200-112] Total elapsed time: 15.01 seconds; peak allocated memory: 144.698 MB.
INFO: [Common 17-206] Exiting vitis_hls at Sat Oct 10 18:08:18 2020...
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !51
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !51
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !35
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !69
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !69
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !53
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !53
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !53
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !53
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !53
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !35
Removing   %mul = fmul double undef, undef, !bitwidth !35
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !35
Removing   %mul3 = fmul double undef, undef, !bitwidth !35
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !35
Removing   %mul5 = fmul double undef, undef, !bitwidth !35
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !35
Removing   %mul7 = fmul double undef, undef, !bitwidth !35
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !35
Removing   %mul9 = fmul double undef, undef, !bitwidth !35
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !35
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !35
Removing   %b_1 = fmul double undef, undef, !bitwidth !35
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !35
Found 1 phi nodes.
Function: llvm.part.select.i64is empty so ignored in Boogie
Function: llvm.part.select.i11is empty so ignored in Boogie
Function: llvm.part.select.i10is empty so ignored in Boogie
Function: llvm.dbg.valueis empty so ignored in Boogie
Function: _ssdm_op_SpecTopModuleis empty so ignored in Boogie
Function: _ssdm_op_SpecPipelineis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopTripCountis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopNameis empty so ignored in Boogie
Function: _ssdm_op_SpecBitsMapis empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i8.i11.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i7.i10.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i52.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i11.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_BitConcatenate.i10.i7.i3is empty so ignored in Boogie
Function: _ssdm_SpecDependenceis empty so ignored in Boogie
Found total 83 states.
Boogie generated successfully.

****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source /tools/Xilinx/Vitis/2020.1/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] Running '/tools/Xilinx/Vitis/2020.1/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'vagrant' on host 'ubuntu-bionic' (Linux_x86_64 version 4.15.0-118-generic) ​‌​
on Sat Oct 10 18:08:22 UTC 2020
INFO: [HLS 200-10] On os Ubuntu 18.04.5 LTS
INFO: [HLS 200-10] In directory '/shared/iiProver/examples/vecTrans'
Sourcing Tcl script 'iiprover.tcl'
INFO: [HLS 200-10] Opening and resetting project '/shared/iiProver/examples/vecTrans/proj'.
WARNING: [HLS 200-40] No /shared/iiProver/examples/vecTrans/proj/soluion1/soluion1.aps file found.
INFO: [HLS 200-10] Adding design file 'src/vecTrans.h' to the project
INFO: [HLS 200-10] Adding design file 'src/vecTrans_.cpp' to the project
INFO: [HLS 200-10] Creating and opening solution '/shared/iiProver/examples/vecTrans/proj/soluion1'.
INFO: [HLS 200-1505] Using default flow_target 'vivado'
Resolution: For help on HLS 200-1505 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-1505.htm​‌​
l
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg484-1'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Analyzing design file 'src/vecTrans_.cpp' ... 
WARNING: [HLS 207-1536] 'false' in '#pragma HLS dependence' is deprecated, and it will be removed in fut​‌​
ure release: src/vecTrans_.cpp:8:47
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:05 ; elapsed = 00:00:14 . Memory (MB): peak =​‌​
 1690.156 ; gain = 1293.770 ; free physical = 14667 ; free virtual = 15423
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:05 ; elapsed = 00:00:14 . Memory (MB​‌​
): peak = 1690.156 ; gain = 1293.770 ; free physical = 14667 ; free virtual = 15423
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:05 ; elapsed = 00:00:14 . Memory ​‌​
(MB): peak = 1690.156 ; gain = 1293.770 ; free physical = 14662 ; free virtual = 15418
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:05 ; elapsed = 00:00:14 . M​‌​
emory (MB): peak = 1690.156 ; gain = 1293.770 ; free physical = 14662 ; free virtual = 15418
INFO: [XFORM 203-101] Partitioning array 'A'  in dimension 1 with a block factor 2.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:05 ; elapsed = 00:00:14 . Memory (MB): ​‌​
peak = 1690.156 ; gain = 1293.770 ; free physical = 14641 ; free virtual = 15397
WARNING: [ANALYSIS 214-52] Found false inter dependency for variable 'A.0'.
WARNING: [ANALYSIS 214-52] Found false inter dependency for variable 'A.1'.
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:05 ; elapsed = 00:00:14 . Memo​‌​
ry (MB): peak = 1690.156 ; gain = 1293.770 ; free physical = 14640 ; free virtual = 15396
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'vecTrans' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'vecTrans' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_5_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 82.
WARNING: [HLS 200-871] Estimated clock period (7.416ns) exceeds the target (target clock period: 10ns, c​‌​
lock uncertainty: 2.7ns, effective delay budget: 7.3ns).
Resolution: For help on HLS 200-871 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-871.html
WARNING: [HLS 200-1016] The critical path in module 'vecTrans' consists of the following:       'dadd' o​‌​
peration ('add', src/vecTrans_.cpp:11) [40]  (7.3 ns)
        blocking operation 0.119 ns on control path)

Resolution: For help on HLS 200-1016 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-1016.htm​‌​
l
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 14.33 seconds; current allocated memory: 142.023 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 142.702 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'vecTrans' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'vecTrans/A_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'vecTrans/A_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'vecTrans' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_address0' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_we0' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_d0' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_address1' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_we1' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'vecTrans/A_1_d1' to 0.
WARNING: [RTGEN 206-101] Port 'vecTrans/A_1_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Generating core module 'dadd_64ns_64ns_64_7_full_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dcmp_64ns_64ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'dmul_64ns_64ns_64_7_max_dsp_1': 3 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'vecTrans'.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 144.035 MB.
ETP: found array_partition regexp: A_\d+ : A_0 A_1 
ETP: A_0 -> A_0_address0 -> A_0_address0  (bram data virtual)
ETP: A_0 -> A_0_ce0 -> A_0_ce0  (bram data virtual)
ETP: A_0 -> A_0_we0 -> A_0_we0  (bram data virtual)
ETP: A_0 -> A_0_d0 -> A_0_d0  (bram data virtual)
ETP: A_0 -> A_0_address1 -> A_0_address1  (bram data virtual)
ETP: A_0 -> A_0_ce1 -> A_0_ce1  (bram data virtual)
ETP: A_0 -> A_0_q1 -> A_0_q1  (bram data virtual)
ETP: A_1 -> A_1_address0 -> A_1_address0  (bram data virtual)
ETP: A_1 -> A_1_ce0 -> A_1_ce0  (bram data virtual)
ETP: A_1 -> A_1_we0 -> A_1_we0  (bram data virtual)
ETP: A_1 -> A_1_d0 -> A_1_d0  (bram data virtual)
ETP: A_1 -> A_1_q0 -> A_1_q0  (bram data virtual)
ETP: A_1 -> A_1_address1 -> A_1_address1  (bram data virtual)
ETP: A_1 -> A_1_ce1 -> A_1_ce1  (bram data virtual)
ETP: A_1 -> A_1_we1 -> A_1_we1  (bram data virtual)
ETP: A_1 -> A_1_d1 -> A_1_d1  (bram data virtual)
ETP: A_1 -> A_1_q1 -> A_1_q1  (bram data virtual)
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:06 ; elapsed = 00:00:18 . M​‌​
emory (MB): peak = 1690.156 ; gain = 1293.770 ; free physical = 14632 ; free virtual = 15388
INFO: [VHDL 208-304] Generating VHDL RTL for vecTrans.
INFO: [VLOG 209-307] Generating Verilog RTL for vecTrans.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 134.84 MHz
INFO: [HLS 200-112] Total elapsed time: 17.77 seconds; peak allocated memory: 144.035 MB.
INFO: [Common 17-206] Exiting vitis_hls at Sat Oct 10 18:08:39 2020...
warning: ignoring debug info with an invalid version (0) in vecTrans/proj/soluion1/.autopilot/db/a.o.3.b​‌​
c
=================================
         II Prover: vecTrans
=================================
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_1), !map !52
Removing   call void (...) @_ssdm_op_SpecBitsMap([500 x i64]* %A_0), !map !52
Removing   call void (...) @_ssdm_op_SpecTopModule([9 x i8]* @empty_0) #2
Removing   call void (...) @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 0, i32 0, [1 x i8]* @empty) #2
Removing   call void (...) @_ssdm_op_SpecLoopName([15 x i8]* @empty_1) #2
Removing   %a = bitcast i64 %A_0_load to double, !bitwidth !37
Removing   %tmp = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %A_0_load, i32 52, i32 62), !bitwidt​‌​
h !70
Removing   %trunc_ln10 = trunc i64 %A_0_load to i52, !bitwidth !70
Removing   %icmp_ln10 = icmp ne i11 undef, -1, !bitwidth !54
Removing   %icmp_ln10_1 = icmp eq i52 undef, 0, !bitwidth !54
Removing   %or_ln10 = or i1 undef, undef, !bitwidth !54
Removing   %tmp_1 = fcmp ogt double undef, 1.000000e+02, !bitwidth !54
Removing   %and_ln10 = and i1 undef, undef, !bitwidth !54
Removing   %add = fadd double undef, 6.400000e-01, !bitwidth !37
Removing   %mul = fmul double undef, undef, !bitwidth !37
Removing   %add2 = fadd double undef, 0x3FE6666666666666, !bitwidth !37
Removing   %mul3 = fmul double undef, undef, !bitwidth !37
Removing   %add4 = fadd double undef, 2.100000e-01, !bitwidth !37
Removing   %mul5 = fmul double undef, undef, !bitwidth !37
Removing   %add6 = fadd double undef, 3.300000e-01, !bitwidth !37
Removing   %mul7 = fmul double undef, undef, !bitwidth !37
Removing   %add8 = fadd double undef, 2.500000e-01, !bitwidth !37
Removing   %mul9 = fmul double undef, undef, !bitwidth !37
Removing   %b = fadd double undef, 1.250000e-01, !bitwidth !37
Removing   %bitcast_ln12 = bitcast double undef to i64, !bitwidth !37
Removing   %b_1 = fmul double undef, undef, !bitwidth !37
Removing   %bitcast_ln16 = bitcast double undef to i64, !bitwidth !37
Found 1 phi nodes.
Function: llvm.part.select.i64is empty so ignored in Boogie
Function: llvm.part.select.i11is empty so ignored in Boogie
Function: llvm.part.select.i10is empty so ignored in Boogie
Function: llvm.dbg.valueis empty so ignored in Boogie
Function: _ssdm_op_SpecTopModuleis empty so ignored in Boogie
Function: _ssdm_op_SpecPipelineis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopTripCountis empty so ignored in Boogie
Function: _ssdm_op_SpecLoopNameis empty so ignored in Boogie
Function: _ssdm_op_SpecBitsMapis empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i8.i11.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i7.i10.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i52.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_PartSelect.i11.i64.i32.i32is empty so ignored in Boogie
Function: _ssdm_op_BitConcatenate.i10.i7.i3is empty so ignored in Boogie
Function: _ssdm_SpecDependenceis empty so ignored in Boogie
Found total 84 states.
Boogie generated successfully.
 ==================================================== 
 II prover for Vitis HLS v1.0 
 Written by Jianyi Cheng, Imperial College London 
 10/10/20 18:08:00
 ==================================================== 
preprocess successfully.
proving II = 1...Failed
proving II = 2...Success
Found the optimal II = 2
vagrant@ubuntu-bionic:/shared/iiProver/examples$ ls                                                     
Makefile  boogie.log  iiProver.log  loopCond  vecTrans
vagrant@ubuntu-bionic:/shared/iiProver/examples$ ls vecTrans/                                           
cosim.tcl  iiprover.tcl  iter.tcl  output.bpl  proj  src  syn.tcl  vecTrans.cpp  vitis_hls.log
vagrant@ubuntu-bionic:/shared/iiProver/examples$ 